'use strict';

var _tslib = require('../../chunks/bundle-BSZgogl8.js');
var React = require('react');
var Thread_components_ThreadListItem = require('./ThreadListItem.js');
var Thread_context = require('../context.js');
var Channel_utils_compareMessagesForGrouping = require('../../Channel/utils/compareMessagesForGrouping.js');
var useSendbirdStateContext = require('../../useSendbirdStateContext.js');
var dateFns = require('date-fns');
var Message_context = require('../../Message/context.js');
var resolvedReplyType = require('../../chunks/bundle-BV2SpuVS.js');
require('../../chunks/bundle-Cmc_F-zF.js');
require('../../chunks/bundle-C6bh_Eny.js');
require('../../chunks/bundle-B9Jxp8fA.js');
require('../../chunks/bundle-BZCLEq3c.js');
require('../../chunks/bundle-CqS517qU.js');
require('../../ui/DateSeparator.js');
require('../../chunks/bundle-ikSCkayP.js');
require('../../chunks/bundle-CLsH2CaE.js');
require('../../chunks/bundle-6znhfpIB.js');
require('../../chunks/bundle-BCx4TP9R.js');
require('../../chunks/bundle-E1Tkj9Pc.js');
require('@sendbird/chat/groupChannel');
require('../../utils/message/getOutgoingMessageState.js');
require('../../chunks/bundle-BafSf9GJ.js');
require('../../chunks/bundle-BsUVmQmx.js');
require('react-dom');
require('../../chunks/bundle-DW5WyVEg.js');
require('../../ui/IconButton.js');
require('../../ui/Button.js');
require('../../ui/Icon.js');
require('@sendbird/uikit-tools');
require('../../withSendbird.js');
require('css-vars-ponyfill');
require('@sendbird/chat');
require('../../chunks/bundle-DAzWBBxC.js');
require('@sendbird/chat/openChannel');
require('../../chunks/bundle-BimZhXdJ.js');
require('../../chunks/bundle-COzM5cWS.js');
require('../../chunks/bundle-5SGoePaQ.js');
require('../../ui/SortByRow.js');
require('../../chunks/bundle-DYiRJpFp.js');
require('../../ui/FileViewer.js');
require('../../chunks/bundle-Cq7gxYWj.js');
require('../../ui/ImageRenderer.js');
require('../../chunks/bundle-CGBazQAC.js');
require('../../chunks/bundle-BTdldoB1.js');
require('../../chunks/bundle-BXenYVc5.js');
require('../../chunks/bundle-43QCjeGi.js');
require('../../chunks/bundle-BhgTi0HE.js');
require('../../chunks/bundle-B8BijbtU.js');
require('../../ui/MessageInput.js');
require('../../chunks/bundle-Db2msOTT.js');
require('dompurify');
require('../../chunks/bundle-DPZ5pgOH.js');
require('../../chunks/bundle-CC7ewM-Z.js');
require('../../chunks/bundle-CwwjS2wm.js');
require('../../chunks/bundle-B0yVr4jS.js');
require('../context/types.js');
require('../../chunks/bundle-C0HSA_B2.js');
require('../../ui/UserProfile.js');
require('../../sendbirdSelectors.js');
require('../../chunks/bundle-B8eM_7mB.js');
require('../../ui/MessageItemReactionMenu.js');
require('../../ui/ReactionButton.js');
require('../../chunks/bundle-CteyVr3n.js');
require('../../chunks/bundle-BTnBDw_3.js');
require('../../ui/Loader.js');
require('../../chunks/bundle-B8d4gIYz.js');
require('../../chunks/bundle-DBvrEPDQ.js');
require('../../ui/EmojiReactions.js');
require('../../ui/ReactionBadge.js');
require('../../ui/BottomSheet.js');
require('../../ui/UserListItem.js');
require('../../ui/MutedAvatarOverlay.js');
require('../../ui/Checkbox.js');
require('../../ui/Tooltip.js');
require('../../ui/TooltipWrapper.js');
require('../../chunks/bundle-B2fSsGeZ.js');
require('../../ui/TextMessageItemBody.js');
require('../../chunks/bundle-D58niGxd.js');
require('../../ui/MentionLabel.js');
require('../../ui/LinkLabel.js');
require('../../ui/OGMessageItemBody.js');
require('../../ui/FileMessageItemBody.js');
require('../../ui/TextButton.js');
require('../../ui/ThumbnailMessageItemBody.js');
require('../../chunks/bundle-BInYg-47.js');
require('../../ui/UnknownMessageItemBody.js');
require('../../ui/VoiceMessageItemBody.js');
require('../../ui/ProgressBar.js');
require('../../VoicePlayer/useVoicePlayer.js');
require('../../ui/PlaybackTime.js');
require('../../ui/MobileMenu.js');
require('../../chunks/bundle-D2E4FfSM.js');
require('@sendbird/chat/message');
require('../../chunks/bundle-DFDL4gbf.js');
require('../../chunks/bundle-CuQr5jRg.js');
require('../../chunks/bundle-D1D4kiAc.js');
require('../../Message/hooks/useDirtyGetMentions.js');
require('../../chunks/bundle-RZyJVP0m.js');
require('../../chunks/bundle-xw9pjZRm.js');
require('../../chunks/bundle-D8QV4Pzq.js');
require('../../chunks/bundle-Co8lVUvq.js');

function _interopDefaultCompat (e) { return e && typeof e === 'object' && 'default' in e ? e : { default: e }; }

var React__default = /*#__PURE__*/_interopDefaultCompat(React);

function ThreadList(_a) {
    var className = _a.className, _b = _a.renderMessage, renderMessage = _b === void 0 ? function (props) { return React__default.default.createElement(Thread_components_ThreadListItem, _tslib.__assign({}, props)); } : _b, renderCustomSeparator = _a.renderCustomSeparator, scrollRef = _a.scrollRef, scrollBottom = _a.scrollBottom;
    var config = useSendbirdStateContext.useSendbirdStateContext().config;
    var userId = config.userId;
    var _c = Thread_context.useThreadContext(), currentChannel = _c.currentChannel, allThreadMessages = _c.allThreadMessages, localThreadMessages = _c.localThreadMessages;
    return (React__default.default.createElement("div", { className: "sendbird-thread-list ".concat(className) },
        allThreadMessages.map(function (message, idx) {
            var _a;
            var isByMe = ((_a = message === null || message === void 0 ? void 0 : message.sender) === null || _a === void 0 ? void 0 : _a.userId) === userId;
            var prevMessage = allThreadMessages[idx - 1];
            var nextMessage = allThreadMessages[idx + 1];
            // eslint-disable-next-line no-constant-condition
            var _b = Channel_utils_compareMessagesForGrouping.compareMessagesForGrouping(prevMessage, message, nextMessage, currentChannel, resolvedReplyType.getCaseResolvedReplyType(config.groupChannel.replyType).upperCase)
                , chainTop = _b[0], chainBottom = _b[1];
            var hasSeparator = !((prevMessage === null || prevMessage === void 0 ? void 0 : prevMessage.createdAt) > 0 && (dateFns.isSameDay(message === null || message === void 0 ? void 0 : message.createdAt, prevMessage === null || prevMessage === void 0 ? void 0 : prevMessage.createdAt)));
            var handleScroll = function () {
                var current = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;
                if (current && scrollBottom) {
                    var bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;
                    if (scrollBottom < bottom) {
                        current.scrollTop += bottom - scrollBottom;
                    }
                }
            };
            return (React__default.default.createElement(Message_context.MessageProvider, { message: message, isByMe: isByMe, key: message === null || message === void 0 ? void 0 : message.messageId }, renderMessage({
                message: message,
                chainTop: chainTop,
                chainBottom: chainBottom,
                hasSeparator: hasSeparator,
                renderCustomSeparator: renderCustomSeparator,
                handleScroll: handleScroll,
            })));
        }),
        localThreadMessages.map(function (message) {
            var _a;
            var isByMe = ((_a = message === null || message === void 0 ? void 0 : message.sender) === null || _a === void 0 ? void 0 : _a.userId) === userId;
            var handleScroll = function () {
                var current = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;
                if (current) {
                    var bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;
                    if (scrollBottom < bottom) {
                        current.scrollTop += bottom - scrollBottom;
                    }
                }
            };
            return (React__default.default.createElement(Message_context.MessageProvider, { message: message, isByMe: isByMe, key: message === null || message === void 0 ? void 0 : message.messageId }, renderMessage({
                message: message,
                hasSeparator: false,
                renderCustomSeparator: renderCustomSeparator,
                handleScroll: handleScroll,
            })));
        })));
}

module.exports = ThreadList;
//# sourceMappingURL=ThreadList.js.map
