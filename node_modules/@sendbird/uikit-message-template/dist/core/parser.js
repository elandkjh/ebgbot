// -------- Set property mapper
import { ComponentType, CompositeComponentType, } from '../types/components';
const MAPPER = () => undefined;
export const createParser = (params) => {
    const defaultMapper = (params === null || params === void 0 ? void 0 : params.defaultMapper) || MAPPER;
    const mapper = {
        defaultMapper,
        mapBoxProps: (params === null || params === void 0 ? void 0 : params.mapBoxProps) || defaultMapper,
        mapTextProps: (params === null || params === void 0 ? void 0 : params.mapTextProps) || defaultMapper,
        mapImageProps: (params === null || params === void 0 ? void 0 : params.mapImageProps) || defaultMapper,
        mapTextButtonProps: (params === null || params === void 0 ? void 0 : params.mapTextButtonProps) || defaultMapper,
        mapImageButtonProps: (params === null || params === void 0 ? void 0 : params.mapImageButtonProps) || defaultMapper,
        mapCarouselProps: (params === null || params === void 0 ? void 0 : params.mapCarouselProps) || defaultMapper,
    };
    const transforms = (params === null || params === void 0 ? void 0 : params.transforms) || [];
    return {
        parse(rawItem, options) {
            const item = transforms.reduce((it, transform) => transform(it), rawItem);
            switch (item.type) {
                case ComponentType.Box: {
                    return { properties: mapper.mapBoxProps(item, options) };
                }
                case ComponentType.Text: {
                    return { properties: mapper.mapTextProps(item, options) };
                }
                case ComponentType.Image: {
                    return { properties: mapper.mapImageProps(item, options) };
                }
                case ComponentType.TextButton: {
                    return { properties: mapper.mapTextButtonProps(item, options) };
                }
                case ComponentType.ImageButton: {
                    return { properties: mapper.mapImageButtonProps(item, options) };
                }
                case CompositeComponentType.Carousel: {
                    return { properties: mapper.mapCarouselProps(item, options) };
                }
                default:
                    return { properties: undefined };
            }
        },
    };
};
export const DEFAULT_PARSER_VALUES = {
    light: { _: undefined },
    dark: { _: undefined },
};
