{"ast":null,"code":"import React__default, { useContext, useMemo, useRef, useEffect } from 'react';\nimport ImageRenderer from './ImageRenderer.js';\nimport Icon, { IconTypes } from './Icon.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../chunks/bundle-DhKQeIfP.js';\nimport { w as getClassName, d as isEditedMessage } from '../chunks/bundle-DxTN4_0p.js';\nimport { L as LocalizationContext } from '../chunks/bundle-cQZ3UZoG.js';\nimport { T as TextFragment } from '../chunks/bundle-DofK8ySe.js';\nimport { t as tokenizeMessage } from '../chunks/bundle-GUbI4JcD.js';\nimport { O as OG_MESSAGE_BODY_CLASSNAME } from '../chunks/bundle-DhGZA5UP.js';\nimport { u as useMediaQueryContext } from '../chunks/bundle-f-SpnOx2.js';\nimport { o as openURL, c as classnames } from '../chunks/bundle-BgwzpLeQ.js';\nimport '../chunks/bundle-BQi9-O76.js';\nimport '../chunks/bundle-Bwk5KPwK.js';\nimport '@sendbird/chat/groupChannel';\nimport '../utils/message/getOutgoingMessageState.js';\nimport '../chunks/bundle-CNWAfTVw.js';\nimport '../chunks/bundle-CA85nVxp.js';\nimport '../chunks/bundle-bdDHjHH6.js';\nimport '../Message/context.js';\nimport './MentionLabel.js';\nimport '../chunks/bundle-CwKZj-B6.js';\nimport 'react-dom';\nimport '@sendbird/chat';\nimport '@sendbird/chat/openChannel';\nimport './SortByRow.js';\nimport '../chunks/bundle-etuaqevl.js';\nimport '../withSendbird.js';\nimport './IconButton.js';\nimport './UserProfile.js';\nimport '../chunks/bundle-BrTJ5Zbd.js';\nimport '../sendbirdSelectors.js';\nimport '../chunks/bundle-b6TpX_JP.js';\nimport '../chunks/bundle-CFosTNce.js';\nimport '../chunks/bundle-DXRRGizV.js';\nimport './Button.js';\nimport '../useSendbirdStateContext.js';\nimport './LinkLabel.js';\nfunction OGMessageItemBody(_a) {\n  var _b, _c, _d, _e;\n  var className = _a.className,\n    message = _a.message,\n    _f = _a.isByMe,\n    isByMe = _f === void 0 ? false : _f,\n    _g = _a.mouseHover,\n    mouseHover = _g === void 0 ? false : _g,\n    _h = _a.isMentionEnabled,\n    isMentionEnabled = _h === void 0 ? false : _h,\n    _j = _a.isReactionEnabled,\n    isReactionEnabled = _j === void 0 ? false : _j,\n    _k = _a.isMarkdownEnabled,\n    isMarkdownEnabled = _k === void 0 ? false : _k,\n    _l = _a.onMessageHeightChange,\n    onMessageHeightChange = _l === void 0 ? function () {\n      /* noop */\n    } : _l;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var isMessageMentioned = isMentionEnabled && ((_b = message === null || message === void 0 ? void 0 : message.mentionedMessageTemplate) === null || _b === void 0 ? void 0 : _b.length) > 0 && (message === null || message === void 0 ? void 0 : message.mentionedUsers) && ((_c = message === null || message === void 0 ? void 0 : message.mentionedUsers) === null || _c === void 0 ? void 0 : _c.length) > 0;\n  var tokens = useMemo(function () {\n    var _a;\n    if (isMessageMentioned) {\n      return tokenizeMessage({\n        mentionedUsers: (_a = message === null || message === void 0 ? void 0 : message.mentionedUsers) !== null && _a !== void 0 ? _a : undefined,\n        messageText: message === null || message === void 0 ? void 0 : message.mentionedMessageTemplate,\n        includeMarkdown: isMarkdownEnabled\n      });\n    }\n    return tokenizeMessage({\n      messageText: message === null || message === void 0 ? void 0 : message.message,\n      includeMarkdown: isMarkdownEnabled\n    });\n  }, [message === null || message === void 0 ? void 0 : message.updatedAt, message === null || message === void 0 ? void 0 : message.message]);\n  var openOpenGraphURL = function () {\n    var _a;\n    return openURL((_a = message === null || message === void 0 ? void 0 : message.ogMetaData) === null || _a === void 0 ? void 0 : _a.url);\n  };\n  return React__default.createElement(\"div\", {\n    className: getClassName([className !== null && className !== void 0 ? className : '', 'sendbird-og-message-item-body', isByMe ? 'outgoing' : 'incoming', mouseHover ? 'mouse-hover' : '', isReactionEnabled && ((_d = message === null || message === void 0 ? void 0 : message.reactions) === null || _d === void 0 ? void 0 : _d.length) > 0 ? 'reactions' : ''])\n  }, React__default.createElement(Label, {\n    type: LabelTypography.BODY_1,\n    color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1\n  }, React__default.createElement(\"div\", {\n    className: OG_MESSAGE_BODY_CLASSNAME\n  }, React__default.createElement(TextFragment, {\n    tokens: tokens\n  }), isEditedMessage(message) && React__default.createElement(Label, {\n    className: \"sendbird-og-message-item-body__text-bubble__message\",\n    type: LabelTypography.BODY_1,\n    color: isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2\n  }, \" \".concat(stringSet.MESSAGE_EDITED, \" \")))), ((_e = message.ogMetaData) === null || _e === void 0 ? void 0 : _e.defaultImage) && React__default.createElement(OGImageSection, {\n    onClick: openOpenGraphURL,\n    ogImage: message.ogMetaData.defaultImage,\n    onMessageHeightChange: onMessageHeightChange\n  }), message.ogMetaData && React__default.createElement(OGDescriptionSection, {\n    onClick: openOpenGraphURL,\n    ogMetaData: message.ogMetaData,\n    onMessageHeightChange: onMessageHeightChange\n  }), React__default.createElement(\"div\", {\n    className: \"sendbird-og-message-item-body__cover\"\n  }));\n}\nvar OGImageSection = function (props) {\n  var onClick = props.onClick,\n    ogImage = props.ogImage,\n    onMessageHeightChange = props.onMessageHeightChange;\n  var imageRef = useRef(null);\n  var isMobile = useMediaQueryContext().isMobile;\n  return React__default.createElement(\"div\", {\n    ref: imageRef,\n    className: classnames('sendbird-og-message-item-body__og-thumbnail', !ogImage.url && 'sendbird-og-message-item-body__og-thumbnail__empty'),\n    onClick: function () {\n      return onClick();\n    }\n  }, React__default.createElement(ImageRenderer, {\n    className: \"sendbird-og-message-item-body__og-thumbnail__image\",\n    url: ogImage.url || '',\n    alt: ogImage.alt || '',\n    width: \"100%\",\n    height: isMobile ? '136px' : '240px',\n    onLoad: onMessageHeightChange,\n    onError: function () {\n      var _a, _b;\n      try {\n        (_b = (_a = imageRef === null || imageRef === void 0 ? void 0 : imageRef.current) === null || _a === void 0 ? void 0 : _a.classList) === null || _b === void 0 ? void 0 : _b.add('sendbird-og-message-item-body__og-thumbnail__empty');\n      } catch (error) {\n        // do nothing\n      }\n    },\n    defaultComponent: React__default.createElement(\"div\", {\n      className: \"sendbird-og-message-item-body__og-thumbnail__place-holder\"\n    }, React__default.createElement(Icon, {\n      className: \"sendbird-og-message-item-body__og-thumbnail__place-holder__icon\",\n      type: IconTypes.THUMBNAIL_NONE,\n      width: \"56px\",\n      height: \"56px\"\n    }))\n  }));\n};\nvar OGDescriptionSection = function (props) {\n  var onClick = props.onClick,\n    ogMetaData = props.ogMetaData,\n    onMessageHeightChange = props.onMessageHeightChange;\n  useEffect(function () {\n    onMessageHeightChange();\n  }, [ogMetaData.title, ogMetaData.description, ogMetaData.url]);\n  return React__default.createElement(\"div\", {\n    className: \"sendbird-og-message-item-body__description\",\n    onClick: function () {\n      return onClick();\n    }\n  }, ogMetaData.title && React__default.createElement(Label, {\n    className: \"sendbird-og-message-item-body__description__title\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, ogMetaData.title), ogMetaData.description && React__default.createElement(Label, {\n    className: \"sendbird-og-message-item-body__description__description\",\n    type: LabelTypography.BODY_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, ogMetaData.description), ogMetaData.url && React__default.createElement(Label, {\n    className: \"sendbird-og-message-item-body__description__url\",\n    type: LabelTypography.CAPTION_3,\n    color: LabelColors.ONBACKGROUND_2\n  }, ogMetaData.url));\n};\nexport { OGMessageItemBody as default };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import React__default, { useContext, useMemo, useRef, useEffect } from 'react';\nimport ImageRenderer from './ImageRenderer.js';\nimport Icon, { IconTypes } from './Icon.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../chunks/bundle-DhKQeIfP.js';\nimport { w as getClassName, d as isEditedMessage } from '../chunks/bundle-DxTN4_0p.js';\nimport { L as LocalizationContext } from '../chunks/bundle-cQZ3UZoG.js';\nimport { T as TextFragment } from '../chunks/bundle-DofK8ySe.js';\nimport { t as tokenizeMessage } from '../chunks/bundle-GUbI4JcD.js';\nimport { O as OG_MESSAGE_BODY_CLASSNAME } from '../chunks/bundle-DhGZA5UP.js';\nimport { u as useMediaQueryContext } from '../chunks/bundle-f-SpnOx2.js';\nimport { o as openURL, c as classnames } from '../chunks/bundle-BgwzpLeQ.js';\nimport '../chunks/bundle-BQi9-O76.js';\nimport '../chunks/bundle-Bwk5KPwK.js';\nimport '@sendbird/chat/groupChannel';\nimport '../utils/message/getOutgoingMessageState.js';\nimport '../chunks/bundle-CNWAfTVw.js';\nimport '../chunks/bundle-CA85nVxp.js';\nimport '../chunks/bundle-bdDHjHH6.js';\nimport '../Message/context.js';\nimport './MentionLabel.js';\nimport '../chunks/bundle-CwKZj-B6.js';\nimport 'react-dom';\nimport '@sendbird/chat';\nimport '@sendbird/chat/openChannel';\nimport './SortByRow.js';\nimport '../chunks/bundle-etuaqevl.js';\nimport '../withSendbird.js';\nimport './IconButton.js';\nimport './UserProfile.js';\nimport '../chunks/bundle-BrTJ5Zbd.js';\nimport '../sendbirdSelectors.js';\nimport '../chunks/bundle-b6TpX_JP.js';\nimport '../chunks/bundle-CFosTNce.js';\nimport '../chunks/bundle-DXRRGizV.js';\nimport './Button.js';\nimport '../useSendbirdStateContext.js';\nimport './LinkLabel.js';\n\nfunction OGMessageItemBody(_a) {\n    var _b, _c, _d, _e;\n    var className = _a.className, message = _a.message, _f = _a.isByMe, isByMe = _f === void 0 ? false : _f, _g = _a.mouseHover, mouseHover = _g === void 0 ? false : _g, _h = _a.isMentionEnabled, isMentionEnabled = _h === void 0 ? false : _h, _j = _a.isReactionEnabled, isReactionEnabled = _j === void 0 ? false : _j, _k = _a.isMarkdownEnabled, isMarkdownEnabled = _k === void 0 ? false : _k, _l = _a.onMessageHeightChange, onMessageHeightChange = _l === void 0 ? function () {\n        /* noop */\n    } : _l;\n    var stringSet = useContext(LocalizationContext).stringSet;\n    var isMessageMentioned = isMentionEnabled && ((_b = message === null || message === void 0 ? void 0 : message.mentionedMessageTemplate) === null || _b === void 0 ? void 0 : _b.length) > 0 && (message === null || message === void 0 ? void 0 : message.mentionedUsers) && ((_c = message === null || message === void 0 ? void 0 : message.mentionedUsers) === null || _c === void 0 ? void 0 : _c.length) > 0;\n    var tokens = useMemo(function () {\n        var _a;\n        if (isMessageMentioned) {\n            return tokenizeMessage({\n                mentionedUsers: (_a = message === null || message === void 0 ? void 0 : message.mentionedUsers) !== null && _a !== void 0 ? _a : undefined,\n                messageText: message === null || message === void 0 ? void 0 : message.mentionedMessageTemplate,\n                includeMarkdown: isMarkdownEnabled,\n            });\n        }\n        return tokenizeMessage({\n            messageText: message === null || message === void 0 ? void 0 : message.message,\n            includeMarkdown: isMarkdownEnabled,\n        });\n    }, [message === null || message === void 0 ? void 0 : message.updatedAt, message === null || message === void 0 ? void 0 : message.message]);\n    var openOpenGraphURL = function () { var _a; return openURL((_a = message === null || message === void 0 ? void 0 : message.ogMetaData) === null || _a === void 0 ? void 0 : _a.url); };\n    return (React__default.createElement(\"div\", { className: getClassName([\n            className !== null && className !== void 0 ? className : '',\n            'sendbird-og-message-item-body',\n            isByMe ? 'outgoing' : 'incoming',\n            mouseHover ? 'mouse-hover' : '',\n            isReactionEnabled && ((_d = message === null || message === void 0 ? void 0 : message.reactions) === null || _d === void 0 ? void 0 : _d.length) > 0 ? 'reactions' : '',\n        ]) },\n        React__default.createElement(Label, { type: LabelTypography.BODY_1, color: isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1 },\n            React__default.createElement(\"div\", { className: OG_MESSAGE_BODY_CLASSNAME },\n                React__default.createElement(TextFragment, { tokens: tokens }),\n                isEditedMessage(message) && (React__default.createElement(Label, { className: \"sendbird-og-message-item-body__text-bubble__message\", type: LabelTypography.BODY_1, color: isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2 }, \" \".concat(stringSet.MESSAGE_EDITED, \" \"))))),\n        ((_e = message.ogMetaData) === null || _e === void 0 ? void 0 : _e.defaultImage) && (React__default.createElement(OGImageSection, { onClick: openOpenGraphURL, ogImage: message.ogMetaData.defaultImage, onMessageHeightChange: onMessageHeightChange })),\n        message.ogMetaData && (React__default.createElement(OGDescriptionSection, { onClick: openOpenGraphURL, ogMetaData: message.ogMetaData, onMessageHeightChange: onMessageHeightChange })),\n        React__default.createElement(\"div\", { className: \"sendbird-og-message-item-body__cover\" })));\n}\nvar OGImageSection = function (props) {\n    var onClick = props.onClick, ogImage = props.ogImage, onMessageHeightChange = props.onMessageHeightChange;\n    var imageRef = useRef(null);\n    var isMobile = useMediaQueryContext().isMobile;\n    return (React__default.createElement(\"div\", { ref: imageRef, className: classnames('sendbird-og-message-item-body__og-thumbnail', !ogImage.url && 'sendbird-og-message-item-body__og-thumbnail__empty'), onClick: function () { return onClick(); } },\n        React__default.createElement(ImageRenderer, { className: \"sendbird-og-message-item-body__og-thumbnail__image\", url: ogImage.url || '', alt: ogImage.alt || '', width: \"100%\", height: isMobile ? '136px' : '240px', onLoad: onMessageHeightChange, onError: function () {\n                var _a, _b;\n                try {\n                    (_b = (_a = imageRef === null || imageRef === void 0 ? void 0 : imageRef.current) === null || _a === void 0 ? void 0 : _a.classList) === null || _b === void 0 ? void 0 : _b.add('sendbird-og-message-item-body__og-thumbnail__empty');\n                }\n                catch (error) {\n                    // do nothing\n                }\n            }, defaultComponent: React__default.createElement(\"div\", { className: \"sendbird-og-message-item-body__og-thumbnail__place-holder\" },\n                React__default.createElement(Icon, { className: \"sendbird-og-message-item-body__og-thumbnail__place-holder__icon\", type: IconTypes.THUMBNAIL_NONE, width: \"56px\", height: \"56px\" })) })));\n};\nvar OGDescriptionSection = function (props) {\n    var onClick = props.onClick, ogMetaData = props.ogMetaData, onMessageHeightChange = props.onMessageHeightChange;\n    useEffect(function () {\n        onMessageHeightChange();\n    }, [ogMetaData.title, ogMetaData.description, ogMetaData.url]);\n    return (React__default.createElement(\"div\", { className: \"sendbird-og-message-item-body__description\", onClick: function () { return onClick(); } },\n        ogMetaData.title && (React__default.createElement(Label, { className: \"sendbird-og-message-item-body__description__title\", type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_1 }, ogMetaData.title)),\n        ogMetaData.description && (React__default.createElement(Label, { className: \"sendbird-og-message-item-body__description__description\", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_1 }, ogMetaData.description)),\n        ogMetaData.url && (React__default.createElement(Label, { className: \"sendbird-og-message-item-body__description__url\", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, ogMetaData.url))));\n};\n\nexport { OGMessageItemBody as default };\n//# sourceMappingURL=OGMessageItemBody.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}