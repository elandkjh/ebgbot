{"ast":null,"code":"import React__default, { useState, useRef, useContext } from 'react';\nimport { useSendbirdStateContext } from '../../useSendbirdStateContext.js';\nimport { useEditUserProfileContext } from '../context.js';\nimport { u as useLocalization, L as LocalizationContext } from '../../chunks/bundle-cQZ3UZoG.js';\nimport { U as USER_ACTIONS } from '../../chunks/bundle-B7BfObV1.js';\nimport { M as Modal } from '../../chunks/bundle-CXdo2kR_.js';\nimport '../../chunks/bundle-BQi9-O76.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../../chunks/bundle-DhKQeIfP.js';\nimport { ButtonTypes } from '../../ui/Button.js';\nimport Input, { InputLabel } from '../../ui/Input.js';\nimport { A as Avatar } from '../../chunks/bundle-CFosTNce.js';\nimport TextButton from '../../ui/TextButton.js';\nimport Icon, { IconTypes } from '../../ui/Icon.js';\nimport '../../withSendbird.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\nimport '../../chunks/bundle-DxTN4_0p.js';\nimport '@sendbird/chat/groupChannel';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../chunks/bundle-CNWAfTVw.js';\nimport '../../chunks/bundle-CA85nVxp.js';\nimport '../../chunks/bundle-BgwzpLeQ.js';\nimport 'react-dom';\nimport '../../chunks/bundle-f-SpnOx2.js';\nimport '../../ui/IconButton.js';\nimport '@sendbird/uikit-tools';\nimport 'css-vars-ponyfill';\nimport '@sendbird/chat';\nimport '../../chunks/bundle-etuaqevl.js';\nimport '@sendbird/chat/openChannel';\nimport '../../chunks/bundle-DDeWOERD.js';\nimport '../../chunks/bundle-DCMGp6rH.js';\nimport '../../chunks/bundle-CwKZj-B6.js';\nimport '../../ui/SortByRow.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../chunks/bundle-DXRRGizV.js';\nimport '../../chunks/bundle-rA4afvKU.js';\nvar EditUserProfileUIView = function (_a) {\n  var _b;\n  var formRef = _a.formRef,\n    inputRef = _a.inputRef,\n    onThemeChange = _a.onThemeChange,\n    setProfileImage = _a.setProfileImage;\n  var _c = useSendbirdStateContext(),\n    stores = _c.stores,\n    config = _c.config;\n  var theme = config.theme,\n    setCurrentTheme = config.setCurrentTheme;\n  var user = (_b = stores.userStore) === null || _b === void 0 ? void 0 : _b.user;\n  var stringSet = useLocalization().stringSet;\n  var _d = useState(null),\n    currentImg = _d[0],\n    setCurrentImg = _d[1];\n  var hiddenInputRef = useRef(null);\n  return React__default.createElement(\"form\", {\n    className: \"sendbird-edit-user-profile\",\n    ref: formRef,\n    onSubmit: function (e) {\n      e.preventDefault();\n    }\n  }, React__default.createElement(\"section\", {\n    className: \"sendbird-edit-user-profile__img\"\n  }, React__default.createElement(InputLabel, null, stringSet.EDIT_PROFILE__IMAGE_LABEL), React__default.createElement(\"div\", {\n    className: \"sendbird-edit-user-profile__img__avatar\"\n  }, React__default.createElement(Avatar, {\n    width: \"80px\",\n    height: \"80px\",\n    src: currentImg || (user === null || user === void 0 ? void 0 : user.profileUrl)\n  })), React__default.createElement(\"input\", {\n    ref: hiddenInputRef,\n    type: \"file\",\n    accept: \"image/gif, image/jpeg, image/png\",\n    style: {\n      display: 'none'\n    },\n    onChange: function (e) {\n      if (e.target.files) {\n        setCurrentImg(URL.createObjectURL(e.target.files[0]));\n        setProfileImage(e.target.files[0]);\n      }\n      if (hiddenInputRef.current) {\n        hiddenInputRef.current.value = '';\n      }\n    }\n  }), React__default.createElement(TextButton, {\n    className: \"sendbird-edit-user-profile__img__avatar-button\",\n    disableUnderline: true,\n    onClick: function () {\n      var _a;\n      return (_a = hiddenInputRef.current) === null || _a === void 0 ? void 0 : _a.click();\n    }\n  }, React__default.createElement(Label, {\n    type: LabelTypography.BUTTON_1,\n    color: LabelColors.PRIMARY\n  }, stringSet.EDIT_PROFILE__IMAGE_UPLOAD))), React__default.createElement(\"section\", {\n    className: \"sendbird-edit-user-profile__name\"\n  }, React__default.createElement(InputLabel, null, stringSet.EDIT_PROFILE__NICKNAME_LABEL), React__default.createElement(Input, {\n    required: (user === null || user === void 0 ? void 0 : user.nickname) !== '',\n    name: \"sendbird-edit-user-profile__name__input\",\n    ref: inputRef,\n    value: user === null || user === void 0 ? void 0 : user.nickname,\n    placeHolder: stringSet.EDIT_PROFILE__NICKNAME_PLACEHOLDER\n  })), React__default.createElement(\"section\", {\n    className: \"sendbird-edit-user-profile__userid\"\n  }, React__default.createElement(InputLabel, null, stringSet.EDIT_PROFILE__USERID_LABEL), React__default.createElement(Input, {\n    disabled: true,\n    name: \"sendbird-edit-user-profile__userid__input\",\n    value: user === null || user === void 0 ? void 0 : user.userId\n  })), React__default.createElement(\"section\", {\n    className: \"sendbird-edit-user-profile__theme\"\n  }, React__default.createElement(InputLabel, null, stringSet.EDIT_PROFILE__THEME_LABEL), React__default.createElement(\"div\", {\n    className: \"sendbird-edit-user-profile__theme__theme-icon\"\n  }, theme === 'dark' ? React__default.createElement(Icon, {\n    onClick: function () {\n      setCurrentTheme('light');\n      onThemeChange === null || onThemeChange === void 0 ? void 0 : onThemeChange('light');\n    },\n    type: IconTypes.TOGGLE_ON,\n    width: 44,\n    height: 24\n  }) : React__default.createElement(Icon, {\n    onClick: function () {\n      setCurrentTheme('dark');\n      onThemeChange === null || onThemeChange === void 0 ? void 0 : onThemeChange('dark');\n    },\n    type: IconTypes.TOGGLE_OFF,\n    width: 44,\n    height: 24\n  }))));\n};\nvar handleUpdateUserInfo = function (_a) {\n  var _b, _c, _d;\n  var globalContext = _a.globalContext,\n    formRef = _a.formRef,\n    inputRef = _a.inputRef,\n    profileImage = _a.profileImage,\n    onEditProfile = _a.onEditProfile;\n  var stores = globalContext.stores,\n    dispatchers = globalContext.dispatchers;\n  var sdk = stores.sdkStore.sdk;\n  var user = stores.userStore.user;\n  var userDispatcher = dispatchers.userDispatcher;\n  if ((user === null || user === void 0 ? void 0 : user.nickname) !== '' && !inputRef.current.value) {\n    (_c = (_b = formRef.current).reportValidity) === null || _c === void 0 ? void 0 : _c.call(_b); // might not work in explorer\n    return;\n  }\n  sdk === null || sdk === void 0 ? void 0 : sdk.updateCurrentUserInfo({\n    nickname: (_d = inputRef === null || inputRef === void 0 ? void 0 : inputRef.current) === null || _d === void 0 ? void 0 : _d.value,\n    profileImage: profileImage !== null && profileImage !== void 0 ? profileImage : undefined\n  }).then(function (updatedUser) {\n    userDispatcher({\n      type: USER_ACTIONS.UPDATE_USER_INFO,\n      payload: updatedUser\n    });\n    onEditProfile === null || onEditProfile === void 0 ? void 0 : onEditProfile(updatedUser);\n  });\n};\nvar useEditUserProfileUISates = function (_a) {\n  var onEditProfile = _a.onEditProfile;\n  var globalContext = useSendbirdStateContext();\n  var inputRef = useRef(null);\n  var formRef = useRef(null);\n  var _b = useState(null),\n    profileImage = _b[0],\n    setProfileImage = _b[1];\n  var updateUserInfo = function () {\n    handleUpdateUserInfo({\n      globalContext: globalContext,\n      formRef: formRef,\n      inputRef: inputRef,\n      profileImage: profileImage,\n      onEditProfile: onEditProfile\n    });\n  };\n  return {\n    formRef: formRef,\n    inputRef: inputRef,\n    updateUserInfo: updateUserInfo,\n    profileImage: profileImage,\n    setProfileImage: setProfileImage\n  };\n};\nvar EditUserProfileUI = function () {\n  var editProfileContext = useEditUserProfileContext();\n  var onEditProfile = editProfileContext.onEditProfile,\n    onCancel = editProfileContext.onCancel,\n    onThemeChange = editProfileContext.onThemeChange;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var _a = useEditUserProfileUISates({\n      onEditProfile: onEditProfile\n    }),\n    formRef = _a.formRef,\n    inputRef = _a.inputRef,\n    updateUserInfo = _a.updateUserInfo,\n    setProfileImage = _a.setProfileImage;\n  return React__default.createElement(Modal, {\n    titleText: stringSet.EDIT_PROFILE__TITLE,\n    submitText: stringSet.BUTTON__SAVE,\n    type: ButtonTypes.PRIMARY,\n    onCancel: onCancel,\n    isFullScreenOnMobile: true,\n    onSubmit: updateUserInfo\n  }, React__default.createElement(EditUserProfileUIView, {\n    formRef: formRef,\n    inputRef: inputRef,\n    setProfileImage: setProfileImage,\n    onThemeChange: onThemeChange\n  }));\n};\nexport { EditUserProfileUI, EditUserProfileUIView, EditUserProfileUI as default, useEditUserProfileUISates };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import React__default, { useState, useRef, useContext } from 'react';\nimport { useSendbirdStateContext } from '../../useSendbirdStateContext.js';\nimport { useEditUserProfileContext } from '../context.js';\nimport { u as useLocalization, L as LocalizationContext } from '../../chunks/bundle-cQZ3UZoG.js';\nimport { U as USER_ACTIONS } from '../../chunks/bundle-B7BfObV1.js';\nimport { M as Modal } from '../../chunks/bundle-CXdo2kR_.js';\nimport '../../chunks/bundle-BQi9-O76.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../../chunks/bundle-DhKQeIfP.js';\nimport { ButtonTypes } from '../../ui/Button.js';\nimport Input, { InputLabel } from '../../ui/Input.js';\nimport { A as Avatar } from '../../chunks/bundle-CFosTNce.js';\nimport TextButton from '../../ui/TextButton.js';\nimport Icon, { IconTypes } from '../../ui/Icon.js';\nimport '../../withSendbird.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\nimport '../../chunks/bundle-DxTN4_0p.js';\nimport '@sendbird/chat/groupChannel';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../chunks/bundle-CNWAfTVw.js';\nimport '../../chunks/bundle-CA85nVxp.js';\nimport '../../chunks/bundle-BgwzpLeQ.js';\nimport 'react-dom';\nimport '../../chunks/bundle-f-SpnOx2.js';\nimport '../../ui/IconButton.js';\nimport '@sendbird/uikit-tools';\nimport 'css-vars-ponyfill';\nimport '@sendbird/chat';\nimport '../../chunks/bundle-etuaqevl.js';\nimport '@sendbird/chat/openChannel';\nimport '../../chunks/bundle-DDeWOERD.js';\nimport '../../chunks/bundle-DCMGp6rH.js';\nimport '../../chunks/bundle-CwKZj-B6.js';\nimport '../../ui/SortByRow.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../chunks/bundle-DXRRGizV.js';\nimport '../../chunks/bundle-rA4afvKU.js';\n\nvar EditUserProfileUIView = function (_a) {\n    var _b;\n    var formRef = _a.formRef, inputRef = _a.inputRef, onThemeChange = _a.onThemeChange, setProfileImage = _a.setProfileImage;\n    var _c = useSendbirdStateContext(), stores = _c.stores, config = _c.config;\n    var theme = config.theme, setCurrentTheme = config.setCurrentTheme;\n    var user = (_b = stores.userStore) === null || _b === void 0 ? void 0 : _b.user;\n    var stringSet = useLocalization().stringSet;\n    var _d = useState(null), currentImg = _d[0], setCurrentImg = _d[1];\n    var hiddenInputRef = useRef(null);\n    return (React__default.createElement(\"form\", { className: \"sendbird-edit-user-profile\", ref: formRef, onSubmit: function (e) { e.preventDefault(); } },\n        React__default.createElement(\"section\", { className: \"sendbird-edit-user-profile__img\" },\n            React__default.createElement(InputLabel, null, stringSet.EDIT_PROFILE__IMAGE_LABEL),\n            React__default.createElement(\"div\", { className: \"sendbird-edit-user-profile__img__avatar\" },\n                React__default.createElement(Avatar, { width: \"80px\", height: \"80px\", src: currentImg || (user === null || user === void 0 ? void 0 : user.profileUrl) })),\n            React__default.createElement(\"input\", { ref: hiddenInputRef, type: \"file\", accept: \"image/gif, image/jpeg, image/png\", style: { display: 'none' }, onChange: function (e) {\n                    if (e.target.files) {\n                        setCurrentImg(URL.createObjectURL(e.target.files[0]));\n                        setProfileImage(e.target.files[0]);\n                    }\n                    if (hiddenInputRef.current) {\n                        hiddenInputRef.current.value = '';\n                    }\n                } }),\n            React__default.createElement(TextButton, { className: \"sendbird-edit-user-profile__img__avatar-button\", disableUnderline: true, onClick: function () { var _a; return (_a = hiddenInputRef.current) === null || _a === void 0 ? void 0 : _a.click(); } },\n                React__default.createElement(Label, { type: LabelTypography.BUTTON_1, color: LabelColors.PRIMARY }, stringSet.EDIT_PROFILE__IMAGE_UPLOAD))),\n        React__default.createElement(\"section\", { className: \"sendbird-edit-user-profile__name\" },\n            React__default.createElement(InputLabel, null, stringSet.EDIT_PROFILE__NICKNAME_LABEL),\n            React__default.createElement(Input, { required: (user === null || user === void 0 ? void 0 : user.nickname) !== '', name: \"sendbird-edit-user-profile__name__input\", ref: inputRef, value: user === null || user === void 0 ? void 0 : user.nickname, placeHolder: stringSet.EDIT_PROFILE__NICKNAME_PLACEHOLDER })),\n        React__default.createElement(\"section\", { className: \"sendbird-edit-user-profile__userid\" },\n            React__default.createElement(InputLabel, null, stringSet.EDIT_PROFILE__USERID_LABEL),\n            React__default.createElement(Input, { disabled: true, name: \"sendbird-edit-user-profile__userid__input\", value: user === null || user === void 0 ? void 0 : user.userId })),\n        React__default.createElement(\"section\", { className: \"sendbird-edit-user-profile__theme\" },\n            React__default.createElement(InputLabel, null, stringSet.EDIT_PROFILE__THEME_LABEL),\n            React__default.createElement(\"div\", { className: \"sendbird-edit-user-profile__theme__theme-icon\" }, theme === 'dark'\n                ? (React__default.createElement(Icon, { onClick: function () {\n                        setCurrentTheme('light');\n                        onThemeChange === null || onThemeChange === void 0 ? void 0 : onThemeChange('light');\n                    }, type: IconTypes.TOGGLE_ON, width: 44, height: 24 }))\n                : (React__default.createElement(Icon, { onClick: function () {\n                        setCurrentTheme('dark');\n                        onThemeChange === null || onThemeChange === void 0 ? void 0 : onThemeChange('dark');\n                    }, type: IconTypes.TOGGLE_OFF, width: 44, height: 24 }))))));\n};\n\nvar handleUpdateUserInfo = function (_a) {\n    var _b, _c, _d;\n    var globalContext = _a.globalContext, formRef = _a.formRef, inputRef = _a.inputRef, profileImage = _a.profileImage, onEditProfile = _a.onEditProfile;\n    var stores = globalContext.stores, dispatchers = globalContext.dispatchers;\n    var sdk = stores.sdkStore.sdk;\n    var user = stores.userStore.user;\n    var userDispatcher = dispatchers.userDispatcher;\n    if ((user === null || user === void 0 ? void 0 : user.nickname) !== '' && !inputRef.current.value) {\n        (_c = (_b = formRef.current).reportValidity) === null || _c === void 0 ? void 0 : _c.call(_b); // might not work in explorer\n        return;\n    }\n    sdk === null || sdk === void 0 ? void 0 : sdk.updateCurrentUserInfo({\n        nickname: (_d = inputRef === null || inputRef === void 0 ? void 0 : inputRef.current) === null || _d === void 0 ? void 0 : _d.value,\n        profileImage: profileImage !== null && profileImage !== void 0 ? profileImage : undefined,\n    }).then(function (updatedUser) {\n        userDispatcher({ type: USER_ACTIONS.UPDATE_USER_INFO, payload: updatedUser });\n        onEditProfile === null || onEditProfile === void 0 ? void 0 : onEditProfile(updatedUser);\n    });\n};\nvar useEditUserProfileUISates = function (_a) {\n    var onEditProfile = _a.onEditProfile;\n    var globalContext = useSendbirdStateContext();\n    var inputRef = useRef(null);\n    var formRef = useRef(null);\n    var _b = useState(null), profileImage = _b[0], setProfileImage = _b[1];\n    var updateUserInfo = function () {\n        handleUpdateUserInfo({\n            globalContext: globalContext,\n            formRef: formRef,\n            inputRef: inputRef,\n            profileImage: profileImage,\n            onEditProfile: onEditProfile,\n        });\n    };\n    return {\n        formRef: formRef,\n        inputRef: inputRef,\n        updateUserInfo: updateUserInfo,\n        profileImage: profileImage,\n        setProfileImage: setProfileImage,\n    };\n};\nvar EditUserProfileUI = function () {\n    var editProfileContext = useEditUserProfileContext();\n    var onEditProfile = editProfileContext.onEditProfile, onCancel = editProfileContext.onCancel, onThemeChange = editProfileContext.onThemeChange;\n    var stringSet = useContext(LocalizationContext).stringSet;\n    var _a = useEditUserProfileUISates({ onEditProfile: onEditProfile }), formRef = _a.formRef, inputRef = _a.inputRef, updateUserInfo = _a.updateUserInfo, setProfileImage = _a.setProfileImage;\n    return (React__default.createElement(Modal, { titleText: stringSet.EDIT_PROFILE__TITLE, submitText: stringSet.BUTTON__SAVE, type: ButtonTypes.PRIMARY, onCancel: onCancel, isFullScreenOnMobile: true, onSubmit: updateUserInfo },\n        React__default.createElement(EditUserProfileUIView, { formRef: formRef, inputRef: inputRef, setProfileImage: setProfileImage, onThemeChange: onThemeChange })));\n};\n\nexport { EditUserProfileUI, EditUserProfileUIView, EditUserProfileUI as default, useEditUserProfileUISates };\n//# sourceMappingURL=EditUserProfileUI.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}