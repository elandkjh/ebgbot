{"ast":null,"code":"import React__default, { useContext } from 'react';\nimport { M as Modal } from './bundle-CXdo2kR_.js';\nimport './bundle-BQi9-O76.js';\nimport './bundle-DhKQeIfP.js';\nimport { ButtonTypes } from '../ui/Button.js';\nimport { L as LocalizationContext } from './bundle-cQZ3UZoG.js';\nimport { g as getModalDeleteMessageTitle } from './bundle-Zvm5CMGT.js';\nvar RemoveMessageModalView = function (props) {\n  var _a;\n  var _b = props.onSubmit,\n    onSubmit = _b === void 0 ? function () {\n      /* noop */\n    } : _b,\n    onCancel = props.onCancel,\n    message = props.message,\n    deleteMessage = props.deleteMessage;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  return React__default.createElement(Modal, {\n    type: ButtonTypes.DANGER,\n    disabled: ((_a = message === null || message === void 0 ? void 0 : message.threadInfo) === null || _a === void 0 ? void 0 : _a.replyCount) ? message.threadInfo.replyCount > 0 : undefined,\n    onCancel: onCancel,\n    onSubmit: function () {\n      if (message.isUserMessage() || message.isFileMessage() || message.isMultipleFilesMessage()) {\n        deleteMessage(message).then(function () {\n          // For other status such as PENDING, SCHEDULED, and CANCELED,\n          // invalid parameters error is thrown so nothing happens.\n          onSubmit();\n          onCancel();\n        });\n      }\n    },\n    submitText: stringSet.MESSAGE_MENU__DELETE,\n    titleText: getModalDeleteMessageTitle(stringSet, message)\n  });\n};\nexport { RemoveMessageModalView as R };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import React__default, { useContext } from 'react';\nimport { M as Modal } from './bundle-CXdo2kR_.js';\nimport './bundle-BQi9-O76.js';\nimport './bundle-DhKQeIfP.js';\nimport { ButtonTypes } from '../ui/Button.js';\nimport { L as LocalizationContext } from './bundle-cQZ3UZoG.js';\nimport { g as getModalDeleteMessageTitle } from './bundle-Zvm5CMGT.js';\n\nvar RemoveMessageModalView = function (props) {\n    var _a;\n    var _b = props.onSubmit, onSubmit = _b === void 0 ? function () {\n        /* noop */\n    } : _b, onCancel = props.onCancel, message = props.message, deleteMessage = props.deleteMessage;\n    var stringSet = useContext(LocalizationContext).stringSet;\n    return (React__default.createElement(Modal, { type: ButtonTypes.DANGER, disabled: ((_a = message === null || message === void 0 ? void 0 : message.threadInfo) === null || _a === void 0 ? void 0 : _a.replyCount) ? message.threadInfo.replyCount > 0 : undefined, onCancel: onCancel, onSubmit: function () {\n            if (message.isUserMessage() || message.isFileMessage() || message.isMultipleFilesMessage()) {\n                deleteMessage(message).then(function () {\n                    // For other status such as PENDING, SCHEDULED, and CANCELED,\n                    // invalid parameters error is thrown so nothing happens.\n                    onSubmit();\n                    onCancel();\n                });\n            }\n        }, submitText: stringSet.MESSAGE_MENU__DELETE, titleText: getModalDeleteMessageTitle(stringSet, message) }));\n};\n\nexport { RemoveMessageModalView as R };\n//# sourceMappingURL=bundle-D0TYbkjN.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}