{"ast":null,"code":"var OutgoingMessageStates;\n(function (OutgoingMessageStates) {\n  OutgoingMessageStates[\"NONE\"] = \"NONE\";\n  OutgoingMessageStates[\"PENDING\"] = \"PENDING\";\n  OutgoingMessageStates[\"SENT\"] = \"SENT\";\n  OutgoingMessageStates[\"FAILED\"] = \"FAILED\";\n  OutgoingMessageStates[\"DELIVERED\"] = \"DELIVERED\";\n  OutgoingMessageStates[\"READ\"] = \"READ\";\n})(OutgoingMessageStates || (OutgoingMessageStates = {}));\nvar getOutgoingMessageState = function (channel, message) {\n  var _a, _b, _c, _d, _e;\n  if (!message || !('sendingStatus' in message)) return OutgoingMessageStates.NONE;\n  if (message.sendingStatus === 'pending') {\n    return OutgoingMessageStates.PENDING;\n  }\n  if (message.sendingStatus === 'failed') {\n    return OutgoingMessageStates.FAILED;\n  }\n  if ((_a = channel === null || channel === void 0 ? void 0 : channel.isGroupChannel) === null || _a === void 0 ? void 0 : _a.call(channel)) {\n    /* GroupChannel only */\n    if (((_c = (_b = channel).getUnreadMemberCount) === null || _c === void 0 ? void 0 : _c.call(_b, message)) === 0) {\n      return OutgoingMessageStates.READ;\n    } else if (((_e = (_d = channel).getUndeliveredMemberCount) === null || _e === void 0 ? void 0 : _e.call(_d, message)) === 0) {\n      return OutgoingMessageStates.DELIVERED;\n    }\n  }\n  if (message.sendingStatus === 'succeeded') {\n    return OutgoingMessageStates.SENT;\n  }\n  return OutgoingMessageStates.NONE;\n};\nexport { OutgoingMessageStates, getOutgoingMessageState };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["var OutgoingMessageStates;\n(function (OutgoingMessageStates) {\n    OutgoingMessageStates[\"NONE\"] = \"NONE\";\n    OutgoingMessageStates[\"PENDING\"] = \"PENDING\";\n    OutgoingMessageStates[\"SENT\"] = \"SENT\";\n    OutgoingMessageStates[\"FAILED\"] = \"FAILED\";\n    OutgoingMessageStates[\"DELIVERED\"] = \"DELIVERED\";\n    OutgoingMessageStates[\"READ\"] = \"READ\";\n})(OutgoingMessageStates || (OutgoingMessageStates = {}));\nvar getOutgoingMessageState = function (channel, message) {\n    var _a, _b, _c, _d, _e;\n    if (!message || !('sendingStatus' in message))\n        return OutgoingMessageStates.NONE;\n    if (message.sendingStatus === 'pending') {\n        return OutgoingMessageStates.PENDING;\n    }\n    if (message.sendingStatus === 'failed') {\n        return OutgoingMessageStates.FAILED;\n    }\n    if ((_a = channel === null || channel === void 0 ? void 0 : channel.isGroupChannel) === null || _a === void 0 ? void 0 : _a.call(channel)) {\n        /* GroupChannel only */\n        if (((_c = (_b = channel).getUnreadMemberCount) === null || _c === void 0 ? void 0 : _c.call(_b, message)) === 0) {\n            return OutgoingMessageStates.READ;\n        }\n        else if (((_e = (_d = channel).getUndeliveredMemberCount) === null || _e === void 0 ? void 0 : _e.call(_d, message)) === 0) {\n            return OutgoingMessageStates.DELIVERED;\n        }\n    }\n    if (message.sendingStatus === 'succeeded') {\n        return OutgoingMessageStates.SENT;\n    }\n    return OutgoingMessageStates.NONE;\n};\n\nexport { OutgoingMessageStates, getOutgoingMessageState };\n//# sourceMappingURL=getOutgoingMessageState.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}