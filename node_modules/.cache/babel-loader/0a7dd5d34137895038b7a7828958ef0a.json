{"ast":null,"code":"import { c as __spreadArray, _ as __assign } from './bundle-BQi9-O76.js';\nimport React__default, { useContext, useState, useEffect, createContext, useCallback, useMemo } from 'react';\nimport { K } from './bundle-DxTN4_0p.js';\nimport { c as classnames, n as noop } from './bundle-BgwzpLeQ.js';\nimport { createPortal } from 'react-dom';\nimport { L as LocalizationContext, u as useLocalization } from './bundle-cQZ3UZoG.js';\nimport { u as useMediaQueryContext } from './bundle-f-SpnOx2.js';\nimport IconButton from '../ui/IconButton.js';\nimport Button, { ButtonTypes } from '../ui/Button.js';\nimport Icon, { IconTypes, IconColors } from '../ui/Icon.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from './bundle-DhKQeIfP.js';\nimport '@sendbird/uikit-tools';\nimport '../withSendbird.js';\nimport 'css-vars-ponyfill';\nimport '@sendbird/chat';\nimport { u as uuidv4 } from './bundle-etuaqevl.js';\nimport '@sendbird/chat/openChannel';\nimport '@sendbird/chat/groupChannel';\nimport './bundle-DDeWOERD.js';\nimport { B as BROWSER_SUPPORT_MIME_TYPE_LIST, n as VOICE_RECORDER_AUDIO_BIT_RATE, e as VOICE_MESSAGE_FILE_NAME, a as VOICE_MESSAGE_MIME_TYPE } from './bundle-DCMGp6rH.js';\nimport { useSendbirdStateContext } from '../useSendbirdStateContext.js';\nimport './bundle-CwKZj-B6.js';\n\n/**\n * Mapping object to convert numeric keys to descriptive text\n * [(legacy) numeric key]: [(new) descriptive text]\n */\nvar colorMapping = {\n  // Primary / Secondary / Error / Information\n  100: 'extra-light',\n  200: 'light',\n  300: 'main',\n  400: 'dark',\n  500: 'extra-dark',\n  // Overlay\n  'overlay-01': 'overlay-dark',\n  'overlay-02': 'overlay-light',\n  // OnLight\n  'onlight-01': 'onlight-text-high-emphasis',\n  'onlight-02': 'onlight-text-mid-emphasis',\n  'onlight-03': 'onlight-text-low-emphasis',\n  'onlight-04': 'onlight-text-disabled',\n  // OnDark\n  'ondark-01': 'ondark-text-high-emphasis',\n  'ondark-02': 'ondark-text-mid-emphasis',\n  'ondark-03': 'ondark-text-low-emphasis',\n  'ondark-04': 'ondark-text-disabled'\n};\n/**\n * Order of mappings to ensure longer keys are matched first\n * e.g. In --sendbird-dark-background-extra-dark, 'extra-dark' should be matched instead of 'dark'\n */\nvar colorMappingOrder = Object.values(colorMapping).sort(function (a, b) {\n  return b.length - a.length;\n});\n/**\n * Convert colorMapping to a Map for quick lookup in mapColorKeys\n */\nvar colorMappingMap = new Map(Object.entries(colorMapping).map(function (_a) {\n  var key = _a[0],\n    value = _a[1];\n  return [value, key];\n}));\n/**\n * Converts descriptive color keys to their numeric equivalents.\n *\n * This function takes a set of CSS variable keys and transforms\n * descriptive color keys (e.g. 'extra-light', 'main') into their\n * numeric equivalents(e.g. 100, 200, ..., 500) as defined in the colorMapping object.\n *\n * e.g.\n * Input:\n * {\n *   '--sendbird-light-primary-extra-dark': '#00487c',\n *   '--sendbird-light-primary-dark': '#4bb3fd',\n *   '--sendbird-light-primary-main': '#3e6680',\n *   '--sendbird-light-primary-light': '#0496ff',\n *   '--sendbird-light-primary-extra-light': '#027bce',\n * }\n *\n * Output:\n * {\n *   '--sendbird-light-primary-500': '#00487c',\n *   '--sendbird-light-primary-400': '#4bb3fd',\n *   '--sendbird-light-primary-300': '#3e6680',\n *   '--sendbird-light-primary-200': '#0496ff',\n *   '--sendbird-light-primary-100': '#027bce',\n * }\n *\n * @param {ColorSet} colorSet - The input object containing CSS variables with descriptive keys.\n * @returns {ColorSet} The transformed object with numeric keys.\n */\nvar mapColorKeys = function (colorSet) {\n  var mappedColors = {};\n  Object.entries(colorSet).forEach(function (_a) {\n    var key = _a[0],\n      value = _a[1];\n    var descriptiveKey = key;\n    for (var _i = 0, colorMappingOrder_1 = colorMappingOrder; _i < colorMappingOrder_1.length; _i++) {\n      var mappingValue = colorMappingOrder_1[_i];\n      // Prepare a regex to match the mapping value at the end of the key\n      // e.g., '-extra-dark$'\n      var regex = new RegExp(\"-\".concat(mappingValue, \"$\"));\n      if (regex.test(key)) {\n        // Find the corresponding numeric key for the mapping value using Map\n        var numericKey = colorMappingMap.get(mappingValue);\n        if (numericKey) {\n          // Replace the descriptive text with the numeric key\n          descriptiveKey = key.replace(regex, \"-\".concat(numericKey));\n          break;\n        }\n      }\n    }\n    mappedColors[descriptiveKey] = value;\n  });\n  return mappedColors;\n};\n\n// simple component to be used as modal root\nvar MODAL_ROOT = 'sendbird-modal-root';\nvar ModalRoot = function () {\n  return React__default.createElement(\"div\", {\n    id: MODAL_ROOT,\n    className: MODAL_ROOT\n  });\n};\nvar ModalHeader = function (_a) {\n  var titleText = _a.titleText,\n    onCloseClick = _a.onCloseClick;\n  return React__default.createElement(\"div\", {\n    className: \"sendbird-modal__header\"\n  }, React__default.createElement(Label, {\n    type: LabelTypography.H_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, titleText), React__default.createElement(\"div\", {\n    className: \"sendbird-modal__close\"\n  }, React__default.createElement(IconButton, {\n    width: \"32px\",\n    height: \"32px\",\n    onClick: onCloseClick\n  }, React__default.createElement(Icon, {\n    type: IconTypes.CLOSE,\n    fillColor: IconColors.DEFAULT,\n    width: \"24px\",\n    height: \"24px\"\n  }))));\n};\nvar ModalBody = function (_a) {\n  var children = _a.children;\n  return React__default.createElement(\"div\", {\n    className: \"sendbird-modal__body\"\n  }, React__default.createElement(Label, {\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_2\n  }, children));\n};\nvar ModalFooter = function (_a) {\n  var submitText = _a.submitText,\n    _b = _a.disabled,\n    disabled = _b === void 0 ? false : _b,\n    _c = _a.hideCancelButton,\n    hideCancelButton = _c === void 0 ? false : _c,\n    _d = _a.type,\n    type = _d === void 0 ? ButtonTypes.DANGER : _d,\n    onSubmit = _a.onSubmit,\n    onCancel = _a.onCancel;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  return React__default.createElement(\"div\", {\n    className: \"sendbird-modal__footer\"\n  }, !hideCancelButton && React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    onClick: onCancel\n  }, React__default.createElement(Label, {\n    type: LabelTypography.BUTTON_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.BUTTON__CANCEL)), React__default.createElement(Button, {\n    type: type,\n    disabled: disabled,\n    onClick: onSubmit\n  }, submitText));\n};\nfunction Modal(props) {\n  var _a;\n  var _b = props.children,\n    children = _b === void 0 ? null : _b,\n    _c = props.className,\n    className = _c === void 0 ? '' : _c,\n    _d = props.contentClassName,\n    contentClassName = _d === void 0 ? '' : _d,\n    _e = props.isCloseOnClickOutside,\n    isCloseOnClickOutside = _e === void 0 ? false : _e,\n    _f = props.isFullScreenOnMobile,\n    isFullScreenOnMobile = _f === void 0 ? false : _f,\n    titleText = props.titleText,\n    submitText = props.submitText,\n    _g = props.disabled,\n    disabled = _g === void 0 ? false : _g,\n    _h = props.hideFooter,\n    hideFooter = _h === void 0 ? false : _h,\n    _j = props.type,\n    type = _j === void 0 ? ButtonTypes.DANGER : _j,\n    renderHeader = props.renderHeader,\n    _k = props.onSubmit,\n    onSubmit = _k === void 0 ? noop : _k,\n    onClose = props.onClose,\n    onCancel = props.onCancel,\n    customFooter = props.customFooter;\n  var handleClose = (_a = onClose !== null && onClose !== void 0 ? onClose : onCancel) !== null && _a !== void 0 ? _a : noop;\n  var eventHandlers = useSendbirdStateContext().eventHandlers;\n  var id = useState(function () {\n    return \"sbu-modal-\".concat(uuidv4());\n  })[0];\n  useEffect(function () {\n    var _a, _b;\n    return (_b = (_a = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.modal) === null || _a === void 0 ? void 0 : _a.onMounted) === null || _b === void 0 ? void 0 : _b.call(_a, {\n      close: handleClose,\n      id: id\n    });\n  }, []);\n  var isMobile = useMediaQueryContext().isMobile;\n  return createPortal(React__default.createElement(\"div\", {\n    className: classnames('sendbird-modal', className, isFullScreenOnMobile && isMobile && 'sendbird-modal--full-mobile')\n  }, React__default.createElement(\"div\", {\n    className: classnames.apply(void 0, __spreadArray(['sendbird-modal__content'], Array.isArray(contentClassName) ? contentClassName : [contentClassName], false))\n  }, (renderHeader === null || renderHeader === void 0 ? void 0 : renderHeader()) || React__default.createElement(ModalHeader, {\n    titleText: titleText !== null && titleText !== void 0 ? titleText : '',\n    onCloseClick: handleClose\n  }), React__default.createElement(ModalBody, null, children), !hideFooter && (customFooter !== null && customFooter !== void 0 ? customFooter : React__default.createElement(ModalFooter, {\n    disabled: disabled,\n    onCancel: handleClose,\n    onSubmit: onSubmit,\n    submitText: submitText !== null && submitText !== void 0 ? submitText : '',\n    type: type\n  }))), React__default.createElement(\"div\", {\n    className: classnames('sendbird-modal__backdrop', isCloseOnClickOutside && 'sendbird-modal__backdrop--clickoutside'),\n    onClick: function (e) {\n      e === null || e === void 0 ? void 0 : e.stopPropagation();\n      if (isCloseOnClickOutside) {\n        handleClose();\n      }\n    }\n  })), document.getElementById(MODAL_ROOT));\n}\nvar Context = createContext({\n  start: noop,\n  stop: noop,\n  isRecordable: false\n});\nvar VoiceRecorderProvider = function (props) {\n  var _a;\n  var children = props.children;\n  var config = useSendbirdStateContext().config;\n  var logger = config.logger,\n    groupChannel = config.groupChannel;\n  var _b = useState(null),\n    mediaRecorder = _b[0],\n    setMediaRecorder = _b[1];\n  var _c = useState(false),\n    isRecordable = _c[0],\n    setIsRecordable = _c[1];\n  var _d = useState(false),\n    permissionWarning = _d[0],\n    setPermissionWarning = _d[1];\n  var stringSet = useLocalization().stringSet;\n  var isVoiceMessageEnabled = groupChannel.enableVoiceMessage;\n  var _e = useState(null),\n    webAudioUtils = _e[0],\n    setWebAudioUtils = _e[1];\n  var browserSupportMimeType = (_a = BROWSER_SUPPORT_MIME_TYPE_LIST.find(function (mimeType) {\n    return MediaRecorder.isTypeSupported(mimeType);\n  })) !== null && _a !== void 0 ? _a : '';\n  if (isVoiceMessageEnabled && !browserSupportMimeType) {\n    logger.error('VoiceRecorder: Browser does not support mimeType', {\n      mimmeTypes: BROWSER_SUPPORT_MIME_TYPE_LIST\n    });\n  }\n  useEffect(function () {\n    if (isVoiceMessageEnabled && !webAudioUtils) {\n      import('./bundle-bm4u5f1K.js').then(function (module) {\n        return setWebAudioUtils(module);\n      });\n    }\n  }, [isVoiceMessageEnabled, webAudioUtils]);\n  var start = useCallback(function (eventHandler) {\n    var _a, _b;\n    if (isVoiceMessageEnabled && !webAudioUtils) {\n      logger.error('VoiceRecorder: Recording audio processor is being loaded.');\n      return;\n    }\n    var checkPermission = function () {\n      try {\n        // Type '\"microphone\"' is not assignable to type 'PermissionName'.ts(2322)\n        // this is typescript issue\n        // https://github.com/microsoft/TypeScript/issues/33923\n        // @ts-expect-error\n        navigator.permissions.query({\n          name: 'microphone'\n        }).then(function (result) {\n          if (result.state === 'denied') {\n            logger.warning('VoiceRecorder: Permission denied.');\n            setPermissionWarning(true);\n          }\n        });\n      } catch (error) {\n        logger.warning('VoiceRecorder: Failed to check permission.', error);\n      }\n    };\n    logger.info('VoiceRecorder: Start recording.');\n    if (mediaRecorder) {\n      stop();\n      logger.info('VoiceRecorder: Previous mediaRecorder is stopped.');\n    }\n    checkPermission();\n    (_b = (_a = navigator === null || navigator === void 0 ? void 0 : navigator.mediaDevices) === null || _a === void 0 ? void 0 : _a.getUserMedia) === null || _b === void 0 ? void 0 : _b.call(_a, {\n      audio: true\n    }).then(function (stream) {\n      var _a;\n      logger.info('VoiceRecorder: Succeeded getting media stream.', stream);\n      setIsRecordable(true);\n      var mediaRecorder = new MediaRecorder(stream, {\n        mimeType: browserSupportMimeType,\n        audioBitsPerSecond: VOICE_RECORDER_AUDIO_BIT_RATE\n      });\n      // when recording stops\n      mediaRecorder.ondataavailable = function (e) {\n        logger.info('VoiceRecorder: Succeeded getting an available data.', e.data);\n        var audioFile = new File([e.data], VOICE_MESSAGE_FILE_NAME, {\n          lastModified: new Date().getTime(),\n          type: VOICE_MESSAGE_MIME_TYPE\n        });\n        webAudioUtils === null || webAudioUtils === void 0 ? void 0 : webAudioUtils.downsampleToWav(audioFile, function (buffer) {\n          var _a;\n          var mp3Buffer = webAudioUtils === null || webAudioUtils === void 0 ? void 0 : webAudioUtils.encodeMp3(buffer);\n          var mp3blob = new Blob(mp3Buffer, {\n            type: VOICE_MESSAGE_MIME_TYPE\n          });\n          var convertedAudioFile = new File([mp3blob], VOICE_MESSAGE_FILE_NAME, {\n            lastModified: new Date().getTime(),\n            type: VOICE_MESSAGE_MIME_TYPE\n          });\n          (_a = eventHandler === null || eventHandler === void 0 ? void 0 : eventHandler.onRecordingEnded) === null || _a === void 0 ? void 0 : _a.call(eventHandler, convertedAudioFile);\n          logger.info('VoiceRecorder: Succeeded converting audio file.', convertedAudioFile);\n        });\n        var tracks = stream.getAudioTracks();\n        tracks.forEach(function (track) {\n          return track.stop();\n        });\n        setIsRecordable(false);\n      };\n      mediaRecorder.onstart = (_a = eventHandler === null || eventHandler === void 0 ? void 0 : eventHandler.onRecordingStarted) !== null && _a !== void 0 ? _a : noop;\n      mediaRecorder === null || mediaRecorder === void 0 ? void 0 : mediaRecorder.start();\n      setMediaRecorder(mediaRecorder);\n    }).catch(function (err) {\n      logger.error('VoiceRecorder: Failed getting media stream.', err);\n      setMediaRecorder(null);\n    });\n  }, [mediaRecorder, webAudioUtils]);\n  var stop = useCallback(function () {\n    // Stop recording\n    mediaRecorder === null || mediaRecorder === void 0 ? void 0 : mediaRecorder.stop();\n    setMediaRecorder(null);\n    setIsRecordable(false);\n    logger.info('VoiceRecorder: Stop recording.');\n  }, [mediaRecorder]);\n  return React__default.createElement(Context.Provider, {\n    value: {\n      start: start,\n      stop: stop,\n      isRecordable: isRecordable\n    }\n  }, children, permissionWarning && React__default.createElement(Modal, {\n    hideFooter: true,\n    onClose: function () {\n      return setPermissionWarning(false);\n    }\n  }, React__default.createElement(React__default.Fragment, null, stringSet.VOICE_RECORDING_PERMISSION_DENIED)));\n};\nvar useVoiceRecorderContext = function () {\n  return useContext(Context);\n};\nvar index = {\n  VoiceRecorderProvider: VoiceRecorderProvider,\n  useVoiceRecorderContext: useVoiceRecorderContext\n};\nvar GlobalModalContext = createContext({\n  openModal: noop\n});\nvar GlobalModalProvider = function (_a) {\n  var children = _a.children;\n  // Idea from https://dev.to/nurislamov/simple-modals-queue-in-react-4g6c\n  var _b = useState([]),\n    globalModalQueue = _b[0],\n    setGlobalModalQueue = _b[1];\n  var openModal = useCallback(function (props) {\n    setGlobalModalQueue(function (currentQue) {\n      return __spreadArray(__spreadArray([], currentQue, true), [props], false);\n    });\n  }, []);\n  var closeModal = useCallback(function () {\n    setGlobalModalQueue(function (currentQue) {\n      return currentQue.slice(1);\n    });\n  }, []);\n  var ModalComponent = useMemo(function () {\n    return function () {\n      return K(globalModalQueue).when(function (q) {\n        return q.length === 0;\n      }, function () {\n        return React__default.createElement(React__default.Fragment, null);\n      }).otherwise(function () {\n        var _a = globalModalQueue[0],\n          modalProps = _a.modalProps,\n          childElement = _a.childElement;\n        return React__default.createElement(Modal, __assign({}, modalProps, {\n          className: classnames('sendbird-global-modal', modalProps === null || modalProps === void 0 ? void 0 : modalProps.className),\n          onClose: function () {\n            var _a;\n            (_a = modalProps === null || modalProps === void 0 ? void 0 : modalProps.onClose) === null || _a === void 0 ? void 0 : _a.call(modalProps);\n            closeModal();\n          }\n        }), childElement({\n          closeModal: closeModal\n        }));\n      });\n    };\n  }, [globalModalQueue]);\n  return React__default.createElement(GlobalModalContext.Provider, {\n    value: {\n      openModal: openModal\n    }\n  }, React__default.createElement(ModalComponent, null), children);\n};\nvar useGlobalModalContext = function () {\n  return useContext(GlobalModalContext);\n};\nvar EmojiManager = /** @class */function () {\n  function EmojiManager(props) {\n    var _this = this;\n    var _a;\n    var sdk = props.sdk,\n      logger = props.logger;\n    (_a = sdk === null || sdk === void 0 ? void 0 : sdk.getAllEmoji) === null || _a === void 0 ? void 0 : _a.call(sdk).then(function (emojiContainer) {\n      _this._emojiContainer = emojiContainer;\n      logger === null || logger === void 0 ? void 0 : logger.info('EmojiManager | Succeeded getting all emojis. ', emojiContainer);\n    }).catch(function () {\n      logger === null || logger === void 0 ? void 0 : logger.warning('EmojiManager | Failed getting all emojis.');\n    });\n  }\n  Object.defineProperty(EmojiManager.prototype, \"AllEmojisAsArray\", {\n    get: function () {\n      return this._emojiContainer.emojiCategories.flatMap(function (category) {\n        return category.emojis;\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EmojiManager.prototype, \"AllEmojisAsMap\", {\n    get: function () {\n      return this._emojiContainer.emojiCategories.flatMap(function (category) {\n        return category.emojis;\n      }).reduce(function (map, emoji) {\n        map.set(emoji.key, emoji.url);\n        return map;\n      }, new Map());\n    },\n    enumerable: false,\n    configurable: true\n  });\n  EmojiManager.prototype.getAllEmojis = function (type) {\n    var _this = this;\n    return K(type).when(function (type) {\n      return ['array', 'arr'].includes(type);\n    }, function () {\n      return _this.AllEmojisAsArray;\n    }).when(function (type) {\n      return ['map'].includes(type);\n    }, function () {\n      return _this.AllEmojisAsMap;\n    }).otherwise(function () {\n      return _this.AllEmojisAsArray;\n    });\n  };\n  EmojiManager.prototype.getEmojiUrl = function (reactionKey) {\n    var _a, _b;\n    return (_b = (_a = this.AllEmojisAsArray.find(function (emoji) {\n      return emoji.key === reactionKey;\n    })) === null || _a === void 0 ? void 0 : _a.url) !== null && _b !== void 0 ? _b : '';\n  };\n  Object.defineProperty(EmojiManager.prototype, \"emojiContainer\", {\n    get: function () {\n      return this._emojiContainer;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return EmojiManager;\n}();\nexport { EmojiManager as E, GlobalModalProvider as G, Modal as M, VoiceRecorderProvider as V, MODAL_ROOT as a, useGlobalModalContext as b, ModalFooter as c, ModalRoot as d, ModalHeader as e, ModalBody as f, index as i, mapColorKeys as m, useVoiceRecorderContext as u };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import { c as __spreadArray, _ as __assign } from './bundle-BQi9-O76.js';\nimport React__default, { useContext, useState, useEffect, createContext, useCallback, useMemo } from 'react';\nimport { K } from './bundle-DxTN4_0p.js';\nimport { c as classnames, n as noop } from './bundle-BgwzpLeQ.js';\nimport { createPortal } from 'react-dom';\nimport { L as LocalizationContext, u as useLocalization } from './bundle-cQZ3UZoG.js';\nimport { u as useMediaQueryContext } from './bundle-f-SpnOx2.js';\nimport IconButton from '../ui/IconButton.js';\nimport Button, { ButtonTypes } from '../ui/Button.js';\nimport Icon, { IconTypes, IconColors } from '../ui/Icon.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from './bundle-DhKQeIfP.js';\nimport '@sendbird/uikit-tools';\nimport '../withSendbird.js';\nimport 'css-vars-ponyfill';\nimport '@sendbird/chat';\nimport { u as uuidv4 } from './bundle-etuaqevl.js';\nimport '@sendbird/chat/openChannel';\nimport '@sendbird/chat/groupChannel';\nimport './bundle-DDeWOERD.js';\nimport { B as BROWSER_SUPPORT_MIME_TYPE_LIST, n as VOICE_RECORDER_AUDIO_BIT_RATE, e as VOICE_MESSAGE_FILE_NAME, a as VOICE_MESSAGE_MIME_TYPE } from './bundle-DCMGp6rH.js';\nimport { useSendbirdStateContext } from '../useSendbirdStateContext.js';\nimport './bundle-CwKZj-B6.js';\n\n/**\n * Mapping object to convert numeric keys to descriptive text\n * [(legacy) numeric key]: [(new) descriptive text]\n */\nvar colorMapping = {\n    // Primary / Secondary / Error / Information\n    100: 'extra-light',\n    200: 'light',\n    300: 'main',\n    400: 'dark',\n    500: 'extra-dark',\n    // Overlay\n    'overlay-01': 'overlay-dark',\n    'overlay-02': 'overlay-light',\n    // OnLight\n    'onlight-01': 'onlight-text-high-emphasis',\n    'onlight-02': 'onlight-text-mid-emphasis',\n    'onlight-03': 'onlight-text-low-emphasis',\n    'onlight-04': 'onlight-text-disabled',\n    // OnDark\n    'ondark-01': 'ondark-text-high-emphasis',\n    'ondark-02': 'ondark-text-mid-emphasis',\n    'ondark-03': 'ondark-text-low-emphasis',\n    'ondark-04': 'ondark-text-disabled',\n};\n/**\n * Order of mappings to ensure longer keys are matched first\n * e.g. In --sendbird-dark-background-extra-dark, 'extra-dark' should be matched instead of 'dark'\n */\nvar colorMappingOrder = Object\n    .values(colorMapping)\n    .sort(function (a, b) { return b.length - a.length; });\n/**\n * Convert colorMapping to a Map for quick lookup in mapColorKeys\n */\nvar colorMappingMap = new Map(Object.entries(colorMapping).map(function (_a) {\n    var key = _a[0], value = _a[1];\n    return [value, key];\n}));\n/**\n * Converts descriptive color keys to their numeric equivalents.\n *\n * This function takes a set of CSS variable keys and transforms\n * descriptive color keys (e.g. 'extra-light', 'main') into their\n * numeric equivalents(e.g. 100, 200, ..., 500) as defined in the colorMapping object.\n *\n * e.g.\n * Input:\n * {\n *   '--sendbird-light-primary-extra-dark': '#00487c',\n *   '--sendbird-light-primary-dark': '#4bb3fd',\n *   '--sendbird-light-primary-main': '#3e6680',\n *   '--sendbird-light-primary-light': '#0496ff',\n *   '--sendbird-light-primary-extra-light': '#027bce',\n * }\n *\n * Output:\n * {\n *   '--sendbird-light-primary-500': '#00487c',\n *   '--sendbird-light-primary-400': '#4bb3fd',\n *   '--sendbird-light-primary-300': '#3e6680',\n *   '--sendbird-light-primary-200': '#0496ff',\n *   '--sendbird-light-primary-100': '#027bce',\n * }\n *\n * @param {ColorSet} colorSet - The input object containing CSS variables with descriptive keys.\n * @returns {ColorSet} The transformed object with numeric keys.\n */\nvar mapColorKeys = function (colorSet) {\n    var mappedColors = {};\n    Object.entries(colorSet).forEach(function (_a) {\n        var key = _a[0], value = _a[1];\n        var descriptiveKey = key;\n        for (var _i = 0, colorMappingOrder_1 = colorMappingOrder; _i < colorMappingOrder_1.length; _i++) {\n            var mappingValue = colorMappingOrder_1[_i];\n            // Prepare a regex to match the mapping value at the end of the key\n            // e.g., '-extra-dark$'\n            var regex = new RegExp(\"-\".concat(mappingValue, \"$\"));\n            if (regex.test(key)) {\n                // Find the corresponding numeric key for the mapping value using Map\n                var numericKey = colorMappingMap.get(mappingValue);\n                if (numericKey) {\n                    // Replace the descriptive text with the numeric key\n                    descriptiveKey = key.replace(regex, \"-\".concat(numericKey));\n                    break;\n                }\n            }\n        }\n        mappedColors[descriptiveKey] = value;\n    });\n    return mappedColors;\n};\n\n// simple component to be used as modal root\nvar MODAL_ROOT = 'sendbird-modal-root';\nvar ModalRoot = function () { return (React__default.createElement(\"div\", { id: MODAL_ROOT, className: MODAL_ROOT })); };\n\nvar ModalHeader = function (_a) {\n    var titleText = _a.titleText, onCloseClick = _a.onCloseClick;\n    return (React__default.createElement(\"div\", { className: \"sendbird-modal__header\" },\n        React__default.createElement(Label, { type: LabelTypography.H_1, color: LabelColors.ONBACKGROUND_1 }, titleText),\n        React__default.createElement(\"div\", { className: \"sendbird-modal__close\" },\n            React__default.createElement(IconButton, { width: \"32px\", height: \"32px\", onClick: onCloseClick },\n                React__default.createElement(Icon, { type: IconTypes.CLOSE, fillColor: IconColors.DEFAULT, width: \"24px\", height: \"24px\" })))));\n};\nvar ModalBody = function (_a) {\n    var children = _a.children;\n    return (React__default.createElement(\"div\", { className: \"sendbird-modal__body\" },\n        React__default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_2 }, children)));\n};\nvar ModalFooter = function (_a) {\n    var submitText = _a.submitText, _b = _a.disabled, disabled = _b === void 0 ? false : _b, _c = _a.hideCancelButton, hideCancelButton = _c === void 0 ? false : _c, _d = _a.type, type = _d === void 0 ? ButtonTypes.DANGER : _d, onSubmit = _a.onSubmit, onCancel = _a.onCancel;\n    var stringSet = useContext(LocalizationContext).stringSet;\n    return (React__default.createElement(\"div\", { className: \"sendbird-modal__footer\" },\n        !hideCancelButton && (React__default.createElement(Button, { type: ButtonTypes.SECONDARY, onClick: onCancel },\n            React__default.createElement(Label, { type: LabelTypography.BUTTON_1, color: LabelColors.ONBACKGROUND_1 }, stringSet.BUTTON__CANCEL))),\n        React__default.createElement(Button, { type: type, disabled: disabled, onClick: onSubmit }, submitText)));\n};\nfunction Modal(props) {\n    var _a;\n    var _b = props.children, children = _b === void 0 ? null : _b, _c = props.className, className = _c === void 0 ? '' : _c, _d = props.contentClassName, contentClassName = _d === void 0 ? '' : _d, _e = props.isCloseOnClickOutside, isCloseOnClickOutside = _e === void 0 ? false : _e, _f = props.isFullScreenOnMobile, isFullScreenOnMobile = _f === void 0 ? false : _f, titleText = props.titleText, submitText = props.submitText, _g = props.disabled, disabled = _g === void 0 ? false : _g, _h = props.hideFooter, hideFooter = _h === void 0 ? false : _h, _j = props.type, type = _j === void 0 ? ButtonTypes.DANGER : _j, renderHeader = props.renderHeader, _k = props.onSubmit, onSubmit = _k === void 0 ? noop : _k, onClose = props.onClose, onCancel = props.onCancel, customFooter = props.customFooter;\n    var handleClose = (_a = onClose !== null && onClose !== void 0 ? onClose : onCancel) !== null && _a !== void 0 ? _a : noop;\n    var eventHandlers = useSendbirdStateContext().eventHandlers;\n    var id = useState(function () { return \"sbu-modal-\".concat(uuidv4()); })[0];\n    useEffect(function () {\n        var _a, _b;\n        return (_b = (_a = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.modal) === null || _a === void 0 ? void 0 : _a.onMounted) === null || _b === void 0 ? void 0 : _b.call(_a, { close: handleClose, id: id });\n    }, []);\n    var isMobile = useMediaQueryContext().isMobile;\n    return createPortal(React__default.createElement(\"div\", { className: classnames('sendbird-modal', className, isFullScreenOnMobile && isMobile && 'sendbird-modal--full-mobile') },\n        React__default.createElement(\"div\", { className: classnames.apply(void 0, __spreadArray(['sendbird-modal__content'], (Array.isArray(contentClassName) ? contentClassName : [contentClassName]), false)) },\n            (renderHeader === null || renderHeader === void 0 ? void 0 : renderHeader()) || React__default.createElement(ModalHeader, { titleText: titleText !== null && titleText !== void 0 ? titleText : '', onCloseClick: handleClose }),\n            React__default.createElement(ModalBody, null, children),\n            !hideFooter\n                && (customFooter !== null && customFooter !== void 0 ? customFooter : (React__default.createElement(ModalFooter, { disabled: disabled, onCancel: handleClose, onSubmit: onSubmit, submitText: submitText !== null && submitText !== void 0 ? submitText : '', type: type })))),\n        React__default.createElement(\"div\", { className: classnames('sendbird-modal__backdrop', isCloseOnClickOutside && 'sendbird-modal__backdrop--clickoutside'), onClick: function (e) {\n                e === null || e === void 0 ? void 0 : e.stopPropagation();\n                if (isCloseOnClickOutside) {\n                    handleClose();\n                }\n            } })), document.getElementById(MODAL_ROOT));\n}\n\nvar Context = createContext({\n    start: noop,\n    stop: noop,\n    isRecordable: false,\n});\nvar VoiceRecorderProvider = function (props) {\n    var _a;\n    var children = props.children;\n    var config = useSendbirdStateContext().config;\n    var logger = config.logger, groupChannel = config.groupChannel;\n    var _b = useState(null), mediaRecorder = _b[0], setMediaRecorder = _b[1];\n    var _c = useState(false), isRecordable = _c[0], setIsRecordable = _c[1];\n    var _d = useState(false), permissionWarning = _d[0], setPermissionWarning = _d[1];\n    var stringSet = useLocalization().stringSet;\n    var isVoiceMessageEnabled = groupChannel.enableVoiceMessage;\n    var _e = useState(null), webAudioUtils = _e[0], setWebAudioUtils = _e[1];\n    var browserSupportMimeType = (_a = BROWSER_SUPPORT_MIME_TYPE_LIST.find(function (mimeType) { return MediaRecorder.isTypeSupported(mimeType); })) !== null && _a !== void 0 ? _a : '';\n    if (isVoiceMessageEnabled && !browserSupportMimeType) {\n        logger.error('VoiceRecorder: Browser does not support mimeType', { mimmeTypes: BROWSER_SUPPORT_MIME_TYPE_LIST });\n    }\n    useEffect(function () {\n        if (isVoiceMessageEnabled && !webAudioUtils) {\n            import('./bundle-bm4u5f1K.js').then(function (module) { return setWebAudioUtils(module); });\n        }\n    }, [isVoiceMessageEnabled, webAudioUtils]);\n    var start = useCallback(function (eventHandler) {\n        var _a, _b;\n        if (isVoiceMessageEnabled && !webAudioUtils) {\n            logger.error('VoiceRecorder: Recording audio processor is being loaded.');\n            return;\n        }\n        var checkPermission = function () {\n            try {\n                // Type '\"microphone\"' is not assignable to type 'PermissionName'.ts(2322)\n                // this is typescript issue\n                // https://github.com/microsoft/TypeScript/issues/33923\n                // @ts-expect-error\n                navigator.permissions.query({ name: 'microphone' }).then(function (result) {\n                    if (result.state === 'denied') {\n                        logger.warning('VoiceRecorder: Permission denied.');\n                        setPermissionWarning(true);\n                    }\n                });\n            }\n            catch (error) {\n                logger.warning('VoiceRecorder: Failed to check permission.', error);\n            }\n        };\n        logger.info('VoiceRecorder: Start recording.');\n        if (mediaRecorder) {\n            stop();\n            logger.info('VoiceRecorder: Previous mediaRecorder is stopped.');\n        }\n        checkPermission();\n        (_b = (_a = navigator === null || navigator === void 0 ? void 0 : navigator.mediaDevices) === null || _a === void 0 ? void 0 : _a.getUserMedia) === null || _b === void 0 ? void 0 : _b.call(_a, { audio: true }).then(function (stream) {\n            var _a;\n            logger.info('VoiceRecorder: Succeeded getting media stream.', stream);\n            setIsRecordable(true);\n            var mediaRecorder = new MediaRecorder(stream, {\n                mimeType: browserSupportMimeType,\n                audioBitsPerSecond: VOICE_RECORDER_AUDIO_BIT_RATE,\n            });\n            // when recording stops\n            mediaRecorder.ondataavailable = function (e) {\n                logger.info('VoiceRecorder: Succeeded getting an available data.', e.data);\n                var audioFile = new File([e.data], VOICE_MESSAGE_FILE_NAME, {\n                    lastModified: new Date().getTime(),\n                    type: VOICE_MESSAGE_MIME_TYPE,\n                });\n                webAudioUtils === null || webAudioUtils === void 0 ? void 0 : webAudioUtils.downsampleToWav(audioFile, function (buffer) {\n                    var _a;\n                    var mp3Buffer = webAudioUtils === null || webAudioUtils === void 0 ? void 0 : webAudioUtils.encodeMp3(buffer);\n                    var mp3blob = new Blob(mp3Buffer, { type: VOICE_MESSAGE_MIME_TYPE });\n                    var convertedAudioFile = new File([mp3blob], VOICE_MESSAGE_FILE_NAME, {\n                        lastModified: new Date().getTime(),\n                        type: VOICE_MESSAGE_MIME_TYPE,\n                    });\n                    (_a = eventHandler === null || eventHandler === void 0 ? void 0 : eventHandler.onRecordingEnded) === null || _a === void 0 ? void 0 : _a.call(eventHandler, convertedAudioFile);\n                    logger.info('VoiceRecorder: Succeeded converting audio file.', convertedAudioFile);\n                });\n                var tracks = stream.getAudioTracks();\n                tracks.forEach(function (track) { return track.stop(); });\n                setIsRecordable(false);\n            };\n            mediaRecorder.onstart = (_a = eventHandler === null || eventHandler === void 0 ? void 0 : eventHandler.onRecordingStarted) !== null && _a !== void 0 ? _a : noop;\n            mediaRecorder === null || mediaRecorder === void 0 ? void 0 : mediaRecorder.start();\n            setMediaRecorder(mediaRecorder);\n        }).catch(function (err) {\n            logger.error('VoiceRecorder: Failed getting media stream.', err);\n            setMediaRecorder(null);\n        });\n    }, [mediaRecorder, webAudioUtils]);\n    var stop = useCallback(function () {\n        // Stop recording\n        mediaRecorder === null || mediaRecorder === void 0 ? void 0 : mediaRecorder.stop();\n        setMediaRecorder(null);\n        setIsRecordable(false);\n        logger.info('VoiceRecorder: Stop recording.');\n    }, [mediaRecorder]);\n    return (React__default.createElement(Context.Provider, { value: { start: start, stop: stop, isRecordable: isRecordable } },\n        children,\n        permissionWarning && (React__default.createElement(Modal, { hideFooter: true, onClose: function () { return setPermissionWarning(false); } },\n            React__default.createElement(React__default.Fragment, null, stringSet.VOICE_RECORDING_PERMISSION_DENIED)))));\n};\nvar useVoiceRecorderContext = function () { return useContext(Context); };\nvar index = {\n    VoiceRecorderProvider: VoiceRecorderProvider,\n    useVoiceRecorderContext: useVoiceRecorderContext,\n};\n\nvar GlobalModalContext = createContext({\n    openModal: noop,\n});\nvar GlobalModalProvider = function (_a) {\n    var children = _a.children;\n    // Idea from https://dev.to/nurislamov/simple-modals-queue-in-react-4g6c\n    var _b = useState([]), globalModalQueue = _b[0], setGlobalModalQueue = _b[1];\n    var openModal = useCallback(function (props) {\n        setGlobalModalQueue(function (currentQue) { return __spreadArray(__spreadArray([], currentQue, true), [props], false); });\n    }, []);\n    var closeModal = useCallback(function () {\n        setGlobalModalQueue(function (currentQue) { return currentQue.slice(1); });\n    }, []);\n    var ModalComponent = useMemo(function () { return function () {\n        return K(globalModalQueue)\n            .when(function (q) { return q.length === 0; }, function () {\n            return React__default.createElement(React__default.Fragment, null);\n        })\n            .otherwise(function () {\n            var _a = globalModalQueue[0], modalProps = _a.modalProps, childElement = _a.childElement;\n            return (React__default.createElement(Modal, __assign({}, modalProps, { className: classnames('sendbird-global-modal', modalProps === null || modalProps === void 0 ? void 0 : modalProps.className), onClose: function () {\n                    var _a;\n                    (_a = modalProps === null || modalProps === void 0 ? void 0 : modalProps.onClose) === null || _a === void 0 ? void 0 : _a.call(modalProps);\n                    closeModal();\n                } }), childElement({\n                closeModal: closeModal,\n            })));\n        });\n    }; }, [globalModalQueue]);\n    return (React__default.createElement(GlobalModalContext.Provider, { value: {\n            openModal: openModal,\n        } },\n        React__default.createElement(ModalComponent, null),\n        children));\n};\nvar useGlobalModalContext = function () { return useContext(GlobalModalContext); };\n\nvar EmojiManager = /** @class */ (function () {\n    function EmojiManager(props) {\n        var _this = this;\n        var _a;\n        var sdk = props.sdk, logger = props.logger;\n        (_a = sdk === null || sdk === void 0 ? void 0 : sdk.getAllEmoji) === null || _a === void 0 ? void 0 : _a.call(sdk).then(function (emojiContainer) {\n            _this._emojiContainer = emojiContainer;\n            logger === null || logger === void 0 ? void 0 : logger.info('EmojiManager | Succeeded getting all emojis. ', emojiContainer);\n        }).catch(function () {\n            logger === null || logger === void 0 ? void 0 : logger.warning('EmojiManager | Failed getting all emojis.');\n        });\n    }\n    Object.defineProperty(EmojiManager.prototype, \"AllEmojisAsArray\", {\n        get: function () {\n            return this._emojiContainer.emojiCategories.flatMap(function (category) { return category.emojis; });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EmojiManager.prototype, \"AllEmojisAsMap\", {\n        get: function () {\n            return this._emojiContainer.emojiCategories\n                .flatMap(function (category) { return category.emojis; })\n                .reduce(function (map, emoji) {\n                map.set(emoji.key, emoji.url);\n                return map;\n            }, new Map());\n        },\n        enumerable: false,\n        configurable: true\n    });\n    EmojiManager.prototype.getAllEmojis = function (type) {\n        var _this = this;\n        return K(type)\n            .when(function (type) { return ['array', 'arr'].includes(type); }, function () { return _this.AllEmojisAsArray; })\n            .when(function (type) { return ['map'].includes(type); }, function () { return _this.AllEmojisAsMap; })\n            .otherwise(function () { return _this.AllEmojisAsArray; });\n    };\n    EmojiManager.prototype.getEmojiUrl = function (reactionKey) {\n        var _a, _b;\n        return (_b = (_a = this.AllEmojisAsArray.find(function (emoji) { return emoji.key === reactionKey; })) === null || _a === void 0 ? void 0 : _a.url) !== null && _b !== void 0 ? _b : '';\n    };\n    Object.defineProperty(EmojiManager.prototype, \"emojiContainer\", {\n        get: function () {\n            return this._emojiContainer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return EmojiManager;\n}());\n\nexport { EmojiManager as E, GlobalModalProvider as G, Modal as M, VoiceRecorderProvider as V, MODAL_ROOT as a, useGlobalModalContext as b, ModalFooter as c, ModalRoot as d, ModalHeader as e, ModalBody as f, index as i, mapColorKeys as m, useVoiceRecorderContext as u };\n//# sourceMappingURL=bundle-CXdo2kR_.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}