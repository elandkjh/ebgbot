{"ast":null,"code":"import React__default, { useContext, useRef } from 'react';\nimport { L as LocalizationContext } from '../chunks/bundle-cQZ3UZoG.js';\nimport { M as Modal } from '../chunks/bundle-CXdo2kR_.js';\nimport Button, { ButtonTypes } from './Button.js';\nimport Input from './Input.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../chunks/bundle-DhKQeIfP.js';\nimport { u as useMediaQueryContext } from '../chunks/bundle-f-SpnOx2.js';\nimport { u as useKeyDown } from '../chunks/bundle-Gdl-rzQC.js';\nimport '../chunks/bundle-BQi9-O76.js';\nimport '../chunks/bundle-Bwk5KPwK.js';\nimport '../chunks/bundle-bdDHjHH6.js';\nimport '../chunks/bundle-DxTN4_0p.js';\nimport '@sendbird/chat/groupChannel';\nimport '../utils/message/getOutgoingMessageState.js';\nimport '../chunks/bundle-CNWAfTVw.js';\nimport '../chunks/bundle-CA85nVxp.js';\nimport '../chunks/bundle-BgwzpLeQ.js';\nimport 'react-dom';\nimport './IconButton.js';\nimport './Icon.js';\nimport '@sendbird/uikit-tools';\nimport '../withSendbird.js';\nimport 'css-vars-ponyfill';\nimport '@sendbird/chat';\nimport '../chunks/bundle-etuaqevl.js';\nimport '@sendbird/chat/openChannel';\nimport '../chunks/bundle-DDeWOERD.js';\nimport '../chunks/bundle-DCMGp6rH.js';\nimport '../useSendbirdStateContext.js';\nimport '../chunks/bundle-CwKZj-B6.js';\nimport './SortByRow.js';\nfunction MessageFeedbackModal(props) {\n  var _a, _b;\n  var selectedFeedback = props.selectedFeedback,\n    message = props.message,\n    onClose = props.onClose,\n    onSubmit = props.onSubmit,\n    onUpdate = props.onUpdate,\n    onRemove = props.onRemove;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var isMobile = useMediaQueryContext().isMobile;\n  var isEdit = (message === null || message === void 0 ? void 0 : message.myFeedback) && selectedFeedback === message.myFeedback.rating;\n  var hasComment = (_a = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _a === void 0 ? void 0 : _a.comment;\n  var onSubmitWrapper = function () {\n    var _a, _b, _c;\n    if (!selectedFeedback) return;\n    var comment = (_b = (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : '';\n    if (isEdit) {\n      if (comment !== ((_c = message.myFeedback) === null || _c === void 0 ? void 0 : _c.comment)) {\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(selectedFeedback, comment);\n      } else {\n        onClose === null || onClose === void 0 ? void 0 : onClose();\n      }\n    } else if (!message.myFeedback) {\n      onSubmit === null || onSubmit === void 0 ? void 0 : onSubmit(selectedFeedback, comment);\n    }\n  };\n  var modalRef = useRef();\n  var inputRef = useRef();\n  var onKeyDown = useKeyDown(modalRef, {\n    Enter: function () {\n      return onSubmitWrapper();\n    },\n    Escape: function () {\n      return onClose === null || onClose === void 0 ? void 0 : onClose();\n    }\n  });\n  return React__default.createElement(\"div\", {\n    onKeyDown: onKeyDown\n  }, React__default.createElement(Modal, {\n    contentClassName: 'sendbird-message-feedback-modal-content__mobile',\n    type: ButtonTypes.PRIMARY,\n    onCancel: onClose,\n    onSubmit: function () {\n      onSubmitWrapper();\n    },\n    submitText: stringSet.BUTTON__SUBMIT,\n    renderHeader: function () {\n      return React__default.createElement(\"div\", {\n        className: 'sendbird-modal__header'\n      }, React__default.createElement(Label, {\n        type: LabelTypography.H_1,\n        color: LabelColors.ONBACKGROUND_1,\n        className: 'sendbird-message-feedback-modal-header'\n      }, stringSet.FEEDBACK_MODAL_TITLE));\n    },\n    customFooter: React__default.createElement(\"div\", {\n      className: 'sendbird-message-feedback-modal-footer__root'\n    }, !isMobile && (message === null || message === void 0 ? void 0 : message.myFeedback) && selectedFeedback === message.myFeedback.rating ? React__default.createElement(Button, {\n      type: ButtonTypes.WARNING,\n      onClick: onRemove,\n      labelType: LabelTypography.BUTTON_3\n    }, stringSet.BUTTON__REMOVE_FEEDBACK) : React__default.createElement(\"div\", null), React__default.createElement(\"div\", {\n      className: 'sendbird-message-feedback-modal-footer__right-content'\n    }, React__default.createElement(Button, {\n      type: ButtonTypes.SECONDARY,\n      onClick: onClose\n    }, React__default.createElement(Label, {\n      type: LabelTypography.BUTTON_3,\n      color: LabelColors.ONBACKGROUND_1\n    }, stringSet.BUTTON__CANCEL)), React__default.createElement(Button, {\n      onClick: function () {\n        return onSubmitWrapper();\n      }\n    }, React__default.createElement(Label, {\n      type: LabelTypography.BUTTON_3,\n      color: LabelColors.ONCONTENT_1\n    }, hasComment ? stringSet.BUTTON__SAVE : stringSet.BUTTON__SUBMIT))))\n  }, React__default.createElement(\"div\", {\n    className: 'sendbird-message-feedback-modal-body__root'\n  }, React__default.createElement(Input, {\n    name: 'sendbird-message-feedback-modal-body__root',\n    ref: inputRef,\n    value: isEdit ? (_b = message.myFeedback) === null || _b === void 0 ? void 0 : _b.comment : undefined,\n    placeHolder: stringSet.FEEDBACK_CONTENT_PLACEHOLDER,\n    autoFocus: true\n  }))));\n}\nexport { MessageFeedbackModal as default };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import React__default, { useContext, useRef } from 'react';\nimport { L as LocalizationContext } from '../chunks/bundle-cQZ3UZoG.js';\nimport { M as Modal } from '../chunks/bundle-CXdo2kR_.js';\nimport Button, { ButtonTypes } from './Button.js';\nimport Input from './Input.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../chunks/bundle-DhKQeIfP.js';\nimport { u as useMediaQueryContext } from '../chunks/bundle-f-SpnOx2.js';\nimport { u as useKeyDown } from '../chunks/bundle-Gdl-rzQC.js';\nimport '../chunks/bundle-BQi9-O76.js';\nimport '../chunks/bundle-Bwk5KPwK.js';\nimport '../chunks/bundle-bdDHjHH6.js';\nimport '../chunks/bundle-DxTN4_0p.js';\nimport '@sendbird/chat/groupChannel';\nimport '../utils/message/getOutgoingMessageState.js';\nimport '../chunks/bundle-CNWAfTVw.js';\nimport '../chunks/bundle-CA85nVxp.js';\nimport '../chunks/bundle-BgwzpLeQ.js';\nimport 'react-dom';\nimport './IconButton.js';\nimport './Icon.js';\nimport '@sendbird/uikit-tools';\nimport '../withSendbird.js';\nimport 'css-vars-ponyfill';\nimport '@sendbird/chat';\nimport '../chunks/bundle-etuaqevl.js';\nimport '@sendbird/chat/openChannel';\nimport '../chunks/bundle-DDeWOERD.js';\nimport '../chunks/bundle-DCMGp6rH.js';\nimport '../useSendbirdStateContext.js';\nimport '../chunks/bundle-CwKZj-B6.js';\nimport './SortByRow.js';\n\nfunction MessageFeedbackModal(props) {\n    var _a, _b;\n    var selectedFeedback = props.selectedFeedback, message = props.message, onClose = props.onClose, onSubmit = props.onSubmit, onUpdate = props.onUpdate, onRemove = props.onRemove;\n    var stringSet = useContext(LocalizationContext).stringSet;\n    var isMobile = useMediaQueryContext().isMobile;\n    var isEdit = (message === null || message === void 0 ? void 0 : message.myFeedback) && selectedFeedback === message.myFeedback.rating;\n    var hasComment = (_a = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _a === void 0 ? void 0 : _a.comment;\n    var onSubmitWrapper = function () {\n        var _a, _b, _c;\n        if (!selectedFeedback)\n            return;\n        var comment = (_b = (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : '';\n        if (isEdit) {\n            if (comment !== ((_c = message.myFeedback) === null || _c === void 0 ? void 0 : _c.comment)) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(selectedFeedback, comment);\n            }\n            else {\n                onClose === null || onClose === void 0 ? void 0 : onClose();\n            }\n        }\n        else if (!message.myFeedback) {\n            onSubmit === null || onSubmit === void 0 ? void 0 : onSubmit(selectedFeedback, comment);\n        }\n    };\n    var modalRef = useRef();\n    var inputRef = useRef();\n    var onKeyDown = useKeyDown(modalRef, {\n        Enter: function () { return onSubmitWrapper(); },\n        Escape: function () { return onClose === null || onClose === void 0 ? void 0 : onClose(); },\n    });\n    return (React__default.createElement(\"div\", { onKeyDown: onKeyDown },\n        React__default.createElement(Modal, { contentClassName: 'sendbird-message-feedback-modal-content__mobile', type: ButtonTypes.PRIMARY, onCancel: onClose, onSubmit: function () {\n                onSubmitWrapper();\n            }, submitText: stringSet.BUTTON__SUBMIT, renderHeader: function () { return (React__default.createElement(\"div\", { className: 'sendbird-modal__header' },\n                React__default.createElement(Label, { type: LabelTypography.H_1, color: LabelColors.ONBACKGROUND_1, className: 'sendbird-message-feedback-modal-header' }, stringSet.FEEDBACK_MODAL_TITLE))); }, customFooter: React__default.createElement(\"div\", { className: 'sendbird-message-feedback-modal-footer__root' },\n                !isMobile && (message === null || message === void 0 ? void 0 : message.myFeedback) && selectedFeedback === message.myFeedback.rating\n                    ? React__default.createElement(Button, { type: ButtonTypes.WARNING, onClick: onRemove, labelType: LabelTypography.BUTTON_3 }, stringSet.BUTTON__REMOVE_FEEDBACK)\n                    : React__default.createElement(\"div\", null),\n                React__default.createElement(\"div\", { className: 'sendbird-message-feedback-modal-footer__right-content' },\n                    React__default.createElement(Button, { type: ButtonTypes.SECONDARY, onClick: onClose },\n                        React__default.createElement(Label, { type: LabelTypography.BUTTON_3, color: LabelColors.ONBACKGROUND_1 }, stringSet.BUTTON__CANCEL)),\n                    React__default.createElement(Button, { onClick: function () { return onSubmitWrapper(); } },\n                        React__default.createElement(Label, { type: LabelTypography.BUTTON_3, color: LabelColors.ONCONTENT_1 }, hasComment ? stringSet.BUTTON__SAVE : stringSet.BUTTON__SUBMIT)))) },\n            React__default.createElement(\"div\", { className: 'sendbird-message-feedback-modal-body__root' },\n                React__default.createElement(Input, { name: 'sendbird-message-feedback-modal-body__root', ref: inputRef, value: isEdit ? (_b = message.myFeedback) === null || _b === void 0 ? void 0 : _b.comment : undefined, placeHolder: stringSet.FEEDBACK_CONTENT_PLACEHOLDER, autoFocus: true })))));\n}\n\nexport { MessageFeedbackModal as default };\n//# sourceMappingURL=MessageFeedbackModal.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}