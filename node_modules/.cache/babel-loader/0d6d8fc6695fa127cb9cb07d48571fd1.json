{"ast":null,"code":"import { _ as __assign } from '../../chunks/bundle-BQi9-O76.js';\nimport React__default, { useState } from 'react';\nimport { L as Label } from '../../chunks/bundle-DhKQeIfP.js';\nimport Icon from '../../ui/Icon.js';\nimport { i as isOperator } from '../../chunks/bundle-CMLImr6T.js';\nimport { MenuItem } from './ChannelSettingsMenuItem.js';\nimport { useChannelSettingsContext } from '../context.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../chunks/bundle-BgwzpLeQ.js';\nimport '@sendbird/chat/message';\nimport '../../useSendbirdStateContext.js';\nimport '../../withSendbird.js';\nimport '../../chunks/bundle-BrTJ5Zbd.js';\nimport '../../chunks/bundle-etuaqevl.js';\nvar MenuListByRole = function (_a) {\n  var menuItems = _a.menuItems;\n  var channel = useChannelSettingsContext().channel;\n  var menuItemsByRole = isOperator(channel) ? menuItems.operator : menuItems.nonOperator;\n  // State to track the open accordion key\n  var _b = useState(null),\n    openAccordionKey = _b[0],\n    setOpenAccordionKey = _b[1];\n  return React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings__operator\"\n  }, Object.entries(menuItemsByRole).map(function (_a) {\n    var key = _a[0],\n      item = _a[1];\n    if (item.hideMenu) return null;\n    return React__default.createElement(MenuItem, {\n      key: key,\n      onClick: item.onClick,\n      onKeyDown: item.onKeyDown,\n      renderLeft: function () {\n        return React__default.createElement(Icon, __assign({}, item.icon));\n      },\n      renderMiddle: function () {\n        return React__default.createElement(Label, __assign({}, item.label));\n      },\n      renderRight: item.rightComponent,\n      renderAccordion: item.accordionComponent,\n      accordionOpened: openAccordionKey === key,\n      setAccordionOpened: function () {\n        setOpenAccordionKey(function (prevKey) {\n          return prevKey === key ? null : key;\n        });\n      }\n    });\n  }));\n};\nexport { MenuListByRole, MenuListByRole as default };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import { _ as __assign } from '../../chunks/bundle-BQi9-O76.js';\nimport React__default, { useState } from 'react';\nimport { L as Label } from '../../chunks/bundle-DhKQeIfP.js';\nimport Icon from '../../ui/Icon.js';\nimport { i as isOperator } from '../../chunks/bundle-CMLImr6T.js';\nimport { MenuItem } from './ChannelSettingsMenuItem.js';\nimport { useChannelSettingsContext } from '../context.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../chunks/bundle-BgwzpLeQ.js';\nimport '@sendbird/chat/message';\nimport '../../useSendbirdStateContext.js';\nimport '../../withSendbird.js';\nimport '../../chunks/bundle-BrTJ5Zbd.js';\nimport '../../chunks/bundle-etuaqevl.js';\n\nvar MenuListByRole = function (_a) {\n    var menuItems = _a.menuItems;\n    var channel = useChannelSettingsContext().channel;\n    var menuItemsByRole = isOperator(channel) ? menuItems.operator : menuItems.nonOperator;\n    // State to track the open accordion key\n    var _b = useState(null), openAccordionKey = _b[0], setOpenAccordionKey = _b[1];\n    return (React__default.createElement(\"div\", { className: \"sendbird-channel-settings__operator\" }, Object.entries(menuItemsByRole).map(function (_a) {\n        var key = _a[0], item = _a[1];\n        if (item.hideMenu)\n            return null;\n        return (React__default.createElement(MenuItem, { key: key, onClick: item.onClick, onKeyDown: item.onKeyDown, renderLeft: function () { return React__default.createElement(Icon, __assign({}, item.icon)); }, renderMiddle: function () { return React__default.createElement(Label, __assign({}, item.label)); }, renderRight: item.rightComponent, renderAccordion: item.accordionComponent, accordionOpened: openAccordionKey === key, setAccordionOpened: function () {\n                setOpenAccordionKey(function (prevKey) { return (prevKey === key ? null : key); });\n            } }));\n    })));\n};\n\nexport { MenuListByRole, MenuListByRole as default };\n//# sourceMappingURL=ChannelSettingMenuList.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}