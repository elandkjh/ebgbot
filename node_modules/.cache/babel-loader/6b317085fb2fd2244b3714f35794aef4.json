{"ast":null,"code":"import React__default, { useContext } from 'react';\nimport { L as LocalizationContext } from '../../chunks/bundle-cQZ3UZoG.js';\nimport { useMessageSearchContext } from '../context.js';\nimport MessageSearchItem from '../../ui/MessageSearchItem.js';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder.js';\nimport MessageSearchFileItem from '../../ui/MessageSearchFileItem.js';\nimport '../../chunks/bundle-BQi9-O76.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\nimport '../../useSendbirdStateContext.js';\nimport '../../withSendbird.js';\nimport '../../chunks/bundle-CAdqcqOm.js';\nimport '../../chunks/bundle-CA85nVxp.js';\nimport '../../chunks/bundle-BHK1eF5R.js';\nimport '../../chunks/bundle-F5koPk19.js';\nimport '../../chunks/bundle-CFosTNce.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../chunks/bundle-BgwzpLeQ.js';\nimport '../../chunks/bundle-DXRRGizV.js';\nimport '../../ui/Icon.js';\nimport '../../chunks/bundle-DhKQeIfP.js';\nimport '../../ui/Loader.js';\nimport '../../chunks/bundle-DxTN4_0p.js';\nimport '@sendbird/chat/groupChannel';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../chunks/bundle-CNWAfTVw.js';\nimport '../../chunks/bundle-BqMHiKkl.js';\nvar MessageSearchUI = function (_a) {\n  var renderPlaceHolderError = _a.renderPlaceHolderError,\n    renderPlaceHolderLoading = _a.renderPlaceHolderLoading,\n    renderPlaceHolderNoString = _a.renderPlaceHolderNoString,\n    renderPlaceHolderEmptyList = _a.renderPlaceHolderEmptyList,\n    renderSearchItem = _a.renderSearchItem;\n  var _b = useMessageSearchContext(),\n    isInvalid = _b.isInvalid,\n    searchString = _b.searchString,\n    requestString = _b.requestString,\n    currentChannel = _b.currentChannel,\n    retryCount = _b.retryCount,\n    setRetryCount = _b.setRetryCount,\n    loading = _b.loading,\n    scrollRef = _b.scrollRef,\n    hasMoreResult = _b.hasMoreResult,\n    onScroll = _b.onScroll,\n    allMessages = _b.allMessages,\n    onResultClick = _b.onResultClick,\n    selectedMessageId = _b.selectedMessageId,\n    setSelectedMessageId = _b.setSelectedMessageId;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var handleRetryToConnect = function () {\n    setRetryCount(retryCount + 1);\n  };\n  var handleOnScroll = function (e) {\n    var scrollElement = e.target;\n    var scrollTop = scrollElement.scrollTop,\n      scrollHeight = scrollElement.scrollHeight,\n      clientHeight = scrollElement.clientHeight;\n    if (!hasMoreResult) {\n      return;\n    }\n    if (scrollTop + clientHeight >= scrollHeight - 1) {\n      onScroll(function () {\n        // after load more searched messages\n      });\n    }\n  };\n  var getChannelName = function () {\n    if (currentChannel && (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.name) && (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.name) !== 'Group Channel') {\n      return currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.name;\n    }\n    if (currentChannel && ((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.name) === 'Group Channel' || !(currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.name))) {\n      return currentChannel.members.map(function (member) {\n        return member.nickname || stringSet.NO_NAME;\n      }).join(', ');\n    }\n    return stringSet.NO_TITLE;\n  };\n  if (isInvalid && searchString && requestString) {\n    return (renderPlaceHolderError === null || renderPlaceHolderError === void 0 ? void 0 : renderPlaceHolderError()) || React__default.createElement(\"div\", {\n      className: \"sendbird-message-search\"\n    }, React__default.createElement(PlaceHolder, {\n      type: PlaceHolderTypes.WRONG,\n      retryToConnect: handleRetryToConnect\n    }));\n  }\n  if (loading && searchString && requestString) {\n    return (renderPlaceHolderLoading === null || renderPlaceHolderLoading === void 0 ? void 0 : renderPlaceHolderLoading()) || React__default.createElement(\"div\", {\n      className: \"sendbird-message-search\"\n    }, React__default.createElement(PlaceHolder, {\n      type: PlaceHolderTypes.SEARCHING\n    }));\n  }\n  if (!searchString) {\n    return (renderPlaceHolderNoString === null || renderPlaceHolderNoString === void 0 ? void 0 : renderPlaceHolderNoString()) || React__default.createElement(\"div\", {\n      className: \"sendbird-message-search\"\n    }, React__default.createElement(PlaceHolder, {\n      type: PlaceHolderTypes.SEARCH_IN,\n      searchInString: getChannelName()\n    }));\n  }\n  return React__default.createElement(\"div\", {\n    className: \"sendbird-message-search\",\n    onScroll: handleOnScroll,\n    ref: scrollRef\n  }, allMessages.length > 0 ? allMessages.map(function (message) {\n    if (renderSearchItem) {\n      return renderSearchItem({\n        message: message,\n        onResultClick: onResultClick\n      });\n    }\n    if (message.messageType === 'file') {\n      return React__default.createElement(MessageSearchFileItem, {\n        className: \"sendbird-message-search__message-search-item\",\n        message: message,\n        key: message.messageId,\n        selected: selectedMessageId === message.messageId,\n        onClick: function () {\n          onResultClick === null || onResultClick === void 0 ? void 0 : onResultClick(message);\n          setSelectedMessageId(message.messageId);\n        }\n      });\n    }\n    return React__default.createElement(MessageSearchItem, {\n      className: \"sendbird-message-search__message-search-item\",\n      message: message,\n      key: message.messageId,\n      selected: selectedMessageId === message.messageId,\n      onClick: function () {\n        onResultClick === null || onResultClick === void 0 ? void 0 : onResultClick(message);\n        setSelectedMessageId(message.messageId);\n      }\n    });\n  }) : (renderPlaceHolderEmptyList === null || renderPlaceHolderEmptyList === void 0 ? void 0 : renderPlaceHolderEmptyList()) || React__default.createElement(PlaceHolder, {\n    type: PlaceHolderTypes.NO_RESULTS\n  }));\n};\nexport { MessageSearchUI, MessageSearchUI as default };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import React__default, { useContext } from 'react';\nimport { L as LocalizationContext } from '../../chunks/bundle-cQZ3UZoG.js';\nimport { useMessageSearchContext } from '../context.js';\nimport MessageSearchItem from '../../ui/MessageSearchItem.js';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder.js';\nimport MessageSearchFileItem from '../../ui/MessageSearchFileItem.js';\nimport '../../chunks/bundle-BQi9-O76.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\nimport '../../useSendbirdStateContext.js';\nimport '../../withSendbird.js';\nimport '../../chunks/bundle-CAdqcqOm.js';\nimport '../../chunks/bundle-CA85nVxp.js';\nimport '../../chunks/bundle-BHK1eF5R.js';\nimport '../../chunks/bundle-F5koPk19.js';\nimport '../../chunks/bundle-CFosTNce.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../chunks/bundle-BgwzpLeQ.js';\nimport '../../chunks/bundle-DXRRGizV.js';\nimport '../../ui/Icon.js';\nimport '../../chunks/bundle-DhKQeIfP.js';\nimport '../../ui/Loader.js';\nimport '../../chunks/bundle-DxTN4_0p.js';\nimport '@sendbird/chat/groupChannel';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../chunks/bundle-CNWAfTVw.js';\nimport '../../chunks/bundle-BqMHiKkl.js';\n\nvar MessageSearchUI = function (_a) {\n    var renderPlaceHolderError = _a.renderPlaceHolderError, renderPlaceHolderLoading = _a.renderPlaceHolderLoading, renderPlaceHolderNoString = _a.renderPlaceHolderNoString, renderPlaceHolderEmptyList = _a.renderPlaceHolderEmptyList, renderSearchItem = _a.renderSearchItem;\n    var _b = useMessageSearchContext(), isInvalid = _b.isInvalid, searchString = _b.searchString, requestString = _b.requestString, currentChannel = _b.currentChannel, retryCount = _b.retryCount, setRetryCount = _b.setRetryCount, loading = _b.loading, scrollRef = _b.scrollRef, hasMoreResult = _b.hasMoreResult, onScroll = _b.onScroll, allMessages = _b.allMessages, onResultClick = _b.onResultClick, selectedMessageId = _b.selectedMessageId, setSelectedMessageId = _b.setSelectedMessageId;\n    var stringSet = useContext(LocalizationContext).stringSet;\n    var handleRetryToConnect = function () {\n        setRetryCount(retryCount + 1);\n    };\n    var handleOnScroll = function (e) {\n        var scrollElement = e.target;\n        var scrollTop = scrollElement.scrollTop, scrollHeight = scrollElement.scrollHeight, clientHeight = scrollElement.clientHeight;\n        if (!hasMoreResult) {\n            return;\n        }\n        if (scrollTop + clientHeight >= scrollHeight - 1) {\n            onScroll(function () {\n                // after load more searched messages\n            });\n        }\n    };\n    var getChannelName = function () {\n        if (currentChannel && (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.name) && (currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.name) !== 'Group Channel') {\n            return currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.name;\n        }\n        if (currentChannel && ((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.name) === 'Group Channel' || !(currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.name))) {\n            return currentChannel.members.map(function (member) { return member.nickname || stringSet.NO_NAME; }).join(', ');\n        }\n        return stringSet.NO_TITLE;\n    };\n    if (isInvalid && searchString && requestString) {\n        return (renderPlaceHolderError === null || renderPlaceHolderError === void 0 ? void 0 : renderPlaceHolderError()) || (React__default.createElement(\"div\", { className: \"sendbird-message-search\" },\n            React__default.createElement(PlaceHolder, { type: PlaceHolderTypes.WRONG, retryToConnect: handleRetryToConnect })));\n    }\n    if (loading && searchString && requestString) {\n        return (renderPlaceHolderLoading === null || renderPlaceHolderLoading === void 0 ? void 0 : renderPlaceHolderLoading()) || (React__default.createElement(\"div\", { className: \"sendbird-message-search\" },\n            React__default.createElement(PlaceHolder, { type: PlaceHolderTypes.SEARCHING })));\n    }\n    if (!searchString) {\n        return (renderPlaceHolderNoString === null || renderPlaceHolderNoString === void 0 ? void 0 : renderPlaceHolderNoString()) || (React__default.createElement(\"div\", { className: \"sendbird-message-search\" },\n            React__default.createElement(PlaceHolder, { type: PlaceHolderTypes.SEARCH_IN, searchInString: getChannelName() })));\n    }\n    return (React__default.createElement(\"div\", { className: \"sendbird-message-search\", onScroll: handleOnScroll, ref: scrollRef }, (allMessages.length > 0)\n        ? (allMessages.map(function (message) {\n            if (renderSearchItem) {\n                return renderSearchItem({ message: message, onResultClick: onResultClick });\n            }\n            if (message.messageType === 'file') {\n                return (React__default.createElement(MessageSearchFileItem, { className: \"sendbird-message-search__message-search-item\", message: message, key: message.messageId, selected: (selectedMessageId === message.messageId), onClick: function () {\n                        onResultClick === null || onResultClick === void 0 ? void 0 : onResultClick(message);\n                        setSelectedMessageId(message.messageId);\n                    } }));\n            }\n            return (React__default.createElement(MessageSearchItem, { className: \"sendbird-message-search__message-search-item\", message: message, key: message.messageId, selected: (selectedMessageId === message.messageId), onClick: function () {\n                    onResultClick === null || onResultClick === void 0 ? void 0 : onResultClick(message);\n                    setSelectedMessageId(message.messageId);\n                } }));\n        }))\n        : (renderPlaceHolderEmptyList === null || renderPlaceHolderEmptyList === void 0 ? void 0 : renderPlaceHolderEmptyList()) || (React__default.createElement(PlaceHolder, { type: PlaceHolderTypes.NO_RESULTS }))));\n};\n\nexport { MessageSearchUI, MessageSearchUI as default };\n//# sourceMappingURL=MessageSearchUI.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}