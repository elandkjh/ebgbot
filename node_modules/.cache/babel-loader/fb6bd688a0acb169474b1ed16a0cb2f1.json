{"ast":null,"code":"import React__default, { useContext } from 'react';\nimport { M as Modal } from './bundle-CXdo2kR_.js';\nimport './bundle-BQi9-O76.js';\nimport './bundle-DhKQeIfP.js';\nimport { ButtonTypes } from '../ui/Button.js';\nimport { L as LocalizationContext } from './bundle-cQZ3UZoG.js';\nimport { useThreadContext } from '../Thread/context.js';\nimport { g as getModalDeleteMessageTitle } from './bundle-Zvm5CMGT.js';\nvar RemoveMessage = function (props) {\n  var _a, _b;\n  var onCancel = props.onCancel,\n    onSubmit = props.onSubmit,\n    message = props.message;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var deleteMessage = useThreadContext().deleteMessage;\n  return React__default.createElement(Modal, {\n    type: ButtonTypes.DANGER,\n    disabled: ((_b = (_a = message.threadInfo) === null || _a === void 0 ? void 0 : _a.replyCount) !== null && _b !== void 0 ? _b : 0) > 0,\n    onCancel: onCancel,\n    onSubmit: function () {\n      deleteMessage(message).then(function () {\n        onCancel === null || onCancel === void 0 ? void 0 : onCancel();\n        onSubmit === null || onSubmit === void 0 ? void 0 : onSubmit();\n      });\n    },\n    submitText: stringSet.MESSAGE_MENU__DELETE,\n    titleText: getModalDeleteMessageTitle(stringSet, message)\n  });\n};\nexport { RemoveMessage as R };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import React__default, { useContext } from 'react';\nimport { M as Modal } from './bundle-CXdo2kR_.js';\nimport './bundle-BQi9-O76.js';\nimport './bundle-DhKQeIfP.js';\nimport { ButtonTypes } from '../ui/Button.js';\nimport { L as LocalizationContext } from './bundle-cQZ3UZoG.js';\nimport { useThreadContext } from '../Thread/context.js';\nimport { g as getModalDeleteMessageTitle } from './bundle-Zvm5CMGT.js';\n\nvar RemoveMessage = function (props) {\n    var _a, _b;\n    var onCancel = props.onCancel, onSubmit = props.onSubmit, message = props.message;\n    var stringSet = useContext(LocalizationContext).stringSet;\n    var deleteMessage = useThreadContext().deleteMessage;\n    return (React__default.createElement(Modal, { type: ButtonTypes.DANGER, disabled: ((_b = (_a = message.threadInfo) === null || _a === void 0 ? void 0 : _a.replyCount) !== null && _b !== void 0 ? _b : 0) > 0, onCancel: onCancel, onSubmit: function () {\n            deleteMessage(message).then(function () {\n                onCancel === null || onCancel === void 0 ? void 0 : onCancel();\n                onSubmit === null || onSubmit === void 0 ? void 0 : onSubmit();\n            });\n        }, submitText: stringSet.MESSAGE_MENU__DELETE, titleText: getModalDeleteMessageTitle(stringSet, message) }));\n};\n\nexport { RemoveMessage as R };\n//# sourceMappingURL=bundle-D6ZpcPbH.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}