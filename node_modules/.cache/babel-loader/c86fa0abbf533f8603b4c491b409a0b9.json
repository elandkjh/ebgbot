{"ast":null,"code":"import { c as __spreadArray, _ as __assign, a as __awaiter, b as __generator } from '../../chunks/bundle-BQi9-O76.js';\nimport React__default, { useState, useRef, useEffect, useContext } from 'react';\nimport { f as format } from '../../chunks/bundle-CAdqcqOm.js';\nimport { R as RemoveMessage } from '../../chunks/bundle-D6ZpcPbH.js';\nimport ParentMessageInfoItem from './ParentMessageInfoItem.js';\nimport { e as getSenderName } from '../../chunks/bundle-DxTN4_0p.js';\nimport { g as getIsReactionEnabled } from '../../chunks/bundle-BNDaXsLn.js';\nimport { u as useLocalization } from '../../chunks/bundle-cQZ3UZoG.js';\nimport { useSendbirdStateContext } from '../../useSendbirdStateContext.js';\nimport { useThreadContext } from '../context.js';\nimport { a as UserProfileContext } from '../../chunks/bundle-BrTJ5Zbd.js';\nimport { S as SuggestedMentionList } from '../../chunks/bundle-BsAIw_77.js';\nimport { A as Avatar } from '../../chunks/bundle-CFosTNce.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../../chunks/bundle-DhKQeIfP.js';\nimport FileViewer from '../../ui/FileViewer.js';\nimport { MessageEmojiMenu } from '../../ui/MessageItemReactionMenu.js';\nimport { d as MENU_ROOT_ID, E as EMOJI_MENU_ROOT_ID, g as getObservingId, e as MENU_OBSERVING_CLASS_NAME, C as ContextMenu, b as MenuItems } from '../../chunks/bundle-CwKZj-B6.js';\nimport UserProfile from '../../ui/UserProfile.js';\nimport MessageInput from '../../ui/MessageInput.js';\nimport { M as MessageInputKeys } from '../../chunks/bundle-0qSTzMXb.js';\nimport { R as Role } from '../../chunks/bundle-C3Ty1Yuy.js';\nimport { u as useMediaQueryContext } from '../../chunks/bundle-f-SpnOx2.js';\nimport { u as useLongPress } from '../../chunks/bundle-AfQS5DGf.js';\nimport { MobileMenu } from '../../ui/MobileMenu.js';\nimport { useDirtyGetMentions } from '../../Message/hooks/useDirtyGetMentions.js';\nimport { g as getCaseResolvedReplyType } from '../../chunks/bundle-fHeMHhND.js';\nimport { c as classnames } from '../../chunks/bundle-BgwzpLeQ.js';\nimport { M as MessageMenu } from '../../chunks/bundle-DkBecO3w.js';\nimport { u as useElementObserver } from '../../chunks/bundle-Cf0UgZwi.js';\nimport '../../chunks/bundle-CA85nVxp.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\nimport '../../chunks/bundle-CXdo2kR_.js';\nimport 'react-dom';\nimport '../../ui/IconButton.js';\nimport '../../ui/Button.js';\nimport '../../ui/Icon.js';\nimport '@sendbird/uikit-tools';\nimport '../../withSendbird.js';\nimport 'css-vars-ponyfill';\nimport '@sendbird/chat';\nimport '../../chunks/bundle-etuaqevl.js';\nimport '@sendbird/chat/openChannel';\nimport '@sendbird/chat/groupChannel';\nimport '../../chunks/bundle-DDeWOERD.js';\nimport '../../chunks/bundle-DCMGp6rH.js';\nimport '../../chunks/bundle-CNWAfTVw.js';\nimport '../../chunks/bundle-Zvm5CMGT.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../ui/TextButton.js';\nimport '../../chunks/bundle-rA4afvKU.js';\nimport '../../ui/EmojiReactions.js';\nimport '../../ui/ReactionBadge.js';\nimport '../../ui/ReactionButton.js';\nimport '../../ui/BottomSheet.js';\nimport '../../ui/UserListItem.js';\nimport '../../ui/MutedAvatarOverlay.js';\nimport '../../ui/Checkbox.js';\nimport '../../chunks/bundle-DXRRGizV.js';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../ui/SortByRow.js';\nimport '../../sendbirdSelectors.js';\nimport '../../chunks/bundle-b6TpX_JP.js';\nimport '../../ui/Tooltip.js';\nimport '../../ui/TooltipWrapper.js';\nimport '../../Message/context.js';\nimport '../../ui/VoiceMessageItemBody.js';\nimport '../../ui/ProgressBar.js';\nimport '../../VoicePlayer/useVoicePlayer.js';\nimport '../../ui/PlaybackTime.js';\nimport '../../ui/Loader.js';\nimport '../../chunks/bundle-DofK8ySe.js';\nimport '../../chunks/bundle-GUbI4JcD.js';\nimport '../../ui/MentionLabel.js';\nimport '../../ui/LinkLabel.js';\nimport '../../chunks/bundle-ZVq6xGXk.js';\nimport '@sendbird/chat/message';\nimport '../../chunks/bundle-T6fVCCb7.js';\nimport '../../chunks/bundle-CMLImr6T.js';\nimport '../context/types.js';\nimport '../../chunks/bundle-CpjASiz4.js';\nimport '../../chunks/bundle-CZUYMubi.js';\nimport '../../chunks/bundle-Due9yzp6.js';\nimport '../../chunks/bundle-CveCFQYP.js';\nimport '../../chunks/bundle-Gdl-rzQC.js';\nimport '../../chunks/bundle-TZQ6dJCG.js';\nimport 'dompurify';\nimport '../../chunks/bundle-0nQK2G2O.js';\nimport '../../chunks/bundle-B6edg1g0.js';\nimport '../../chunks/bundle-DhGZA5UP.js';\nfunction ParentMessageInfo(_a) {\n  var _this = this;\n  var _b, _c, _d, _e, _f, _g;\n  var className = _a.className,\n    _h = _a.renderEmojiMenu,\n    renderEmojiMenu = _h === void 0 ? function (props) {\n      return React__default.createElement(MessageEmojiMenu, __assign({}, props));\n    } : _h,\n    _j = _a.renderMessageMenu,\n    renderMessageMenu = _j === void 0 ? function (props) {\n      return React__default.createElement(MessageMenu, __assign({}, props));\n    } : _j;\n  var _k = useSendbirdStateContext(),\n    stores = _k.stores,\n    config = _k.config;\n  var isOnline = config.isOnline,\n    userMention = config.userMention,\n    logger = config.logger,\n    groupChannel = config.groupChannel;\n  var userId = (_c = (_b = stores.userStore.user) === null || _b === void 0 ? void 0 : _b.userId) !== null && _c !== void 0 ? _c : '';\n  var dateLocale = useLocalization().dateLocale;\n  var _l = useThreadContext(),\n    currentChannel = _l.currentChannel,\n    parentMessage = _l.parentMessage,\n    allThreadMessages = _l.allThreadMessages,\n    emojiContainer = _l.emojiContainer,\n    toggleReaction = _l.toggleReaction,\n    updateMessage = _l.updateMessage,\n    deleteMessage = _l.deleteMessage,\n    onMoveToParentMessage = _l.onMoveToParentMessage,\n    onHeaderActionClick = _l.onHeaderActionClick,\n    isMuted = _l.isMuted,\n    isChannelFrozen = _l.isChannelFrozen,\n    onBeforeDownloadFileMessage = _l.onBeforeDownloadFileMessage;\n  var isMobile = useMediaQueryContext().isMobile;\n  var isMenuMounted = useElementObserver(\"#\".concat(getObservingId(parentMessage.messageId), \".\").concat(MENU_OBSERVING_CLASS_NAME), [document.getElementById(MENU_ROOT_ID), document.getElementById(EMOJI_MENU_ROOT_ID)]);\n  var _m = useState(false),\n    showRemove = _m[0],\n    setShowRemove = _m[1];\n  var _o = useState(false),\n    showFileViewer = _o[0],\n    setShowFileViewer = _o[1];\n  var isReactionEnabled = getIsReactionEnabled({\n    channel: currentChannel,\n    config: config\n  });\n  var isMentionEnabled = groupChannel.enableMention;\n  var replyType = getCaseResolvedReplyType(groupChannel.replyType).upperCase;\n  var isByMe = userId === parentMessage.sender.userId;\n  // Mobile\n  var mobileMenuRef = useRef(null);\n  var _p = useState(false),\n    showMobileMenu = _p[0],\n    setShowMobileMenu = _p[1];\n  var longPress = useLongPress({\n    onLongPress: function () {\n      if (isMobile) {\n        setShowMobileMenu(true);\n      }\n    }\n  }, {\n    shouldPreventDefault: false\n  });\n  // Edit message\n  var _q = useState(false),\n    showEditInput = _q[0],\n    setShowEditInput = _q[1];\n  var disabled = !isOnline || isMuted || isChannelFrozen && !((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.myRole) === Role.OPERATOR);\n  // Mention\n  var editMessageInputRef = useRef(null);\n  var _r = useState(''),\n    mentionNickname = _r[0],\n    setMentionNickname = _r[1];\n  var _s = useState([]),\n    mentionedUsers = _s[0],\n    setMentionedUsers = _s[1];\n  var _t = useState([]),\n    mentionedUserIds = _t[0],\n    setMentionedUserIds = _t[1];\n  var _u = useState(null),\n    messageInputEvent = _u[0],\n    setMessageInputEvent = _u[1];\n  var _v = useState(null),\n    selectedUser = _v[0],\n    setSelectedUser = _v[1];\n  var _w = useState([]),\n    mentionSuggestedUsers = _w[0],\n    setMentionSuggestedUsers = _w[1];\n  var displaySuggestedMentionList = isOnline && isMentionEnabled && mentionNickname.length > 0 && !isMuted && !(isChannelFrozen && !(currentChannel.myRole === Role.OPERATOR));\n  var mentionNodes = useDirtyGetMentions({\n    ref: editMessageInputRef\n  }, {\n    logger: logger\n  });\n  var ableMention = (mentionNodes === null || mentionNodes === void 0 ? void 0 : mentionNodes.length) < (userMention === null || userMention === void 0 ? void 0 : userMention.maxMentionCount);\n  useEffect(function () {\n    setMentionedUsers(mentionedUsers.filter(function (_a) {\n      var userId = _a.userId;\n      var i = mentionedUserIds.indexOf(userId);\n      if (i < 0) {\n        return false;\n      } else {\n        mentionedUserIds.splice(i, 1);\n        return true;\n      }\n    }));\n  }, [mentionedUserIds]);\n  var handleOnDownloadClick = function (e) {\n    return __awaiter(_this, void 0, void 0, function () {\n      var allowDownload, err_1;\n      var _a, _b;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (!onBeforeDownloadFileMessage) return [2 /*return*/];\n            _c.label = 1;\n          case 1:\n            _c.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, onBeforeDownloadFileMessage({\n              message: parentMessage\n            })];\n          case 2:\n            allowDownload = _c.sent();\n            if (!allowDownload) {\n              e.preventDefault();\n              (_a = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a === void 0 ? void 0 : _a.call(logger, 'ParentMessageInfo: Not allowed to download.');\n            }\n            return [3 /*break*/, 4];\n          case 3:\n            err_1 = _c.sent();\n            (_b = logger === null || logger === void 0 ? void 0 : logger.error) === null || _b === void 0 ? void 0 : _b.call(logger, 'ParentMessageInfo: Error occurred while determining download continuation:', err_1);\n            return [3 /*break*/, 4];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  // User Profile\n  var avatarRef = useRef(null);\n  var _x = useContext(UserProfileContext),\n    disableUserProfile = _x.disableUserProfile,\n    renderUserProfile = _x.renderUserProfile;\n  if (showEditInput && ((_d = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.isUserMessage) === null || _d === void 0 ? void 0 : _d.call(parentMessage))) {\n    return React__default.createElement(React__default.Fragment, null, displaySuggestedMentionList && React__default.createElement(SuggestedMentionList, {\n      className: \"parent-message-info--suggested-mention-list\",\n      targetNickname: mentionNickname,\n      inputEvent: messageInputEvent !== null && messageInputEvent !== void 0 ? messageInputEvent : undefined,\n      // renderUserMentionItem={renderUserMentionItem}\n      onUserItemClick: function (user) {\n        if (user) {\n          setMentionedUsers(__spreadArray(__spreadArray([], mentionedUsers, true), [user], false));\n        }\n        setMentionNickname('');\n        setSelectedUser(user);\n        setMessageInputEvent(null);\n      },\n      onFocusItemChange: function () {\n        setMessageInputEvent(null);\n      },\n      onFetchUsers: function (users) {\n        setMentionSuggestedUsers(users);\n      },\n      ableAddMention: ableMention,\n      maxMentionCount: userMention === null || userMention === void 0 ? void 0 : userMention.maxMentionCount,\n      maxSuggestionCount: userMention === null || userMention === void 0 ? void 0 : userMention.maxSuggestionCount\n    }), React__default.createElement(MessageInput, {\n      channel: currentChannel,\n      isEdit: true,\n      disabled: disabled,\n      ref: editMessageInputRef,\n      mentionSelectedUser: selectedUser,\n      isMentionEnabled: isMentionEnabled,\n      message: parentMessage,\n      onStartTyping: function () {\n        var _a;\n        (_a = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.startTyping) === null || _a === void 0 ? void 0 : _a.call(currentChannel);\n      },\n      onUpdateMessage: function (_a) {\n        var _b;\n        var messageId = _a.messageId,\n          message = _a.message,\n          mentionTemplate = _a.mentionTemplate;\n        updateMessage({\n          messageId: messageId,\n          message: message,\n          mentionedUsers: mentionedUsers,\n          mentionTemplate: mentionTemplate\n        });\n        setShowEditInput(false);\n        (_b = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.endTyping) === null || _b === void 0 ? void 0 : _b.call(currentChannel);\n      },\n      onCancelEdit: function () {\n        var _a;\n        setMentionNickname('');\n        setMentionedUsers([]);\n        setMentionedUserIds([]);\n        setMentionSuggestedUsers([]);\n        setShowEditInput(false);\n        (_a = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.endTyping) === null || _a === void 0 ? void 0 : _a.call(currentChannel);\n      },\n      onUserMentioned: function (user) {\n        if ((selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.userId) === (user === null || user === void 0 ? void 0 : user.userId)) {\n          setSelectedUser(null);\n          setMentionNickname('');\n        }\n      },\n      onMentionStringChange: function (mentionText) {\n        setMentionNickname(mentionText);\n      },\n      onMentionedUserIdsUpdated: function (userIds) {\n        setMentionedUserIds(userIds);\n      },\n      onKeyDown: function (e) {\n        if (displaySuggestedMentionList && (mentionSuggestedUsers === null || mentionSuggestedUsers === void 0 ? void 0 : mentionSuggestedUsers.length) > 0 && (e.key === MessageInputKeys.Enter && ableMention || e.key === MessageInputKeys.ArrowUp || e.key === MessageInputKeys.ArrowDown)) {\n          setMessageInputEvent(e);\n          return true;\n        }\n        return false;\n      }\n    }));\n  }\n  return React__default.createElement(\"div\", __assign({\n    className: \"sendbird-parent-message-info \".concat(className)\n  }, isMobile ? __assign({}, longPress) : {}, {\n    ref: mobileMenuRef\n  }), React__default.createElement(ContextMenu, {\n    menuTrigger: function (toggleDropdown) {\n      var _a, _b, _c;\n      return React__default.createElement(Avatar, {\n        className: \"sendbird-parent-message-info__sender\",\n        ref: avatarRef,\n        src: ((_b = (_a = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.members) === null || _a === void 0 ? void 0 : _a.find(function (m) {\n          var _a;\n          return (m === null || m === void 0 ? void 0 : m.userId) === ((_a = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender) === null || _a === void 0 ? void 0 : _a.userId);\n        })) === null || _b === void 0 ? void 0 : _b.profileUrl) || ((_c = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender) === null || _c === void 0 ? void 0 : _c.profileUrl),\n        alt: \"thread message sender\",\n        width: \"40px\",\n        height: \"40px\",\n        onClick: function () {\n          if (!disableUserProfile) {\n            toggleDropdown();\n          }\n        }\n      });\n    },\n    menuItems: function (closeDropdown) {\n      return renderUserProfile ? renderUserProfile({\n        user: parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender,\n        close: closeDropdown,\n        currentUserId: userId,\n        avatarRef: avatarRef\n      }) : React__default.createElement(MenuItems, {\n        parentRef: avatarRef,\n        parentContainRef: avatarRef,\n        closeDropdown: closeDropdown,\n        style: {\n          paddingTop: '0px',\n          paddingBottom: '0px'\n        }\n      }, React__default.createElement(UserProfile, {\n        user: parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender,\n        currentUserId: userId,\n        onSuccess: closeDropdown\n      }));\n    }\n  }), React__default.createElement(\"div\", {\n    className: \"sendbird-parent-message-info__content\"\n  }, React__default.createElement(\"div\", {\n    className: \"sendbird-parent-message-info__content__info\"\n  }, React__default.createElement(Label, {\n    className: isReactionEnabled ? 'sendbird-parent-message-info__content__info__sender-name--use-reaction' : 'sendbird-parent-message-info__content__info__sender-name',\n    type: LabelTypography.CAPTION_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, ((_f = (_e = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.members) === null || _e === void 0 ? void 0 : _e.find(function (member) {\n    var _a;\n    return (member === null || member === void 0 ? void 0 : member.userId) === ((_a = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender) === null || _a === void 0 ? void 0 : _a.userId);\n  })) === null || _f === void 0 ? void 0 : _f.nickname) || (getSenderName === null || getSenderName === void 0 ? void 0 : getSenderName(parentMessage))), React__default.createElement(Label, {\n    className: \"sendbird-parent-message-info__content__info__sent-at\",\n    type: LabelTypography.CAPTION_3,\n    color: LabelColors.ONBACKGROUND_2\n  }, format((parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.createdAt) || 0, 'p', {\n    locale: dateLocale\n  }))), React__default.createElement(ParentMessageInfoItem, {\n    message: parentMessage,\n    showFileViewer: setShowFileViewer,\n    onBeforeDownloadFileMessage: onBeforeDownloadFileMessage\n  })), !isMobile && React__default.createElement(\"div\", {\n    className: 'sendbird-parent-message-info__menu-container'\n  }, renderMessageMenu({\n    className: classnames('sendbird-parent-message-info__context-menu', isReactionEnabled && 'use-reaction', isMenuMounted && 'sendbird-mouse-hover'),\n    channel: currentChannel,\n    message: parentMessage,\n    isByMe: userId === ((_g = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender) === null || _g === void 0 ? void 0 : _g.userId),\n    disableDeleteMessage: allThreadMessages.length > 0,\n    replyType: replyType,\n    showEdit: setShowEditInput,\n    showRemove: setShowRemove,\n    onMoveToParentMessage: function () {\n      onMoveToParentMessage === null || onMoveToParentMessage === void 0 ? void 0 : onMoveToParentMessage({\n        message: parentMessage,\n        channel: currentChannel\n      });\n    },\n    deleteMessage: deleteMessage\n  }), isReactionEnabled && renderEmojiMenu({\n    className: classnames('sendbird-parent-message-info__reaction-menu', isMenuMounted && 'sendbird-mouse-hover'),\n    message: parentMessage,\n    userId: userId,\n    emojiContainer: emojiContainer,\n    toggleReaction: toggleReaction\n  })), showRemove && React__default.createElement(RemoveMessage, {\n    onCancel: function () {\n      return setShowRemove(false);\n    },\n    onSubmit: function () {\n      onHeaderActionClick === null || onHeaderActionClick === void 0 ? void 0 : onHeaderActionClick();\n    },\n    message: parentMessage\n  }), showFileViewer && React__default.createElement(FileViewer, {\n    message: parentMessage,\n    onClose: function () {\n      return setShowFileViewer(false);\n    },\n    onDelete: function () {\n      deleteMessage(parentMessage).then(function () {\n        setShowFileViewer(false);\n      });\n    },\n    onDownloadClick: handleOnDownloadClick\n  }), showMobileMenu && React__default.createElement(MobileMenu, {\n    parentRef: mobileMenuRef,\n    channel: currentChannel,\n    message: parentMessage,\n    userId: userId,\n    replyType: replyType,\n    hideMenu: function () {\n      setShowMobileMenu(false);\n    },\n    deleteMessage: deleteMessage,\n    deleteMenuState: (allThreadMessages === null || allThreadMessages === void 0 ? void 0 : allThreadMessages.length) === 0 ? 'ACTIVE' : 'HIDE',\n    isReactionEnabled: isReactionEnabled,\n    isByMe: isByMe,\n    emojiContainer: emojiContainer,\n    showEdit: setShowEditInput,\n    showRemove: setShowRemove,\n    toggleReaction: toggleReaction,\n    isOpenedFromThread: true,\n    onDownloadClick: handleOnDownloadClick\n  }));\n}\nexport { ParentMessageInfo as default };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import { c as __spreadArray, _ as __assign, a as __awaiter, b as __generator } from '../../chunks/bundle-BQi9-O76.js';\nimport React__default, { useState, useRef, useEffect, useContext } from 'react';\nimport { f as format } from '../../chunks/bundle-CAdqcqOm.js';\nimport { R as RemoveMessage } from '../../chunks/bundle-D6ZpcPbH.js';\nimport ParentMessageInfoItem from './ParentMessageInfoItem.js';\nimport { e as getSenderName } from '../../chunks/bundle-DxTN4_0p.js';\nimport { g as getIsReactionEnabled } from '../../chunks/bundle-BNDaXsLn.js';\nimport { u as useLocalization } from '../../chunks/bundle-cQZ3UZoG.js';\nimport { useSendbirdStateContext } from '../../useSendbirdStateContext.js';\nimport { useThreadContext } from '../context.js';\nimport { a as UserProfileContext } from '../../chunks/bundle-BrTJ5Zbd.js';\nimport { S as SuggestedMentionList } from '../../chunks/bundle-BsAIw_77.js';\nimport { A as Avatar } from '../../chunks/bundle-CFosTNce.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../../chunks/bundle-DhKQeIfP.js';\nimport FileViewer from '../../ui/FileViewer.js';\nimport { MessageEmojiMenu } from '../../ui/MessageItemReactionMenu.js';\nimport { d as MENU_ROOT_ID, E as EMOJI_MENU_ROOT_ID, g as getObservingId, e as MENU_OBSERVING_CLASS_NAME, C as ContextMenu, b as MenuItems } from '../../chunks/bundle-CwKZj-B6.js';\nimport UserProfile from '../../ui/UserProfile.js';\nimport MessageInput from '../../ui/MessageInput.js';\nimport { M as MessageInputKeys } from '../../chunks/bundle-0qSTzMXb.js';\nimport { R as Role } from '../../chunks/bundle-C3Ty1Yuy.js';\nimport { u as useMediaQueryContext } from '../../chunks/bundle-f-SpnOx2.js';\nimport { u as useLongPress } from '../../chunks/bundle-AfQS5DGf.js';\nimport { MobileMenu } from '../../ui/MobileMenu.js';\nimport { useDirtyGetMentions } from '../../Message/hooks/useDirtyGetMentions.js';\nimport { g as getCaseResolvedReplyType } from '../../chunks/bundle-fHeMHhND.js';\nimport { c as classnames } from '../../chunks/bundle-BgwzpLeQ.js';\nimport { M as MessageMenu } from '../../chunks/bundle-DkBecO3w.js';\nimport { u as useElementObserver } from '../../chunks/bundle-Cf0UgZwi.js';\nimport '../../chunks/bundle-CA85nVxp.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\nimport '../../chunks/bundle-CXdo2kR_.js';\nimport 'react-dom';\nimport '../../ui/IconButton.js';\nimport '../../ui/Button.js';\nimport '../../ui/Icon.js';\nimport '@sendbird/uikit-tools';\nimport '../../withSendbird.js';\nimport 'css-vars-ponyfill';\nimport '@sendbird/chat';\nimport '../../chunks/bundle-etuaqevl.js';\nimport '@sendbird/chat/openChannel';\nimport '@sendbird/chat/groupChannel';\nimport '../../chunks/bundle-DDeWOERD.js';\nimport '../../chunks/bundle-DCMGp6rH.js';\nimport '../../chunks/bundle-CNWAfTVw.js';\nimport '../../chunks/bundle-Zvm5CMGT.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../ui/TextButton.js';\nimport '../../chunks/bundle-rA4afvKU.js';\nimport '../../ui/EmojiReactions.js';\nimport '../../ui/ReactionBadge.js';\nimport '../../ui/ReactionButton.js';\nimport '../../ui/BottomSheet.js';\nimport '../../ui/UserListItem.js';\nimport '../../ui/MutedAvatarOverlay.js';\nimport '../../ui/Checkbox.js';\nimport '../../chunks/bundle-DXRRGizV.js';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../ui/SortByRow.js';\nimport '../../sendbirdSelectors.js';\nimport '../../chunks/bundle-b6TpX_JP.js';\nimport '../../ui/Tooltip.js';\nimport '../../ui/TooltipWrapper.js';\nimport '../../Message/context.js';\nimport '../../ui/VoiceMessageItemBody.js';\nimport '../../ui/ProgressBar.js';\nimport '../../VoicePlayer/useVoicePlayer.js';\nimport '../../ui/PlaybackTime.js';\nimport '../../ui/Loader.js';\nimport '../../chunks/bundle-DofK8ySe.js';\nimport '../../chunks/bundle-GUbI4JcD.js';\nimport '../../ui/MentionLabel.js';\nimport '../../ui/LinkLabel.js';\nimport '../../chunks/bundle-ZVq6xGXk.js';\nimport '@sendbird/chat/message';\nimport '../../chunks/bundle-T6fVCCb7.js';\nimport '../../chunks/bundle-CMLImr6T.js';\nimport '../context/types.js';\nimport '../../chunks/bundle-CpjASiz4.js';\nimport '../../chunks/bundle-CZUYMubi.js';\nimport '../../chunks/bundle-Due9yzp6.js';\nimport '../../chunks/bundle-CveCFQYP.js';\nimport '../../chunks/bundle-Gdl-rzQC.js';\nimport '../../chunks/bundle-TZQ6dJCG.js';\nimport 'dompurify';\nimport '../../chunks/bundle-0nQK2G2O.js';\nimport '../../chunks/bundle-B6edg1g0.js';\nimport '../../chunks/bundle-DhGZA5UP.js';\n\nfunction ParentMessageInfo(_a) {\n    var _this = this;\n    var _b, _c, _d, _e, _f, _g;\n    var className = _a.className, _h = _a.renderEmojiMenu, renderEmojiMenu = _h === void 0 ? function (props) { return React__default.createElement(MessageEmojiMenu, __assign({}, props)); } : _h, _j = _a.renderMessageMenu, renderMessageMenu = _j === void 0 ? function (props) { return React__default.createElement(MessageMenu, __assign({}, props)); } : _j;\n    var _k = useSendbirdStateContext(), stores = _k.stores, config = _k.config;\n    var isOnline = config.isOnline, userMention = config.userMention, logger = config.logger, groupChannel = config.groupChannel;\n    var userId = (_c = (_b = stores.userStore.user) === null || _b === void 0 ? void 0 : _b.userId) !== null && _c !== void 0 ? _c : '';\n    var dateLocale = useLocalization().dateLocale;\n    var _l = useThreadContext(), currentChannel = _l.currentChannel, parentMessage = _l.parentMessage, allThreadMessages = _l.allThreadMessages, emojiContainer = _l.emojiContainer, toggleReaction = _l.toggleReaction, updateMessage = _l.updateMessage, deleteMessage = _l.deleteMessage, onMoveToParentMessage = _l.onMoveToParentMessage, onHeaderActionClick = _l.onHeaderActionClick, isMuted = _l.isMuted, isChannelFrozen = _l.isChannelFrozen, onBeforeDownloadFileMessage = _l.onBeforeDownloadFileMessage;\n    var isMobile = useMediaQueryContext().isMobile;\n    var isMenuMounted = useElementObserver(\"#\".concat(getObservingId(parentMessage.messageId), \".\").concat(MENU_OBSERVING_CLASS_NAME), [\n        document.getElementById(MENU_ROOT_ID),\n        document.getElementById(EMOJI_MENU_ROOT_ID),\n    ]);\n    var _m = useState(false), showRemove = _m[0], setShowRemove = _m[1];\n    var _o = useState(false), showFileViewer = _o[0], setShowFileViewer = _o[1];\n    var isReactionEnabled = getIsReactionEnabled({\n        channel: currentChannel,\n        config: config,\n    });\n    var isMentionEnabled = groupChannel.enableMention;\n    var replyType = getCaseResolvedReplyType(groupChannel.replyType).upperCase;\n    var isByMe = userId === parentMessage.sender.userId;\n    // Mobile\n    var mobileMenuRef = useRef(null);\n    var _p = useState(false), showMobileMenu = _p[0], setShowMobileMenu = _p[1];\n    var longPress = useLongPress({\n        onLongPress: function () {\n            if (isMobile) {\n                setShowMobileMenu(true);\n            }\n        },\n    }, {\n        shouldPreventDefault: false,\n    });\n    // Edit message\n    var _q = useState(false), showEditInput = _q[0], setShowEditInput = _q[1];\n    var disabled = !isOnline || isMuted || isChannelFrozen && !((currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.myRole) === Role.OPERATOR);\n    // Mention\n    var editMessageInputRef = useRef(null);\n    var _r = useState(''), mentionNickname = _r[0], setMentionNickname = _r[1];\n    var _s = useState([]), mentionedUsers = _s[0], setMentionedUsers = _s[1];\n    var _t = useState([]), mentionedUserIds = _t[0], setMentionedUserIds = _t[1];\n    var _u = useState(null), messageInputEvent = _u[0], setMessageInputEvent = _u[1];\n    var _v = useState(null), selectedUser = _v[0], setSelectedUser = _v[1];\n    var _w = useState([]), mentionSuggestedUsers = _w[0], setMentionSuggestedUsers = _w[1];\n    var displaySuggestedMentionList = isOnline\n        && isMentionEnabled\n        && mentionNickname.length > 0\n        && !isMuted\n        && !(isChannelFrozen && !(currentChannel.myRole === Role.OPERATOR));\n    var mentionNodes = useDirtyGetMentions({ ref: editMessageInputRef }, { logger: logger });\n    var ableMention = (mentionNodes === null || mentionNodes === void 0 ? void 0 : mentionNodes.length) < (userMention === null || userMention === void 0 ? void 0 : userMention.maxMentionCount);\n    useEffect(function () {\n        setMentionedUsers(mentionedUsers.filter(function (_a) {\n            var userId = _a.userId;\n            var i = mentionedUserIds.indexOf(userId);\n            if (i < 0) {\n                return false;\n            }\n            else {\n                mentionedUserIds.splice(i, 1);\n                return true;\n            }\n        }));\n    }, [mentionedUserIds]);\n    var handleOnDownloadClick = function (e) { return __awaiter(_this, void 0, void 0, function () {\n        var allowDownload, err_1;\n        var _a, _b;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    if (!onBeforeDownloadFileMessage)\n                        return [2 /*return*/];\n                    _c.label = 1;\n                case 1:\n                    _c.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, onBeforeDownloadFileMessage({ message: parentMessage })];\n                case 2:\n                    allowDownload = _c.sent();\n                    if (!allowDownload) {\n                        e.preventDefault();\n                        (_a = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a === void 0 ? void 0 : _a.call(logger, 'ParentMessageInfo: Not allowed to download.');\n                    }\n                    return [3 /*break*/, 4];\n                case 3:\n                    err_1 = _c.sent();\n                    (_b = logger === null || logger === void 0 ? void 0 : logger.error) === null || _b === void 0 ? void 0 : _b.call(logger, 'ParentMessageInfo: Error occurred while determining download continuation:', err_1);\n                    return [3 /*break*/, 4];\n                case 4: return [2 /*return*/];\n            }\n        });\n    }); };\n    // User Profile\n    var avatarRef = useRef(null);\n    var _x = useContext(UserProfileContext), disableUserProfile = _x.disableUserProfile, renderUserProfile = _x.renderUserProfile;\n    if (showEditInput && ((_d = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.isUserMessage) === null || _d === void 0 ? void 0 : _d.call(parentMessage))) {\n        return (React__default.createElement(React__default.Fragment, null,\n            displaySuggestedMentionList && (React__default.createElement(SuggestedMentionList, { className: \"parent-message-info--suggested-mention-list\", targetNickname: mentionNickname, inputEvent: messageInputEvent !== null && messageInputEvent !== void 0 ? messageInputEvent : undefined, \n                // renderUserMentionItem={renderUserMentionItem}\n                onUserItemClick: function (user) {\n                    if (user) {\n                        setMentionedUsers(__spreadArray(__spreadArray([], mentionedUsers, true), [user], false));\n                    }\n                    setMentionNickname('');\n                    setSelectedUser(user);\n                    setMessageInputEvent(null);\n                }, onFocusItemChange: function () {\n                    setMessageInputEvent(null);\n                }, onFetchUsers: function (users) {\n                    setMentionSuggestedUsers(users);\n                }, ableAddMention: ableMention, maxMentionCount: userMention === null || userMention === void 0 ? void 0 : userMention.maxMentionCount, maxSuggestionCount: userMention === null || userMention === void 0 ? void 0 : userMention.maxSuggestionCount })),\n            React__default.createElement(MessageInput, { channel: currentChannel, isEdit: true, disabled: disabled, ref: editMessageInputRef, mentionSelectedUser: selectedUser, isMentionEnabled: isMentionEnabled, message: parentMessage, onStartTyping: function () {\n                    var _a;\n                    (_a = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.startTyping) === null || _a === void 0 ? void 0 : _a.call(currentChannel);\n                }, onUpdateMessage: function (_a) {\n                    var _b;\n                    var messageId = _a.messageId, message = _a.message, mentionTemplate = _a.mentionTemplate;\n                    updateMessage({\n                        messageId: messageId,\n                        message: message,\n                        mentionedUsers: mentionedUsers,\n                        mentionTemplate: mentionTemplate,\n                    });\n                    setShowEditInput(false);\n                    (_b = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.endTyping) === null || _b === void 0 ? void 0 : _b.call(currentChannel);\n                }, onCancelEdit: function () {\n                    var _a;\n                    setMentionNickname('');\n                    setMentionedUsers([]);\n                    setMentionedUserIds([]);\n                    setMentionSuggestedUsers([]);\n                    setShowEditInput(false);\n                    (_a = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.endTyping) === null || _a === void 0 ? void 0 : _a.call(currentChannel);\n                }, onUserMentioned: function (user) {\n                    if ((selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.userId) === (user === null || user === void 0 ? void 0 : user.userId)) {\n                        setSelectedUser(null);\n                        setMentionNickname('');\n                    }\n                }, onMentionStringChange: function (mentionText) {\n                    setMentionNickname(mentionText);\n                }, onMentionedUserIdsUpdated: function (userIds) {\n                    setMentionedUserIds(userIds);\n                }, onKeyDown: function (e) {\n                    if (displaySuggestedMentionList && (mentionSuggestedUsers === null || mentionSuggestedUsers === void 0 ? void 0 : mentionSuggestedUsers.length) > 0\n                        && ((e.key === MessageInputKeys.Enter && ableMention) || e.key === MessageInputKeys.ArrowUp || e.key === MessageInputKeys.ArrowDown)) {\n                        setMessageInputEvent(e);\n                        return true;\n                    }\n                    return false;\n                } })));\n    }\n    return (React__default.createElement(\"div\", __assign({ className: \"sendbird-parent-message-info \".concat(className) }, (isMobile) ? __assign({}, longPress) : {}, { ref: mobileMenuRef }),\n        React__default.createElement(ContextMenu, { menuTrigger: function (toggleDropdown) {\n                var _a, _b, _c;\n                return (React__default.createElement(Avatar, { className: \"sendbird-parent-message-info__sender\", ref: avatarRef, src: ((_b = (_a = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.members) === null || _a === void 0 ? void 0 : _a.find(function (m) { var _a; return (m === null || m === void 0 ? void 0 : m.userId) === ((_a = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender) === null || _a === void 0 ? void 0 : _a.userId); })) === null || _b === void 0 ? void 0 : _b.profileUrl)\n                        || ((_c = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender) === null || _c === void 0 ? void 0 : _c.profileUrl), alt: \"thread message sender\", width: \"40px\", height: \"40px\", onClick: function () {\n                        if (!disableUserProfile) {\n                            toggleDropdown();\n                        }\n                    } }));\n            }, menuItems: function (closeDropdown) { return (renderUserProfile\n                ? renderUserProfile({\n                    user: parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender,\n                    close: closeDropdown,\n                    currentUserId: userId,\n                    avatarRef: avatarRef,\n                })\n                : (React__default.createElement(MenuItems, { parentRef: avatarRef, parentContainRef: avatarRef, closeDropdown: closeDropdown, style: { paddingTop: '0px', paddingBottom: '0px' } },\n                    React__default.createElement(UserProfile, { user: parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender, currentUserId: userId, onSuccess: closeDropdown })))); } }),\n        React__default.createElement(\"div\", { className: \"sendbird-parent-message-info__content\" },\n            React__default.createElement(\"div\", { className: \"sendbird-parent-message-info__content__info\" },\n                React__default.createElement(Label, { className: isReactionEnabled\n                        ? 'sendbird-parent-message-info__content__info__sender-name--use-reaction'\n                        : 'sendbird-parent-message-info__content__info__sender-name', type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 }, ((_f = (_e = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.members) === null || _e === void 0 ? void 0 : _e.find(function (member) { var _a; return (member === null || member === void 0 ? void 0 : member.userId) === ((_a = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender) === null || _a === void 0 ? void 0 : _a.userId); })) === null || _f === void 0 ? void 0 : _f.nickname) || (getSenderName === null || getSenderName === void 0 ? void 0 : getSenderName(parentMessage))),\n                React__default.createElement(Label, { className: \"sendbird-parent-message-info__content__info__sent-at\", type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, format((parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.createdAt) || 0, 'p', { locale: dateLocale }))),\n            React__default.createElement(ParentMessageInfoItem, { message: parentMessage, showFileViewer: setShowFileViewer, onBeforeDownloadFileMessage: onBeforeDownloadFileMessage })),\n        !isMobile && (React__default.createElement(\"div\", { className: 'sendbird-parent-message-info__menu-container' },\n            renderMessageMenu({\n                className: classnames('sendbird-parent-message-info__context-menu', isReactionEnabled && 'use-reaction', isMenuMounted && 'sendbird-mouse-hover'),\n                channel: currentChannel,\n                message: parentMessage,\n                isByMe: userId === ((_g = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender) === null || _g === void 0 ? void 0 : _g.userId),\n                disableDeleteMessage: allThreadMessages.length > 0,\n                replyType: replyType,\n                showEdit: setShowEditInput,\n                showRemove: setShowRemove,\n                onMoveToParentMessage: function () {\n                    onMoveToParentMessage === null || onMoveToParentMessage === void 0 ? void 0 : onMoveToParentMessage({ message: parentMessage, channel: currentChannel });\n                },\n                deleteMessage: deleteMessage,\n            }),\n            isReactionEnabled && (renderEmojiMenu({\n                className: classnames('sendbird-parent-message-info__reaction-menu', isMenuMounted && 'sendbird-mouse-hover'),\n                message: parentMessage,\n                userId: userId,\n                emojiContainer: emojiContainer,\n                toggleReaction: toggleReaction,\n            })))),\n        showRemove && (React__default.createElement(RemoveMessage, { onCancel: function () { return setShowRemove(false); }, onSubmit: function () {\n                onHeaderActionClick === null || onHeaderActionClick === void 0 ? void 0 : onHeaderActionClick();\n            }, message: parentMessage })),\n        showFileViewer && (React__default.createElement(FileViewer, { message: parentMessage, onClose: function () { return setShowFileViewer(false); }, onDelete: function () {\n                deleteMessage(parentMessage)\n                    .then(function () {\n                    setShowFileViewer(false);\n                });\n            }, onDownloadClick: handleOnDownloadClick })),\n        showMobileMenu && (React__default.createElement(MobileMenu, { parentRef: mobileMenuRef, channel: currentChannel, message: parentMessage, userId: userId, replyType: replyType, hideMenu: function () {\n                setShowMobileMenu(false);\n            }, deleteMessage: deleteMessage, deleteMenuState: (allThreadMessages === null || allThreadMessages === void 0 ? void 0 : allThreadMessages.length) === 0\n                ? 'ACTIVE'\n                : 'HIDE', isReactionEnabled: isReactionEnabled, isByMe: isByMe, emojiContainer: emojiContainer, showEdit: setShowEditInput, showRemove: setShowRemove, toggleReaction: toggleReaction, isOpenedFromThread: true, onDownloadClick: handleOnDownloadClick }))));\n}\n\nexport { ParentMessageInfo as default };\n//# sourceMappingURL=ParentMessageInfo.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}