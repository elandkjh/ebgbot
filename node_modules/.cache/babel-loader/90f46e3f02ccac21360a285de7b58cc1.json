{"ast":null,"code":"import { _ as __assign } from '../../chunks/bundle-BQi9-O76.js';\nimport React__default, { useState, useContext, useEffect, useMemo } from 'react';\nimport { O as OperatorList, M as MutedMemberList, B as BannedUserList } from '../../chunks/bundle-DHpCLtwn.js';\nimport { M as MemberList } from '../../chunks/bundle-DQk06wFZ.js';\nimport { L as LocalizationContext } from '../../chunks/bundle-cQZ3UZoG.js';\nimport { IconColors, IconTypes } from '../../ui/Icon.js';\nimport Badge from '../../ui/Badge.js';\nimport { Toggle } from '../../ui/Toggle.js';\nimport { a as LabelTypography, b as LabelColors } from '../../chunks/bundle-DhKQeIfP.js';\nimport { useChannelSettingsContext } from '../context.js';\nimport { MenuItemAction } from '../components/ChannelSettingsMenuItem.js';\nimport '../../ui/Button.js';\nimport '../../chunks/bundle-BjjAXlnY.js';\nimport '@sendbird/chat';\nimport '@sendbird/chat/openChannel';\nimport '../../useSendbirdStateContext.js';\nimport '../../withSendbird.js';\nimport '../../chunks/bundle-CwKZj-B6.js';\nimport 'react-dom';\nimport '../../chunks/bundle-BgwzpLeQ.js';\nimport '../../ui/SortByRow.js';\nimport '../../chunks/bundle-etuaqevl.js';\nimport '../../ui/IconButton.js';\nimport '../../chunks/bundle-DxTN4_0p.js';\nimport '@sendbird/chat/groupChannel';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../chunks/bundle-CNWAfTVw.js';\nimport '../../chunks/bundle-CA85nVxp.js';\nimport '../../ui/UserListItem.js';\nimport '@sendbird/uikit-tools';\nimport '../../chunks/bundle-CXdo2kR_.js';\nimport '../../chunks/bundle-f-SpnOx2.js';\nimport 'css-vars-ponyfill';\nimport '../../chunks/bundle-DDeWOERD.js';\nimport '../../chunks/bundle-DCMGp6rH.js';\nimport '../../chunks/bundle-BrTJ5Zbd.js';\nimport '../../chunks/bundle-CFosTNce.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../chunks/bundle-DXRRGizV.js';\nimport '../../ui/MutedAvatarOverlay.js';\nimport '../../ui/Checkbox.js';\nimport '../../ui/UserProfile.js';\nimport '../../sendbirdSelectors.js';\nimport '../../chunks/bundle-b6TpX_JP.js';\nimport '../../chunks/bundle-DvsVgg5f.js';\nimport '../../chunks/bundle-CMLImr6T.js';\nimport '@sendbird/chat/message';\nimport '../../chunks/bundle-DSn10d8F.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\nvar kFormatter = function (num) {\n  return Math.abs(num) > 999 ? \"\".concat((Math.abs(num) / 1000).toFixed(1), \"K\") : num;\n};\nvar commonIconProps = {\n  fillColor: IconColors.PRIMARY,\n  width: 24,\n  height: 24,\n  className: 'sendbird-channel-settings__accordion-icon'\n};\nvar commonLabelProps = {\n  type: LabelTypography.SUBTITLE_1,\n  color: LabelColors.ONBACKGROUND_1\n};\nvar useMenuItems = function () {\n  var _a = useState(false),\n    frozen = _a[0],\n    setFrozen = _a[1];\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var _b = useChannelSettingsContext(),\n    channel = _b.channel,\n    renderUserListItem = _b.renderUserListItem;\n  // work around for\n  // https://sendbird.slack.com/archives/G01290GCDCN/p1595922832000900\n  // SDK bug - after frozen/unfrozen myRole becomes \"none\"\n  useEffect(function () {\n    var _a;\n    setFrozen((_a = channel === null || channel === void 0 ? void 0 : channel.isFrozen) !== null && _a !== void 0 ? _a : false);\n  }, [channel === null || channel === void 0 ? void 0 : channel.isFrozen]);\n  return useMemo(function () {\n    return {\n      operator: {\n        operators: {\n          icon: __assign(__assign({}, commonIconProps), {\n            type: IconTypes.OPERATOR\n          }),\n          label: __assign(__assign({}, commonLabelProps), {\n            children: stringSet.CHANNEL_SETTING__OPERATORS__TITLE\n          }),\n          accordionComponent: function () {\n            return React__default.createElement(OperatorList, {\n              renderUserListItem: renderUserListItem\n            });\n          }\n        },\n        allUsers: {\n          icon: __assign(__assign({}, commonIconProps), {\n            type: IconTypes.MEMBERS\n          }),\n          label: __assign(__assign({}, commonLabelProps), {\n            children: stringSet.CHANNEL_SETTING__MEMBERS__TITLE\n          }),\n          rightComponent: function (props) {\n            return React__default.createElement(\"div\", {\n              className: \"sendbird-channel-settings__members\"\n            }, React__default.createElement(Badge, {\n              count: (channel === null || channel === void 0 ? void 0 : channel.memberCount) ? kFormatter(channel.memberCount) : ''\n            }), React__default.createElement(MenuItemAction, __assign({}, props)));\n          },\n          accordionComponent: function () {\n            return React__default.createElement(MemberList, {\n              renderUserListItem: renderUserListItem\n            });\n          }\n        },\n        mutedUsers: {\n          icon: __assign(__assign({}, commonIconProps), {\n            type: IconTypes.MUTE\n          }),\n          label: __assign(__assign({}, commonLabelProps), {\n            children: stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE\n          }),\n          accordionComponent: function () {\n            return React__default.createElement(MutedMemberList, {\n              renderUserListItem: renderUserListItem\n            });\n          }\n        },\n        bannedUsers: {\n          icon: __assign(__assign({}, commonIconProps), {\n            type: IconTypes.BAN\n          }),\n          label: __assign(__assign({}, commonLabelProps), {\n            children: stringSet.CHANNEL_SETTING__BANNED_MEMBERS__TITLE\n          }),\n          accordionComponent: function () {\n            return React__default.createElement(BannedUserList, {\n              renderUserListItem: renderUserListItem\n            });\n          }\n        },\n        freezeChannel: {\n          hideMenu: channel === null || channel === void 0 ? void 0 : channel.isBroadcast,\n          icon: __assign(__assign({}, commonIconProps), {\n            type: IconTypes.FREEZE\n          }),\n          label: __assign(__assign({}, commonLabelProps), {\n            children: stringSet.CHANNEL_SETTING__FREEZE_CHANNEL\n          }),\n          rightComponent: function () {\n            return React__default.createElement(Toggle, {\n              className: \"sendbird-channel-settings__frozen-icon\",\n              checked: frozen,\n              onChange: function () {\n                if (frozen) {\n                  channel === null || channel === void 0 ? void 0 : channel.unfreeze().then(function () {\n                    setFrozen(function (prev) {\n                      return !prev;\n                    });\n                  });\n                } else {\n                  channel === null || channel === void 0 ? void 0 : channel.freeze().then(function () {\n                    setFrozen(function (prev) {\n                      return !prev;\n                    });\n                  });\n                }\n              }\n            });\n          }\n        }\n      },\n      nonOperator: {\n        allUsers: {\n          icon: __assign(__assign({}, commonIconProps), {\n            type: IconTypes.MEMBERS\n          }),\n          label: __assign(__assign({}, commonLabelProps), {\n            children: stringSet.CHANNEL_SETTING__MEMBERS__TITLE\n          }),\n          rightComponent: function (props) {\n            return React__default.createElement(\"div\", {\n              className: \"sendbird-channel-settings__members\"\n            }, React__default.createElement(Badge, {\n              count: (channel === null || channel === void 0 ? void 0 : channel.memberCount) ? kFormatter(channel.memberCount) : ''\n            }), React__default.createElement(MenuItemAction, __assign({}, props)));\n          },\n          accordionComponent: function () {\n            return React__default.createElement(MemberList, {\n              renderUserListItem: renderUserListItem\n            });\n          }\n        }\n      }\n    };\n  }, [channel === null || channel === void 0 ? void 0 : channel.url, frozen]);\n};\nexport { useMenuItems as default, useMenuItems };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import { _ as __assign } from '../../chunks/bundle-BQi9-O76.js';\nimport React__default, { useState, useContext, useEffect, useMemo } from 'react';\nimport { O as OperatorList, M as MutedMemberList, B as BannedUserList } from '../../chunks/bundle-DHpCLtwn.js';\nimport { M as MemberList } from '../../chunks/bundle-DQk06wFZ.js';\nimport { L as LocalizationContext } from '../../chunks/bundle-cQZ3UZoG.js';\nimport { IconColors, IconTypes } from '../../ui/Icon.js';\nimport Badge from '../../ui/Badge.js';\nimport { Toggle } from '../../ui/Toggle.js';\nimport { a as LabelTypography, b as LabelColors } from '../../chunks/bundle-DhKQeIfP.js';\nimport { useChannelSettingsContext } from '../context.js';\nimport { MenuItemAction } from '../components/ChannelSettingsMenuItem.js';\nimport '../../ui/Button.js';\nimport '../../chunks/bundle-BjjAXlnY.js';\nimport '@sendbird/chat';\nimport '@sendbird/chat/openChannel';\nimport '../../useSendbirdStateContext.js';\nimport '../../withSendbird.js';\nimport '../../chunks/bundle-CwKZj-B6.js';\nimport 'react-dom';\nimport '../../chunks/bundle-BgwzpLeQ.js';\nimport '../../ui/SortByRow.js';\nimport '../../chunks/bundle-etuaqevl.js';\nimport '../../ui/IconButton.js';\nimport '../../chunks/bundle-DxTN4_0p.js';\nimport '@sendbird/chat/groupChannel';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../chunks/bundle-CNWAfTVw.js';\nimport '../../chunks/bundle-CA85nVxp.js';\nimport '../../ui/UserListItem.js';\nimport '@sendbird/uikit-tools';\nimport '../../chunks/bundle-CXdo2kR_.js';\nimport '../../chunks/bundle-f-SpnOx2.js';\nimport 'css-vars-ponyfill';\nimport '../../chunks/bundle-DDeWOERD.js';\nimport '../../chunks/bundle-DCMGp6rH.js';\nimport '../../chunks/bundle-BrTJ5Zbd.js';\nimport '../../chunks/bundle-CFosTNce.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../chunks/bundle-DXRRGizV.js';\nimport '../../ui/MutedAvatarOverlay.js';\nimport '../../ui/Checkbox.js';\nimport '../../ui/UserProfile.js';\nimport '../../sendbirdSelectors.js';\nimport '../../chunks/bundle-b6TpX_JP.js';\nimport '../../chunks/bundle-DvsVgg5f.js';\nimport '../../chunks/bundle-CMLImr6T.js';\nimport '@sendbird/chat/message';\nimport '../../chunks/bundle-DSn10d8F.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\n\nvar kFormatter = function (num) {\n    return Math.abs(num) > 999\n        ? \"\".concat((Math.abs(num) / 1000).toFixed(1), \"K\")\n        : num;\n};\nvar commonIconProps = {\n    fillColor: IconColors.PRIMARY,\n    width: 24,\n    height: 24,\n    className: 'sendbird-channel-settings__accordion-icon',\n};\nvar commonLabelProps = {\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1,\n};\nvar useMenuItems = function () {\n    var _a = useState(false), frozen = _a[0], setFrozen = _a[1];\n    var stringSet = useContext(LocalizationContext).stringSet;\n    var _b = useChannelSettingsContext(), channel = _b.channel, renderUserListItem = _b.renderUserListItem;\n    // work around for\n    // https://sendbird.slack.com/archives/G01290GCDCN/p1595922832000900\n    // SDK bug - after frozen/unfrozen myRole becomes \"none\"\n    useEffect(function () {\n        var _a;\n        setFrozen((_a = channel === null || channel === void 0 ? void 0 : channel.isFrozen) !== null && _a !== void 0 ? _a : false);\n    }, [channel === null || channel === void 0 ? void 0 : channel.isFrozen]);\n    return useMemo(function () { return ({\n        operator: {\n            operators: {\n                icon: __assign(__assign({}, commonIconProps), { type: IconTypes.OPERATOR }),\n                label: __assign(__assign({}, commonLabelProps), { children: stringSet.CHANNEL_SETTING__OPERATORS__TITLE }),\n                accordionComponent: function () { return React__default.createElement(OperatorList, { renderUserListItem: renderUserListItem }); },\n            },\n            allUsers: {\n                icon: __assign(__assign({}, commonIconProps), { type: IconTypes.MEMBERS }),\n                label: __assign(__assign({}, commonLabelProps), { children: stringSet.CHANNEL_SETTING__MEMBERS__TITLE }),\n                rightComponent: function (props) { return (React__default.createElement(\"div\", { className: \"sendbird-channel-settings__members\" },\n                    React__default.createElement(Badge, { count: (channel === null || channel === void 0 ? void 0 : channel.memberCount) ? kFormatter(channel.memberCount) : '' }),\n                    React__default.createElement(MenuItemAction, __assign({}, props)))); },\n                accordionComponent: function () { return React__default.createElement(MemberList, { renderUserListItem: renderUserListItem }); },\n            },\n            mutedUsers: {\n                icon: __assign(__assign({}, commonIconProps), { type: IconTypes.MUTE }),\n                label: __assign(__assign({}, commonLabelProps), { children: stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE }),\n                accordionComponent: function () { return React__default.createElement(MutedMemberList, { renderUserListItem: renderUserListItem }); },\n            },\n            bannedUsers: {\n                icon: __assign(__assign({}, commonIconProps), { type: IconTypes.BAN }),\n                label: __assign(__assign({}, commonLabelProps), { children: stringSet.CHANNEL_SETTING__BANNED_MEMBERS__TITLE }),\n                accordionComponent: function () { return React__default.createElement(BannedUserList, { renderUserListItem: renderUserListItem }); },\n            },\n            freezeChannel: {\n                hideMenu: channel === null || channel === void 0 ? void 0 : channel.isBroadcast,\n                icon: __assign(__assign({}, commonIconProps), { type: IconTypes.FREEZE }),\n                label: __assign(__assign({}, commonLabelProps), { children: stringSet.CHANNEL_SETTING__FREEZE_CHANNEL }),\n                rightComponent: function () { return React__default.createElement(Toggle, { className: \"sendbird-channel-settings__frozen-icon\", checked: frozen, onChange: function () {\n                        if (frozen) {\n                            channel === null || channel === void 0 ? void 0 : channel.unfreeze().then(function () {\n                                setFrozen(function (prev) { return !prev; });\n                            });\n                        }\n                        else {\n                            channel === null || channel === void 0 ? void 0 : channel.freeze().then(function () {\n                                setFrozen(function (prev) { return !prev; });\n                            });\n                        }\n                    } }); },\n            },\n        },\n        nonOperator: {\n            allUsers: {\n                icon: __assign(__assign({}, commonIconProps), { type: IconTypes.MEMBERS }),\n                label: __assign(__assign({}, commonLabelProps), { children: stringSet.CHANNEL_SETTING__MEMBERS__TITLE }),\n                rightComponent: function (props) { return (React__default.createElement(\"div\", { className: \"sendbird-channel-settings__members\" },\n                    React__default.createElement(Badge, { count: (channel === null || channel === void 0 ? void 0 : channel.memberCount) ? kFormatter(channel.memberCount) : '' }),\n                    React__default.createElement(MenuItemAction, __assign({}, props)))); },\n                accordionComponent: function () { return React__default.createElement(MemberList, { renderUserListItem: renderUserListItem }); },\n            },\n        }\n    }); }, [channel === null || channel === void 0 ? void 0 : channel.url, frozen]);\n};\n\nexport { useMenuItems as default, useMenuItems };\n//# sourceMappingURL=useMenuList.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}