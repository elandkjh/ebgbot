{"ast":null,"code":"import { _ as __assign } from '../chunks/bundle-BQi9-O76.js';\nimport React__default, { useRef, useContext } from 'react';\nimport { createPortal } from 'react-dom';\nimport { L as LocalizationContext } from '../chunks/bundle-cQZ3UZoG.js';\nimport { a as MODAL_ROOT, M as Modal } from '../chunks/bundle-CXdo2kR_.js';\nimport { c as isMultipleFilesMessage, b as isFileMessage, f as isSupportedFileView, h as isVideo, j as isImage } from '../chunks/bundle-DxTN4_0p.js';\nimport { n as noop } from '../chunks/bundle-BgwzpLeQ.js';\nimport { A as Avatar } from '../chunks/bundle-CFosTNce.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../chunks/bundle-DhKQeIfP.js';\nimport Icon, { IconTypes, IconColors } from './Icon.js';\nimport { m as SLIDER_BUTTON_ICON_SIDE_LENGTH } from '../chunks/bundle-DCMGp6rH.js';\nimport { u as useKeyDown } from '../chunks/bundle-Gdl-rzQC.js';\nimport '../chunks/bundle-Bwk5KPwK.js';\nimport '../chunks/bundle-bdDHjHH6.js';\nimport '../chunks/bundle-f-SpnOx2.js';\nimport './IconButton.js';\nimport './Button.js';\nimport '@sendbird/uikit-tools';\nimport '../withSendbird.js';\nimport 'css-vars-ponyfill';\nimport '@sendbird/chat';\nimport '../chunks/bundle-etuaqevl.js';\nimport '@sendbird/chat/openChannel';\nimport '@sendbird/chat/groupChannel';\nimport '../chunks/bundle-DDeWOERD.js';\nimport '../useSendbirdStateContext.js';\nimport '../chunks/bundle-CNWAfTVw.js';\nimport '../chunks/bundle-CwKZj-B6.js';\nimport './SortByRow.js';\nimport '../utils/message/getOutgoingMessageState.js';\nimport '../chunks/bundle-CA85nVxp.js';\nimport './ImageRenderer.js';\nimport '../chunks/bundle-DXRRGizV.js';\n\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types\nvar ViewerTypes = {\n  SINGLE: 'SINGLE',\n  MULTI: 'MULTI'\n};\nfunction mapFileViewerComponentProps(_a) {\n  var props = _a.props;\n  if (props.viewerType === ViewerTypes.MULTI) {\n    var _b = props,\n      fileInfoList = _b.fileInfoList,\n      currentIndex = _b.currentIndex;\n    return fileInfoList[currentIndex];\n  }\n  var fileInfo = props;\n  return {\n    name: fileInfo.name,\n    type: fileInfo.type,\n    url: fileInfo.url\n  };\n}\nfunction DeleteButton(props) {\n  if (props.viewerType !== ViewerTypes.MULTI) {\n    var onDelete_1 = props.onDelete,\n      isByMe = props.isByMe,\n      disableDelete_1 = props.disableDelete,\n      className = props.className;\n    return isByMe ? React__default.createElement(\"div\", {\n      className: \"sendbird-fileviewer__header__right__actions__delete \".concat(className)\n    }, React__default.createElement(Icon, {\n      className: disableDelete_1 ? 'disabled' : '',\n      type: IconTypes.DELETE,\n      fillColor: disableDelete_1 ? IconColors.GRAY : IconColors.ON_BACKGROUND_1,\n      height: \"24px\",\n      width: \"24px\",\n      onClick: function (e) {\n        if (!disableDelete_1) {\n          onDelete_1 === null || onDelete_1 === void 0 ? void 0 : onDelete_1(e);\n        }\n      }\n    })) : React__default.createElement(React__default.Fragment, null);\n  }\n  return React__default.createElement(React__default.Fragment, null);\n}\n\n// this is a slider component that is used to navigate between images\nfunction Slider(props) {\n  if (props.viewerType === ViewerTypes.MULTI) {\n    var onClickLeft_1 = props.onClickLeft,\n      onClickRight_1 = props.onClickRight;\n    return React__default.createElement(\"div\", {\n      className: \"sendbird-file-viewer-slider\"\n    }, React__default.createElement(\"div\", {\n      className: \"sendbird-file-viewer-arrow--left\"\n    }, React__default.createElement(Icon, {\n      type: IconTypes.SLIDE_LEFT,\n      fillColor: IconColors.ON_BACKGROUND_1,\n      height: SLIDER_BUTTON_ICON_SIDE_LENGTH,\n      width: SLIDER_BUTTON_ICON_SIDE_LENGTH,\n      onClick: function (e) {\n        onClickLeft_1 === null || onClickLeft_1 === void 0 ? void 0 : onClickLeft_1();\n        e.stopPropagation();\n      }\n    })), React__default.createElement(\"div\", {\n      className: \"sendbird-file-viewer-arrow--right\"\n    }, React__default.createElement(Icon, {\n      type: IconTypes.SLIDE_LEFT,\n      fillColor: IconColors.ON_BACKGROUND_1,\n      height: SLIDER_BUTTON_ICON_SIDE_LENGTH,\n      width: SLIDER_BUTTON_ICON_SIDE_LENGTH,\n      onClick: function (e) {\n        e.stopPropagation();\n        onClickRight_1 === null || onClickRight_1 === void 0 ? void 0 : onClickRight_1();\n      }\n    })));\n  }\n  // return empty fragment if viewerType is not ViewerTypes.MULTI\n  return React__default.createElement(React__default.Fragment, null);\n}\nvar FileViewerComponent = function (props) {\n  var profileUrl = props.profileUrl,\n    nickname = props.nickname,\n    onClose = props.onClose,\n    onDownloadClick = props.onDownloadClick;\n  var _a = props,\n    onClickLeft = _a.onClickLeft,\n    onClickRight = _a.onClickRight;\n  var ref = useRef(null);\n  var onKeyDown = useKeyDown(ref, {\n    Escape: function (e) {\n      return onClose === null || onClose === void 0 ? void 0 : onClose(e);\n    },\n    ArrowLeft: function () {\n      return onClickLeft === null || onClickLeft === void 0 ? void 0 : onClickLeft();\n    },\n    ArrowRight: function () {\n      return onClickRight === null || onClickRight === void 0 ? void 0 : onClickRight();\n    }\n  });\n  var _b = mapFileViewerComponentProps({\n      props: props\n    }),\n    name = _b.name,\n    type = _b.type,\n    url = _b.url;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  return React__default.createElement(Modal, {\n    onClose: onClose\n  }, React__default.createElement(\"div\", {\n    className: \"sendbird-fileviewer\",\n    \"data-testid\": \"sendbird-fileviewer\",\n    onKeyDown: onKeyDown,\n    // to focus\n    tabIndex: 1,\n    ref: ref\n  }, React__default.createElement(\"div\", {\n    className: \"sendbird-fileviewer__header\"\n  }, React__default.createElement(\"div\", {\n    className: \"sendbird-fileviewer__header__left\"\n  }, React__default.createElement(\"div\", {\n    className: \"sendbird-fileviewer__header__left__avatar\"\n  }, React__default.createElement(Avatar, {\n    height: \"32px\",\n    width: \"32px\",\n    src: profileUrl\n  })), React__default.createElement(Label, {\n    className: \"sendbird-fileviewer__header__left__filename\",\n    type: LabelTypography.H_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, name), React__default.createElement(Label, {\n    className: \"sendbird-fileviewer__header__left__sender-name\",\n    type: LabelTypography.BODY_1,\n    color: LabelColors.ONBACKGROUND_2\n  }, nickname)), React__default.createElement(\"div\", {\n    className: \"sendbird-fileviewer__header__right\"\n  }, isSupportedFileView(type) && React__default.createElement(\"div\", {\n    className: \"sendbird-fileviewer__header__right__actions\"\n  }, React__default.createElement(\"a\", {\n    className: \"sendbird-fileviewer__header__right__actions__download\",\n    rel: \"noopener noreferrer\",\n    href: url,\n    target: \"_blank\",\n    onClick: onDownloadClick\n  }, React__default.createElement(Icon, {\n    type: IconTypes.DOWNLOAD,\n    fillColor: IconColors.ON_BACKGROUND_1,\n    height: \"24px\",\n    width: \"24px\"\n  })), React__default.createElement(DeleteButton, __assign({\n    className: 'sendbird-fileviewer__header__right__actions__delete'\n  }, props))), React__default.createElement(\"div\", {\n    className: \"sendbird-fileviewer__header__right__actions__close\"\n  }, React__default.createElement(Icon, {\n    type: IconTypes.CLOSE,\n    fillColor: IconColors.ON_BACKGROUND_1,\n    height: \"24px\",\n    width: \"24px\",\n    onClick: function (e) {\n      return onClose === null || onClose === void 0 ? void 0 : onClose(e);\n    }\n  })))), React__default.createElement(\"div\", {\n    className: \"sendbird-fileviewer__content\"\n  }, isVideo(type) && React__default.createElement(\"video\", {\n    controls: true,\n    className: \"sendbird-fileviewer__content__video\"\n  }, React__default.createElement(\"source\", {\n    src: url,\n    type: type\n  })), isImage(type) && React__default.createElement(\"img\", {\n    src: url,\n    alt: name,\n    className: props.viewerType === ViewerTypes.MULTI ? 'sendbird-fileviewer__content__img__multi' : 'sendbird-fileviewer__content__img'\n  }), !isSupportedFileView(type) && React__default.createElement(\"div\", {\n    className: \"sendbird-fileviewer__content__unsupported\"\n  }, React__default.createElement(Label, {\n    type: LabelTypography.H_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, (stringSet === null || stringSet === void 0 ? void 0 : stringSet.UI__FILE_VIEWER__UNSUPPORT) || 'Unsupported message')), React__default.createElement(Slider, __assign({}, props)))));\n};\nfunction FileViewer(_a) {\n  var _b, _c, _d;\n  var message = _a.message,\n    _e = _a.statefulFileInfoList,\n    statefulFileInfoList = _e === void 0 ? [] : _e,\n    onClose = _a.onClose,\n    _f = _a.isByMe,\n    isByMe = _f === void 0 ? false : _f,\n    onDelete = _a.onDelete,\n    currentIndex = _a.currentIndex,\n    onClickLeft = _a.onClickLeft,\n    onClickRight = _a.onClickRight,\n    onDownloadClick = _a.onDownloadClick;\n  if (isMultipleFilesMessage(message)) {\n    var castedMessage = message;\n    return React__default.createElement(FileViewerComponent, {\n      profileUrl: castedMessage.sender.profileUrl,\n      nickname: castedMessage.sender.nickname,\n      viewerType: ViewerTypes.MULTI,\n      fileInfoList: statefulFileInfoList.filter(function (fileInfo) {\n        return fileInfo.url; // Caution: This assumes that defined url means file upload has completed.\n      }).map(function (fileInfo) {\n        return {\n          name: fileInfo.fileName || '',\n          type: fileInfo.mimeType || '',\n          url: fileInfo.url || ''\n        };\n      }),\n      currentIndex: currentIndex || 0,\n      onClickLeft: onClickLeft || noop,\n      onClickRight: onClickRight || noop,\n      onClose: onClose,\n      onDownloadClick: onDownloadClick\n    });\n  } else if (isFileMessage(message)) {\n    var castedMessage = message;\n    return createPortal(React__default.createElement(FileViewerComponent, {\n      profileUrl: (_b = castedMessage.sender) === null || _b === void 0 ? void 0 : _b.profileUrl,\n      nickname: (_c = castedMessage.sender) === null || _c === void 0 ? void 0 : _c.nickname,\n      name: castedMessage.name,\n      type: castedMessage.type,\n      url: castedMessage === null || castedMessage === void 0 ? void 0 : castedMessage.url,\n      isByMe: isByMe,\n      disableDelete: (((_d = castedMessage.threadInfo) === null || _d === void 0 ? void 0 : _d.replyCount) || 0) > 0,\n      onClose: onClose,\n      onDelete: onDelete || noop,\n      onDownloadClick: onDownloadClick\n    }), document.getElementById(MODAL_ROOT));\n  }\n  return React__default.createElement(React__default.Fragment, null);\n}\nexport { FileViewerComponent, FileViewer as default };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import { _ as __assign } from '../chunks/bundle-BQi9-O76.js';\nimport React__default, { useRef, useContext } from 'react';\nimport { createPortal } from 'react-dom';\nimport { L as LocalizationContext } from '../chunks/bundle-cQZ3UZoG.js';\nimport { a as MODAL_ROOT, M as Modal } from '../chunks/bundle-CXdo2kR_.js';\nimport { c as isMultipleFilesMessage, b as isFileMessage, f as isSupportedFileView, h as isVideo, j as isImage } from '../chunks/bundle-DxTN4_0p.js';\nimport { n as noop } from '../chunks/bundle-BgwzpLeQ.js';\nimport { A as Avatar } from '../chunks/bundle-CFosTNce.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../chunks/bundle-DhKQeIfP.js';\nimport Icon, { IconTypes, IconColors } from './Icon.js';\nimport { m as SLIDER_BUTTON_ICON_SIDE_LENGTH } from '../chunks/bundle-DCMGp6rH.js';\nimport { u as useKeyDown } from '../chunks/bundle-Gdl-rzQC.js';\nimport '../chunks/bundle-Bwk5KPwK.js';\nimport '../chunks/bundle-bdDHjHH6.js';\nimport '../chunks/bundle-f-SpnOx2.js';\nimport './IconButton.js';\nimport './Button.js';\nimport '@sendbird/uikit-tools';\nimport '../withSendbird.js';\nimport 'css-vars-ponyfill';\nimport '@sendbird/chat';\nimport '../chunks/bundle-etuaqevl.js';\nimport '@sendbird/chat/openChannel';\nimport '@sendbird/chat/groupChannel';\nimport '../chunks/bundle-DDeWOERD.js';\nimport '../useSendbirdStateContext.js';\nimport '../chunks/bundle-CNWAfTVw.js';\nimport '../chunks/bundle-CwKZj-B6.js';\nimport './SortByRow.js';\nimport '../utils/message/getOutgoingMessageState.js';\nimport '../chunks/bundle-CA85nVxp.js';\nimport './ImageRenderer.js';\nimport '../chunks/bundle-DXRRGizV.js';\n\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types\nvar ViewerTypes = {\n    SINGLE: 'SINGLE',\n    MULTI: 'MULTI',\n};\n\nfunction mapFileViewerComponentProps(_a) {\n    var props = _a.props;\n    if (props.viewerType === ViewerTypes.MULTI) {\n        var _b = props, fileInfoList = _b.fileInfoList, currentIndex = _b.currentIndex;\n        return fileInfoList[currentIndex];\n    }\n    var fileInfo = props;\n    return {\n        name: fileInfo.name,\n        type: fileInfo.type,\n        url: fileInfo.url,\n    };\n}\n\nfunction DeleteButton(props) {\n    if (props.viewerType !== ViewerTypes.MULTI) {\n        var onDelete_1 = props.onDelete, isByMe = props.isByMe, disableDelete_1 = props.disableDelete, className = props.className;\n        return (isByMe)\n            ? (React__default.createElement(\"div\", { className: \"sendbird-fileviewer__header__right__actions__delete \".concat(className) },\n                React__default.createElement(Icon, { className: disableDelete_1 ? 'disabled' : '', type: IconTypes.DELETE, fillColor: disableDelete_1 ? IconColors.GRAY : IconColors.ON_BACKGROUND_1, height: \"24px\", width: \"24px\", onClick: function (e) { if (!disableDelete_1) {\n                        onDelete_1 === null || onDelete_1 === void 0 ? void 0 : onDelete_1(e);\n                    } } })))\n            : React__default.createElement(React__default.Fragment, null);\n    }\n    return React__default.createElement(React__default.Fragment, null);\n}\n\n// this is a slider component that is used to navigate between images\nfunction Slider(props) {\n    if (props.viewerType === ViewerTypes.MULTI) {\n        var onClickLeft_1 = props.onClickLeft, onClickRight_1 = props.onClickRight;\n        return (React__default.createElement(\"div\", { className: \"sendbird-file-viewer-slider\" },\n            React__default.createElement(\"div\", { className: \"sendbird-file-viewer-arrow--left\" },\n                React__default.createElement(Icon, { type: IconTypes.SLIDE_LEFT, fillColor: IconColors.ON_BACKGROUND_1, height: SLIDER_BUTTON_ICON_SIDE_LENGTH, width: SLIDER_BUTTON_ICON_SIDE_LENGTH, onClick: function (e) {\n                        onClickLeft_1 === null || onClickLeft_1 === void 0 ? void 0 : onClickLeft_1();\n                        e.stopPropagation();\n                    } })),\n            React__default.createElement(\"div\", { className: \"sendbird-file-viewer-arrow--right\" },\n                React__default.createElement(Icon, { type: IconTypes.SLIDE_LEFT, fillColor: IconColors.ON_BACKGROUND_1, height: SLIDER_BUTTON_ICON_SIDE_LENGTH, width: SLIDER_BUTTON_ICON_SIDE_LENGTH, onClick: function (e) {\n                        e.stopPropagation();\n                        onClickRight_1 === null || onClickRight_1 === void 0 ? void 0 : onClickRight_1();\n                    } }))));\n    }\n    // return empty fragment if viewerType is not ViewerTypes.MULTI\n    return React__default.createElement(React__default.Fragment, null);\n}\n\nvar FileViewerComponent = function (props) {\n    var profileUrl = props.profileUrl, nickname = props.nickname, onClose = props.onClose, onDownloadClick = props.onDownloadClick;\n    var _a = props, onClickLeft = _a.onClickLeft, onClickRight = _a.onClickRight;\n    var ref = useRef(null);\n    var onKeyDown = useKeyDown(ref, {\n        Escape: function (e) { return onClose === null || onClose === void 0 ? void 0 : onClose(e); },\n        ArrowLeft: function () { return onClickLeft === null || onClickLeft === void 0 ? void 0 : onClickLeft(); },\n        ArrowRight: function () { return onClickRight === null || onClickRight === void 0 ? void 0 : onClickRight(); },\n    });\n    var _b = mapFileViewerComponentProps({ props: props }), name = _b.name, type = _b.type, url = _b.url;\n    var stringSet = useContext(LocalizationContext).stringSet;\n    return (React__default.createElement(Modal, { onClose: onClose },\n        React__default.createElement(\"div\", { className: \"sendbird-fileviewer\", \"data-testid\": \"sendbird-fileviewer\", onKeyDown: onKeyDown, \n            // to focus\n            tabIndex: 1, ref: ref },\n            React__default.createElement(\"div\", { className: \"sendbird-fileviewer__header\" },\n                React__default.createElement(\"div\", { className: \"sendbird-fileviewer__header__left\" },\n                    React__default.createElement(\"div\", { className: \"sendbird-fileviewer__header__left__avatar\" },\n                        React__default.createElement(Avatar, { height: \"32px\", width: \"32px\", src: profileUrl })),\n                    React__default.createElement(Label, { className: \"sendbird-fileviewer__header__left__filename\", type: LabelTypography.H_2, color: LabelColors.ONBACKGROUND_1 }, name),\n                    React__default.createElement(Label, { className: \"sendbird-fileviewer__header__left__sender-name\", type: LabelTypography.BODY_1, color: LabelColors.ONBACKGROUND_2 }, nickname)),\n                React__default.createElement(\"div\", { className: \"sendbird-fileviewer__header__right\" },\n                    isSupportedFileView(type) && (React__default.createElement(\"div\", { className: \"sendbird-fileviewer__header__right__actions\" },\n                        React__default.createElement(\"a\", { className: \"sendbird-fileviewer__header__right__actions__download\", rel: \"noopener noreferrer\", href: url, target: \"_blank\", onClick: onDownloadClick },\n                            React__default.createElement(Icon, { type: IconTypes.DOWNLOAD, fillColor: IconColors.ON_BACKGROUND_1, height: \"24px\", width: \"24px\" })),\n                        React__default.createElement(DeleteButton, __assign({ className: 'sendbird-fileviewer__header__right__actions__delete' }, props)))),\n                    React__default.createElement(\"div\", { className: \"sendbird-fileviewer__header__right__actions__close\" },\n                        React__default.createElement(Icon, { type: IconTypes.CLOSE, fillColor: IconColors.ON_BACKGROUND_1, height: \"24px\", width: \"24px\", onClick: function (e) { return onClose === null || onClose === void 0 ? void 0 : onClose(e); } })))),\n            React__default.createElement(\"div\", { className: \"sendbird-fileviewer__content\" },\n                isVideo(type) && (React__default.createElement(\"video\", { controls: true, className: \"sendbird-fileviewer__content__video\" },\n                    React__default.createElement(\"source\", { src: url, type: type }))),\n                isImage(type) && (React__default.createElement(\"img\", { src: url, alt: name, className: props.viewerType === ViewerTypes.MULTI\n                        ? 'sendbird-fileviewer__content__img__multi'\n                        : 'sendbird-fileviewer__content__img' })),\n                !isSupportedFileView(type) && (React__default.createElement(\"div\", { className: \"sendbird-fileviewer__content__unsupported\" },\n                    React__default.createElement(Label, { type: LabelTypography.H_1, color: LabelColors.ONBACKGROUND_1 }, (stringSet === null || stringSet === void 0 ? void 0 : stringSet.UI__FILE_VIEWER__UNSUPPORT) || 'Unsupported message'))),\n                React__default.createElement(Slider, __assign({}, props))))));\n};\nfunction FileViewer(_a) {\n    var _b, _c, _d;\n    var message = _a.message, _e = _a.statefulFileInfoList, statefulFileInfoList = _e === void 0 ? [] : _e, onClose = _a.onClose, _f = _a.isByMe, isByMe = _f === void 0 ? false : _f, onDelete = _a.onDelete, currentIndex = _a.currentIndex, onClickLeft = _a.onClickLeft, onClickRight = _a.onClickRight, onDownloadClick = _a.onDownloadClick;\n    if (isMultipleFilesMessage(message)) {\n        var castedMessage = message;\n        return (React__default.createElement(FileViewerComponent, { profileUrl: castedMessage.sender.profileUrl, nickname: castedMessage.sender.nickname, viewerType: ViewerTypes.MULTI, fileInfoList: statefulFileInfoList.filter(function (fileInfo) {\n                return fileInfo.url; // Caution: This assumes that defined url means file upload has completed.\n            }).map(function (fileInfo) {\n                return {\n                    name: fileInfo.fileName || '',\n                    type: fileInfo.mimeType || '',\n                    url: fileInfo.url || '',\n                };\n            }), currentIndex: currentIndex || 0, onClickLeft: onClickLeft || noop, onClickRight: onClickRight || noop, onClose: onClose, onDownloadClick: onDownloadClick }));\n    }\n    else if (isFileMessage(message)) {\n        var castedMessage = message;\n        return createPortal((React__default.createElement(FileViewerComponent, { profileUrl: (_b = castedMessage.sender) === null || _b === void 0 ? void 0 : _b.profileUrl, nickname: (_c = castedMessage.sender) === null || _c === void 0 ? void 0 : _c.nickname, name: castedMessage.name, type: castedMessage.type, url: castedMessage === null || castedMessage === void 0 ? void 0 : castedMessage.url, isByMe: isByMe, disableDelete: (((_d = castedMessage.threadInfo) === null || _d === void 0 ? void 0 : _d.replyCount) || 0) > 0, onClose: onClose, onDelete: onDelete || noop, onDownloadClick: onDownloadClick })), document.getElementById(MODAL_ROOT));\n    }\n    return React__default.createElement(React__default.Fragment, null);\n}\n\nexport { FileViewerComponent, FileViewer as default };\n//# sourceMappingURL=FileViewer.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}