{"ast":null,"code":"import React__default, { useState, useMemo, useRef, useEffect } from 'react';\nimport { a as __awaiter, b as __generator, _ as __assign } from './bundle-BQi9-O76.js';\nimport { SendingStatus } from '@sendbird/chat/message';\nimport { useSendbirdStateContext } from '../useSendbirdStateContext.js';\nimport Icon, { IconTypes, IconColors } from '../ui/Icon.js';\nimport ImageRenderer, { getBorderRadiusForMultipleImageRenderer } from '../ui/ImageRenderer.js';\nimport { w as getClassName, z as isGif, K } from './bundle-DxTN4_0p.js';\nimport FileViewer from '../ui/FileViewer.js';\nfunction ImageGrid(_a) {\n  var _b;\n  var children = _a.children,\n    className = _a.className,\n    message = _a.message,\n    isReactionEnabled = _a.isReactionEnabled;\n  return React__default.createElement(\"div\", {\n    className: 'sendbird-image-grid-wrap'\n  }, React__default.createElement(\"div\", {\n    className: getClassName([className !== null && className !== void 0 ? className : '', 'sendbird-image-grid', isReactionEnabled && ((_b = message === null || message === void 0 ? void 0 : message.reactions) === null || _b === void 0 ? void 0 : _b.length) > 0 ? 'reactions' : ''])\n  }, children));\n}\nvar GRID_WIDTH_CHAT_WEB = 400;\nvar GRID_SIDE_PADDING = 8;\nvar GRID_GAP = 4;\nvar TIMESTAMP_WIDTH_AND_ITS_SIDE_MARGIN = 54;\nvar PROFILE_IMAGE_WIDTH = 40;\nvar CHAT_MOBILE_SIDE_PADDING = 48;\nvar THREAD_PARENT_WIDTH = 320;\nvar THREAD_PARENT_SIDE_PADDING = 28;\nvar THREAD_PARENT_GRID_MARGIN_LEFT = 12;\nvar THREAD_CHILD_WIDTH = 200;\nvar THREAD_CHILD_SIDE_PADDING = 8;\nvar THREAD_CHILD_MOBILE_SIDE_PADDING = 32;\nvar THREAD_CHILD_MOBILE_TIMESTAMP_WIDTH_AND_ITS_SIDE_MARGIN = 60;\nvar MULTIPLE_FILES_IMAGE_SIDE_LENGTH = {\n  CHAT_WEB: \"calc(\".concat(GRID_WIDTH_CHAT_WEB / 2, \"px - \").concat((GRID_SIDE_PADDING + GRID_GAP) / 2, \"px)\"),\n  CHAT_MOBILE: \"calc(50vw - \".concat((CHAT_MOBILE_SIDE_PADDING + PROFILE_IMAGE_WIDTH + TIMESTAMP_WIDTH_AND_ITS_SIDE_MARGIN + GRID_SIDE_PADDING + GRID_GAP) / 2, \"px)\"),\n  THREAD_PARENT_WEB: \"calc(\".concat((THREAD_PARENT_WIDTH - (THREAD_PARENT_SIDE_PADDING + PROFILE_IMAGE_WIDTH + THREAD_PARENT_GRID_MARGIN_LEFT + GRID_GAP)) / 2, \"px)\"),\n  THREAD_PARENT_MOBILE: \"calc(50vw - \".concat((THREAD_PARENT_SIDE_PADDING + PROFILE_IMAGE_WIDTH + THREAD_PARENT_GRID_MARGIN_LEFT + GRID_GAP) / 2, \"px)\"),\n  THREAD_CHILD_WEB: \"calc(\".concat((THREAD_CHILD_WIDTH - THREAD_CHILD_SIDE_PADDING - GRID_GAP) / 2, \"px)\"),\n  THREAD_CHILD_MOBILE: \"calc(50vw - \".concat((THREAD_CHILD_MOBILE_SIDE_PADDING + PROFILE_IMAGE_WIDTH + THREAD_CHILD_MOBILE_TIMESTAMP_WIDTH_AND_ITS_SIDE_MARGIN + GRID_SIDE_PADDING + GRID_GAP) / 2, \"px)\")\n};\nvar MULTIPLE_FILES_IMAGE_BORDER_RADIUS = {\n  CHAT_WEB: '6px',\n  CHAT_MOBILE: '6px',\n  THREAD_PARENT_WEB: '6px',\n  THREAD_PARENT_MOBILE: '6px',\n  THREAD_CHILD_WEB: '6px',\n  THREAD_CHILD_MOBILE: '6px'\n};\nvar MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH = '34px';\nvar ThreadMessageKind = {\n  PARENT: 'parent',\n  CHILD: 'child'\n};\nfunction MultipleFilesMessageItemBody(_a) {\n  var _this = this;\n  var _b, _c;\n  var className = _a.className,\n    message = _a.message,\n    _d = _a.isReactionEnabled,\n    isReactionEnabled = _d === void 0 ? false : _d,\n    threadMessageKindKey = _a.threadMessageKindKey,\n    _e = _a.statefulFileInfoList,\n    statefulFileInfoList = _e === void 0 ? [] : _e,\n    _f = _a.onBeforeDownloadFileMessage,\n    onBeforeDownloadFileMessage = _f === void 0 ? null : _f;\n  var logger = (_c = (_b = useSendbirdStateContext === null || useSendbirdStateContext === void 0 ? void 0 : useSendbirdStateContext()) === null || _b === void 0 ? void 0 : _b.config) === null || _c === void 0 ? void 0 : _c.logger;\n  var _g = useState(-1),\n    currentFileViewerIndex = _g[0],\n    setCurrentFileViewerIndex = _g[1];\n  function onClose() {\n    setCurrentFileViewerIndex(-1);\n  }\n  function onClickLeft() {\n    setCurrentFileViewerIndex(currentFileViewerIndex === 0 ? statefulFileInfoList.length - 1 : currentFileViewerIndex - 1);\n  }\n  function onClickRight() {\n    setCurrentFileViewerIndex(currentFileViewerIndex === statefulFileInfoList.length - 1 ? 0 : currentFileViewerIndex + 1);\n  }\n  return threadMessageKindKey ? React__default.createElement(React__default.Fragment, null, currentFileViewerIndex > -1 && React__default.createElement(FileViewer, {\n    message: message,\n    statefulFileInfoList: statefulFileInfoList,\n    currentIndex: currentFileViewerIndex,\n    onClickLeft: onClickLeft,\n    onClickRight: onClickRight,\n    onClose: onClose,\n    onDownloadClick: function (e) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var allowDownload, err_1;\n        var _a, _b;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              if (!onBeforeDownloadFileMessage) return [2 /*return*/];\n              _c.label = 1;\n            case 1:\n              _c.trys.push([1, 3,, 4]);\n              return [4 /*yield*/, onBeforeDownloadFileMessage({\n                message: message,\n                index: currentFileViewerIndex\n              })];\n            case 2:\n              allowDownload = _c.sent();\n              if (!allowDownload) {\n                e.preventDefault();\n                (_a = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a === void 0 ? void 0 : _a.call(logger, 'MultipleFilesMessageItemBody: Not allowed to download.');\n              }\n              return [3 /*break*/, 4];\n            case 3:\n              err_1 = _c.sent();\n              (_b = logger === null || logger === void 0 ? void 0 : logger.error) === null || _b === void 0 ? void 0 : _b.call(logger, 'MultipleFilesMessageItemBody: Error occurred while determining download continuation:', err_1);\n              return [3 /*break*/, 4];\n            case 4:\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  }), React__default.createElement(ImageGrid, {\n    className: className,\n    message: message,\n    isReactionEnabled: isReactionEnabled\n  }, statefulFileInfoList.map(function (fileInfo, index) {\n    var _a, _b, _c, _d;\n    return React__default.createElement(\"div\", {\n      className: \"sendbird-multiple-files-image-renderer-wrapper\",\n      onClick: message.sendingStatus === SendingStatus.SUCCEEDED ? function () {\n        return setCurrentFileViewerIndex(index);\n      } : undefined,\n      key: \"sendbird-multiple-files-image-renderer-\".concat(index, \"-\").concat(fileInfo.url)\n    }, React__default.createElement(ImageRenderer, {\n      url: (_d = (_c = (_b = (_a = fileInfo.thumbnails) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.url) !== null && _c !== void 0 ? _c : fileInfo.url) !== null && _d !== void 0 ? _d : '',\n      fixedSize: false,\n      width: MULTIPLE_FILES_IMAGE_SIDE_LENGTH[threadMessageKindKey],\n      maxSideLength: MULTIPLE_FILES_IMAGE_SIDE_LENGTH.CHAT_WEB,\n      height: MULTIPLE_FILES_IMAGE_SIDE_LENGTH[threadMessageKindKey],\n      borderRadius: getBorderRadiusForMultipleImageRenderer(MULTIPLE_FILES_IMAGE_BORDER_RADIUS[threadMessageKindKey], index, statefulFileInfoList.length),\n      shadeOnHover: true,\n      isUploaded: !!fileInfo.isUploaded,\n      placeHolder: function (_a) {\n        var style = _a.style;\n        if (fileInfo.mimeType && isGif(fileInfo.mimeType)) return React__default.createElement(ImagePlaceholder.GIF, {\n          style: style\n        });\n        return React__default.createElement(ImagePlaceholder.Default, {\n          style: style\n        });\n      },\n      defaultComponent: React__default.createElement(ImagePlaceholder.LoadError, null)\n    }));\n  }))) : React__default.createElement(React__default.Fragment, null);\n}\nvar ImagePlaceholder = {\n  Default: function (_a) {\n    var style = _a.style;\n    return React__default.createElement(\"div\", {\n      className: \"sendbird-multiple-files-image-renderer__thumbnail__placeholder\",\n      style: style\n    }, React__default.createElement(Icon, {\n      type: IconTypes.PHOTO,\n      fillColor: IconColors.ON_BACKGROUND_2,\n      width: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH,\n      height: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH\n    }));\n  },\n  GIF: function (_a) {\n    var style = _a.style;\n    return React__default.createElement(\"div\", {\n      className: \"sendbird-multiple-files-image-renderer__thumbnail__placeholder\",\n      style: style\n    }, React__default.createElement(\"div\", {\n      className: \"sendbird-multiple-files-image-renderer__thumbnail__placeholder__icon\"\n    }, React__default.createElement(Icon, {\n      type: IconTypes.GIF,\n      fillColor: IconColors.THUMBNAIL_ICON,\n      width: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH,\n      height: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH\n    })));\n  },\n  LoadError: function () {\n    return React__default.createElement(\"div\", {\n      className: \"sendbird-multiple-files-image-renderer__thumbnail__placeholder\"\n    }, React__default.createElement(Icon, {\n      type: IconTypes.THUMBNAIL_NONE,\n      fillColor: IconColors.ON_BACKGROUND_2,\n      width: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH,\n      height: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH\n    }));\n  }\n};\nfunction useThreadMessageKindKeySelector(_a) {\n  var threadMessageKind = _a.threadMessageKind,\n    isMobile = _a.isMobile;\n  var threadMessageKindKey = useMemo(function () {\n    return K(threadMessageKind).with(ThreadMessageKind.PARENT, function () {\n      return isMobile ? 'THREAD_PARENT_MOBILE' : 'THREAD_PARENT_WEB';\n    }).with(ThreadMessageKind.CHILD, function () {\n      return isMobile ? 'THREAD_CHILD_MOBILE' : 'THREAD_CHILD_WEB';\n    }).otherwise(function () {\n      return isMobile ? 'CHAT_MOBILE' : 'CHAT_WEB';\n    });\n  }, [isMobile, threadMessageKind]);\n  return threadMessageKindKey;\n}\n\n// SendingStatus.SCHEDULED is currently not covered in UIKit\n//  So we can ignore for now, but for future, it is better to explicitly use PENDING, FAILED, or CANCELED.\nvar useFileInfoListWithUploaded = function (message) {\n  var _a, _b;\n  var blobHandler = useRef(new Map());\n  var getObjectURL = function (index, blob) {\n    if (!blobHandler.current.has(index) && blob) blobHandler.current.set(index, URL.createObjectURL(blob));\n    return blobHandler.current.get(index);\n  };\n  var revokeURLs = function () {\n    if (blobHandler.current.size > 0) {\n      blobHandler.current.forEach(function (url) {\n        return URL.revokeObjectURL(url);\n      });\n      blobHandler.current.clear();\n    }\n  };\n  useEffect(function () {\n    return function () {\n      return revokeURLs();\n    };\n  }, []);\n  if (!message || !message.isMultipleFilesMessage || !message.isMultipleFilesMessage()) {\n    return [];\n  } else if (message.sendingStatus === SendingStatus.SUCCEEDED) {\n    revokeURLs();\n    return message.fileInfoList.map(function (it) {\n      var _a, _b;\n      return __assign(__assign({}, it), {\n        url: it.url,\n        isUploaded: true,\n        mimeType: (_a = it.mimeType) !== null && _a !== void 0 ? _a : undefined,\n        fileName: (_b = it.fileName) !== null && _b !== void 0 ? _b : undefined\n      });\n    });\n  } else {\n    return (_b = (_a = message === null || message === void 0 ? void 0 : message.messageParams) === null || _a === void 0 ? void 0 : _a.fileInfoList.map(function (it, index) {\n      var _a, _b;\n      return __assign(__assign({}, it), {\n        url: (_b = (_a = getObjectURL(index)) !== null && _a !== void 0 ? _a : it.fileUrl) !== null && _b !== void 0 ? _b : it.file instanceof Blob ? getObjectURL(index, it.file) : undefined,\n        isUploaded: !it.file && typeof it.fileUrl === 'string' && it.fileUrl.length > 0\n      });\n    })) !== null && _b !== void 0 ? _b : [];\n  }\n};\nexport { MultipleFilesMessageItemBody as M, ThreadMessageKind as T, useFileInfoListWithUploaded as a, useThreadMessageKindKeySelector as u };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import React__default, { useState, useMemo, useRef, useEffect } from 'react';\nimport { a as __awaiter, b as __generator, _ as __assign } from './bundle-BQi9-O76.js';\nimport { SendingStatus } from '@sendbird/chat/message';\nimport { useSendbirdStateContext } from '../useSendbirdStateContext.js';\nimport Icon, { IconTypes, IconColors } from '../ui/Icon.js';\nimport ImageRenderer, { getBorderRadiusForMultipleImageRenderer } from '../ui/ImageRenderer.js';\nimport { w as getClassName, z as isGif, K } from './bundle-DxTN4_0p.js';\nimport FileViewer from '../ui/FileViewer.js';\n\nfunction ImageGrid(_a) {\n    var _b;\n    var children = _a.children, className = _a.className, message = _a.message, isReactionEnabled = _a.isReactionEnabled;\n    return (React__default.createElement(\"div\", { className: 'sendbird-image-grid-wrap' },\n        React__default.createElement(\"div\", { className: getClassName([\n                className !== null && className !== void 0 ? className : '',\n                'sendbird-image-grid',\n                (isReactionEnabled && ((_b = message === null || message === void 0 ? void 0 : message.reactions) === null || _b === void 0 ? void 0 : _b.length) > 0) ? 'reactions' : '',\n            ]) }, children)));\n}\n\nvar GRID_WIDTH_CHAT_WEB = 400;\nvar GRID_SIDE_PADDING = 8;\nvar GRID_GAP = 4;\nvar TIMESTAMP_WIDTH_AND_ITS_SIDE_MARGIN = 54;\nvar PROFILE_IMAGE_WIDTH = 40;\nvar CHAT_MOBILE_SIDE_PADDING = 48;\nvar THREAD_PARENT_WIDTH = 320;\nvar THREAD_PARENT_SIDE_PADDING = 28;\nvar THREAD_PARENT_GRID_MARGIN_LEFT = 12;\nvar THREAD_CHILD_WIDTH = 200;\nvar THREAD_CHILD_SIDE_PADDING = 8;\nvar THREAD_CHILD_MOBILE_SIDE_PADDING = 32;\nvar THREAD_CHILD_MOBILE_TIMESTAMP_WIDTH_AND_ITS_SIDE_MARGIN = 60;\nvar MULTIPLE_FILES_IMAGE_SIDE_LENGTH = {\n    CHAT_WEB: \"calc(\".concat(GRID_WIDTH_CHAT_WEB / 2, \"px - \").concat((GRID_SIDE_PADDING + GRID_GAP) / 2, \"px)\"),\n    CHAT_MOBILE: \"calc(50vw - \".concat((CHAT_MOBILE_SIDE_PADDING + PROFILE_IMAGE_WIDTH + TIMESTAMP_WIDTH_AND_ITS_SIDE_MARGIN + GRID_SIDE_PADDING + GRID_GAP) / 2, \"px)\"),\n    THREAD_PARENT_WEB: \"calc(\".concat((THREAD_PARENT_WIDTH - (THREAD_PARENT_SIDE_PADDING + PROFILE_IMAGE_WIDTH + THREAD_PARENT_GRID_MARGIN_LEFT + GRID_GAP)) / 2, \"px)\"),\n    THREAD_PARENT_MOBILE: \"calc(50vw - \".concat((THREAD_PARENT_SIDE_PADDING + PROFILE_IMAGE_WIDTH + THREAD_PARENT_GRID_MARGIN_LEFT + GRID_GAP) / 2, \"px)\"),\n    THREAD_CHILD_WEB: \"calc(\".concat((THREAD_CHILD_WIDTH - THREAD_CHILD_SIDE_PADDING - GRID_GAP) / 2, \"px)\"),\n    THREAD_CHILD_MOBILE: \"calc(50vw - \".concat((THREAD_CHILD_MOBILE_SIDE_PADDING + PROFILE_IMAGE_WIDTH + THREAD_CHILD_MOBILE_TIMESTAMP_WIDTH_AND_ITS_SIDE_MARGIN + GRID_SIDE_PADDING + GRID_GAP) / 2, \"px)\"),\n};\nvar MULTIPLE_FILES_IMAGE_BORDER_RADIUS = {\n    CHAT_WEB: '6px',\n    CHAT_MOBILE: '6px',\n    THREAD_PARENT_WEB: '6px',\n    THREAD_PARENT_MOBILE: '6px',\n    THREAD_CHILD_WEB: '6px',\n    THREAD_CHILD_MOBILE: '6px',\n};\nvar MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH = '34px';\n\nvar ThreadMessageKind = {\n    PARENT: 'parent',\n    CHILD: 'child',\n};\nfunction MultipleFilesMessageItemBody(_a) {\n    var _this = this;\n    var _b, _c;\n    var className = _a.className, message = _a.message, _d = _a.isReactionEnabled, isReactionEnabled = _d === void 0 ? false : _d, threadMessageKindKey = _a.threadMessageKindKey, _e = _a.statefulFileInfoList, statefulFileInfoList = _e === void 0 ? [] : _e, _f = _a.onBeforeDownloadFileMessage, onBeforeDownloadFileMessage = _f === void 0 ? null : _f;\n    var logger = (_c = (_b = useSendbirdStateContext === null || useSendbirdStateContext === void 0 ? void 0 : useSendbirdStateContext()) === null || _b === void 0 ? void 0 : _b.config) === null || _c === void 0 ? void 0 : _c.logger;\n    var _g = useState(-1), currentFileViewerIndex = _g[0], setCurrentFileViewerIndex = _g[1];\n    function onClose() {\n        setCurrentFileViewerIndex(-1);\n    }\n    function onClickLeft() {\n        setCurrentFileViewerIndex(currentFileViewerIndex === 0 ? statefulFileInfoList.length - 1 : currentFileViewerIndex - 1);\n    }\n    function onClickRight() {\n        setCurrentFileViewerIndex(currentFileViewerIndex === statefulFileInfoList.length - 1 ? 0 : currentFileViewerIndex + 1);\n    }\n    return (threadMessageKindKey ? (React__default.createElement(React__default.Fragment, null,\n        currentFileViewerIndex > -1 && (React__default.createElement(FileViewer, { message: message, statefulFileInfoList: statefulFileInfoList, currentIndex: currentFileViewerIndex, onClickLeft: onClickLeft, onClickRight: onClickRight, onClose: onClose, onDownloadClick: function (e) { return __awaiter(_this, void 0, void 0, function () {\n                var allowDownload, err_1;\n                var _a, _b;\n                return __generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0:\n                            if (!onBeforeDownloadFileMessage)\n                                return [2 /*return*/];\n                            _c.label = 1;\n                        case 1:\n                            _c.trys.push([1, 3, , 4]);\n                            return [4 /*yield*/, onBeforeDownloadFileMessage({ message: message, index: currentFileViewerIndex })];\n                        case 2:\n                            allowDownload = _c.sent();\n                            if (!allowDownload) {\n                                e.preventDefault();\n                                (_a = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a === void 0 ? void 0 : _a.call(logger, 'MultipleFilesMessageItemBody: Not allowed to download.');\n                            }\n                            return [3 /*break*/, 4];\n                        case 3:\n                            err_1 = _c.sent();\n                            (_b = logger === null || logger === void 0 ? void 0 : logger.error) === null || _b === void 0 ? void 0 : _b.call(logger, 'MultipleFilesMessageItemBody: Error occurred while determining download continuation:', err_1);\n                            return [3 /*break*/, 4];\n                        case 4: return [2 /*return*/];\n                    }\n                });\n            }); } })),\n        React__default.createElement(ImageGrid, { className: className, message: message, isReactionEnabled: isReactionEnabled }, statefulFileInfoList.map(function (fileInfo, index) {\n            var _a, _b, _c, _d;\n            return (React__default.createElement(\"div\", { className: \"sendbird-multiple-files-image-renderer-wrapper\", onClick: message.sendingStatus === SendingStatus.SUCCEEDED ? function () { return setCurrentFileViewerIndex(index); } : undefined, key: \"sendbird-multiple-files-image-renderer-\".concat(index, \"-\").concat(fileInfo.url) },\n                React__default.createElement(ImageRenderer, { url: (_d = (_c = (_b = (_a = fileInfo.thumbnails) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.url) !== null && _c !== void 0 ? _c : fileInfo.url) !== null && _d !== void 0 ? _d : '', fixedSize: false, width: MULTIPLE_FILES_IMAGE_SIDE_LENGTH[threadMessageKindKey], maxSideLength: MULTIPLE_FILES_IMAGE_SIDE_LENGTH.CHAT_WEB, height: MULTIPLE_FILES_IMAGE_SIDE_LENGTH[threadMessageKindKey], borderRadius: getBorderRadiusForMultipleImageRenderer(MULTIPLE_FILES_IMAGE_BORDER_RADIUS[threadMessageKindKey], index, statefulFileInfoList.length), shadeOnHover: true, isUploaded: !!fileInfo.isUploaded, placeHolder: function (_a) {\n                        var style = _a.style;\n                        if (fileInfo.mimeType && isGif(fileInfo.mimeType))\n                            return React__default.createElement(ImagePlaceholder.GIF, { style: style });\n                        return React__default.createElement(ImagePlaceholder.Default, { style: style });\n                    }, defaultComponent: React__default.createElement(ImagePlaceholder.LoadError, null) })));\n        })))) : React__default.createElement(React__default.Fragment, null));\n}\nvar ImagePlaceholder = {\n    Default: function (_a) {\n        var style = _a.style;\n        return (React__default.createElement(\"div\", { className: \"sendbird-multiple-files-image-renderer__thumbnail__placeholder\", style: style },\n            React__default.createElement(Icon, { type: IconTypes.PHOTO, fillColor: IconColors.ON_BACKGROUND_2, width: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH, height: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH })));\n    },\n    GIF: function (_a) {\n        var style = _a.style;\n        return (React__default.createElement(\"div\", { className: \"sendbird-multiple-files-image-renderer__thumbnail__placeholder\", style: style },\n            React__default.createElement(\"div\", { className: \"sendbird-multiple-files-image-renderer__thumbnail__placeholder__icon\" },\n                React__default.createElement(Icon, { type: IconTypes.GIF, fillColor: IconColors.THUMBNAIL_ICON, width: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH, height: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH }))));\n    },\n    LoadError: function () { return (React__default.createElement(\"div\", { className: \"sendbird-multiple-files-image-renderer__thumbnail__placeholder\" },\n        React__default.createElement(Icon, { type: IconTypes.THUMBNAIL_NONE, fillColor: IconColors.ON_BACKGROUND_2, width: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH, height: MULTIPLE_FILES_IMAGE_THUMBNAIL_SIDE_LENGTH }))); },\n};\n\nfunction useThreadMessageKindKeySelector(_a) {\n    var threadMessageKind = _a.threadMessageKind, isMobile = _a.isMobile;\n    var threadMessageKindKey = useMemo(function () {\n        return K(threadMessageKind)\n            .with(ThreadMessageKind.PARENT, function () { return (isMobile\n            ? 'THREAD_PARENT_MOBILE'\n            : 'THREAD_PARENT_WEB'); })\n            .with(ThreadMessageKind.CHILD, function () { return (isMobile\n            ? 'THREAD_CHILD_MOBILE'\n            : 'THREAD_CHILD_WEB'); })\n            .otherwise(function () { return (isMobile\n            ? 'CHAT_MOBILE'\n            : 'CHAT_WEB'); });\n    }, [isMobile, threadMessageKind]);\n    return threadMessageKindKey;\n}\n\n// SendingStatus.SCHEDULED is currently not covered in UIKit\n//  So we can ignore for now, but for future, it is better to explicitly use PENDING, FAILED, or CANCELED.\nvar useFileInfoListWithUploaded = function (message) {\n    var _a, _b;\n    var blobHandler = useRef(new Map());\n    var getObjectURL = function (index, blob) {\n        if (!blobHandler.current.has(index) && blob)\n            blobHandler.current.set(index, URL.createObjectURL(blob));\n        return blobHandler.current.get(index);\n    };\n    var revokeURLs = function () {\n        if (blobHandler.current.size > 0) {\n            blobHandler.current.forEach(function (url) { return URL.revokeObjectURL(url); });\n            blobHandler.current.clear();\n        }\n    };\n    useEffect(function () {\n        return function () { return revokeURLs(); };\n    }, []);\n    if (!message || !message.isMultipleFilesMessage || !message.isMultipleFilesMessage()) {\n        return [];\n    }\n    else if (message.sendingStatus === SendingStatus.SUCCEEDED) {\n        revokeURLs();\n        return message.fileInfoList.map(function (it) {\n            var _a, _b;\n            return (__assign(__assign({}, it), { url: it.url, isUploaded: true, mimeType: (_a = it.mimeType) !== null && _a !== void 0 ? _a : undefined, fileName: (_b = it.fileName) !== null && _b !== void 0 ? _b : undefined }));\n        });\n    }\n    else {\n        return (_b = (_a = message === null || message === void 0 ? void 0 : message.messageParams) === null || _a === void 0 ? void 0 : _a.fileInfoList.map(function (it, index) {\n            var _a, _b;\n            return (__assign(__assign({}, it), { url: (_b = (_a = getObjectURL(index)) !== null && _a !== void 0 ? _a : it.fileUrl) !== null && _b !== void 0 ? _b : (it.file instanceof Blob ? getObjectURL(index, it.file) : undefined), isUploaded: !it.file && typeof it.fileUrl === 'string' && it.fileUrl.length > 0 }));\n        })) !== null && _b !== void 0 ? _b : [];\n    }\n};\n\nexport { MultipleFilesMessageItemBody as M, ThreadMessageKind as T, useFileInfoListWithUploaded as a, useThreadMessageKindKeySelector as u };\n//# sourceMappingURL=bundle-ZVq6xGXk.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}