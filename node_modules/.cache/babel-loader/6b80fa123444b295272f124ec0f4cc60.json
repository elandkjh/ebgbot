{"ast":null,"code":"import { useCallback, useRef } from 'react';\n/**\n * Preserves a reference to the given callback function as an argument while the component is mounted.\n * Wraps the given callback in React's Ref to preserve the reference.\n * @param callback want to be preserved\n */\nexport function usePreservedCallback(callback) {\n  const callbackRef = useRef(callback);\n  callbackRef.current = callback;\n  // useEffect(() => {\n  //   callbackRef.current = callback;\n  // });\n  return useCallback(function () {\n    return callbackRef.current(...arguments);\n  }, [callbackRef]);\n}","map":{"version":3,"names":["useCallback","useRef","usePreservedCallback","callback","callbackRef","current","arguments"],"sources":["D:/ebgbot/node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/hooks/usePreservedCallback.js"],"sourcesContent":["import { useCallback, useRef } from 'react';\n/**\n * Preserves a reference to the given callback function as an argument while the component is mounted.\n * Wraps the given callback in React's Ref to preserve the reference.\n * @param callback want to be preserved\n */\nexport function usePreservedCallback(callback) {\n    const callbackRef = useRef(callback);\n    callbackRef.current = callback;\n    // useEffect(() => {\n    //   callbackRef.current = callback;\n    // });\n    return useCallback((...args) => callbackRef.current(...args), [callbackRef]);\n}\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,MAAM,QAAQ,OAAO;AAC3C;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,oBAAoBA,CAACC,QAAQ,EAAE;EAC3C,MAAMC,WAAW,GAAGH,MAAM,CAACE,QAAQ,CAAC;EACpCC,WAAW,CAACC,OAAO,GAAGF,QAAQ;EAC9B;EACA;EACA;EACA,OAAOH,WAAW,CAAC;IAAA,OAAaI,WAAW,CAACC,OAAO,CAAC,GAAAC,SAAO,CAAC;EAAA,GAAE,CAACF,WAAW,CAAC,CAAC;AAChF","ignoreList":[]},"metadata":{},"sourceType":"module"}