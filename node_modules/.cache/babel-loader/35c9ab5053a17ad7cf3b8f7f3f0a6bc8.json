{"ast":null,"code":"import React__default, { useContext } from 'react';\nimport { useSendbirdStateContext } from '../../useSendbirdStateContext.js';\nimport { useOpenChannelSettingsContext } from '../context.js';\nimport { L as LocalizationContext } from '../../chunks/bundle-cQZ3UZoG.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../../chunks/bundle-DhKQeIfP.js';\nimport Icon, { IconTypes } from '../../ui/Icon.js';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder.js';\nimport { OperatorUI } from './OperatorUI.js';\nimport { P as ParticipantList } from '../../chunks/bundle-B4KMvElm.js';\nimport '../../withSendbird.js';\nimport '../../chunks/bundle-BQi9-O76.js';\nimport '@sendbird/chat/openChannel';\nimport '../../chunks/bundle-BrTJ5Zbd.js';\nimport '../../chunks/bundle-etuaqevl.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\nimport '../../chunks/bundle-BgwzpLeQ.js';\nimport '../../ui/Loader.js';\nimport './OpenChannelProfile.js';\nimport '../../ui/TextButton.js';\nimport '../../chunks/bundle-rA4afvKU.js';\nimport '../../ui/OpenChannelAvatar.js';\nimport '../../chunks/bundle-CFosTNce.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../chunks/bundle-DXRRGizV.js';\nimport '../../chunks/bundle-GMlM2rlV.js';\nimport './EditDetailsModal.js';\nimport '../../chunks/bundle-b6TpX_JP.js';\nimport '../../chunks/bundle-CXdo2kR_.js';\nimport '../../chunks/bundle-DxTN4_0p.js';\nimport '@sendbird/chat/groupChannel';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../chunks/bundle-CNWAfTVw.js';\nimport '../../chunks/bundle-CA85nVxp.js';\nimport 'react-dom';\nimport '../../chunks/bundle-f-SpnOx2.js';\nimport '../../ui/IconButton.js';\nimport '../../ui/Button.js';\nimport '@sendbird/uikit-tools';\nimport 'css-vars-ponyfill';\nimport '@sendbird/chat';\nimport '../../chunks/bundle-DDeWOERD.js';\nimport '../../chunks/bundle-DCMGp6rH.js';\nimport '../../chunks/bundle-CwKZj-B6.js';\nimport '../../ui/SortByRow.js';\nimport '../../ui/Input.js';\nimport '../../ui/Accordion.js';\nimport '../../ui/AccordionGroup.js';\nimport '../../ui/UserListItem.js';\nimport '../../ui/MutedAvatarOverlay.js';\nimport '../../ui/Checkbox.js';\nimport '../../ui/UserProfile.js';\nimport '../../sendbirdSelectors.js';\nfunction InvalidChannel(_a) {\n  var onCloseClick = _a.onCloseClick;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  return React__default.createElement(\"div\", {\n    className: \"sendbird-openchannel-settings\"\n  }, React__default.createElement(\"div\", {\n    className: \"sendbird-openchannel-settings__header\"\n  }, React__default.createElement(Label, {\n    type: LabelTypography.H_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.CHANNEL_SETTING__HEADER__TITLE), React__default.createElement(Icon, {\n    type: IconTypes.CLOSE,\n    className: \"sendbird-openchannel-settings__close-icon\",\n    height: \"24px\",\n    width: \"24px\",\n    onClick: function () {\n      onCloseClick === null || onCloseClick === void 0 ? void 0 : onCloseClick();\n    }\n  })), React__default.createElement(\"div\", {\n    className: \"sendbird-openchannel-settings__placeholder\"\n  }, React__default.createElement(PlaceHolder, {\n    type: PlaceHolderTypes.WRONG\n  })));\n}\nvar OpenChannelUI = function (_a) {\n  var _b, _c, _d;\n  var renderOperatorUI = _a.renderOperatorUI,\n    renderParticipantList = _a.renderParticipantList;\n  var _e = useOpenChannelSettingsContext(),\n    channel = _e.channel,\n    onCloseClick = _e.onCloseClick,\n    isChannelInitialized = _e.isChannelInitialized;\n  var globalStore = useSendbirdStateContext();\n  var logger = (_b = globalStore === null || globalStore === void 0 ? void 0 : globalStore.config) === null || _b === void 0 ? void 0 : _b.logger;\n  var user = (_d = (_c = globalStore === null || globalStore === void 0 ? void 0 : globalStore.stores) === null || _c === void 0 ? void 0 : _c.userStore) === null || _d === void 0 ? void 0 : _d.user;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  if (isChannelInitialized && !channel) {\n    return React__default.createElement(InvalidChannel, {\n      onCloseClick: function () {\n        logger.info('OpenChannelSettings: Click close');\n        if (onCloseClick) {\n          onCloseClick();\n        }\n      }\n    });\n  }\n  return React__default.createElement(\"div\", {\n    className: 'sendbird-openchannel-settings'\n  }, (channel === null || channel === void 0 ? void 0 : channel.isOperator(user)) && ((renderOperatorUI === null || renderOperatorUI === void 0 ? void 0 : renderOperatorUI()) || React__default.createElement(OperatorUI, null)), !(channel === null || channel === void 0 ? void 0 : channel.isOperator(user)) && React__default.createElement(\"div\", {\n    className: \"sendbird-openchannel-settings__participant\"\n  }, React__default.createElement(\"div\", {\n    className: \"sendbird-openchannel-settings__header\"\n  }, React__default.createElement(Label, {\n    type: LabelTypography.H_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.OPEN_CHANNEL_SETTINGS__PARTICIPANTS_TITLE), React__default.createElement(Icon, {\n    type: IconTypes.CLOSE,\n    className: \"sendbird-openchannel-settings__close-icon\",\n    height: \"24px\",\n    width: \"24px\",\n    onClick: function () {\n      onCloseClick === null || onCloseClick === void 0 ? void 0 : onCloseClick();\n    }\n  })), (renderParticipantList === null || renderParticipantList === void 0 ? void 0 : renderParticipantList()) || React__default.createElement(ParticipantList, null)));\n};\nexport { OpenChannelUI as default };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import React__default, { useContext } from 'react';\nimport { useSendbirdStateContext } from '../../useSendbirdStateContext.js';\nimport { useOpenChannelSettingsContext } from '../context.js';\nimport { L as LocalizationContext } from '../../chunks/bundle-cQZ3UZoG.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../../chunks/bundle-DhKQeIfP.js';\nimport Icon, { IconTypes } from '../../ui/Icon.js';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder.js';\nimport { OperatorUI } from './OperatorUI.js';\nimport { P as ParticipantList } from '../../chunks/bundle-B4KMvElm.js';\nimport '../../withSendbird.js';\nimport '../../chunks/bundle-BQi9-O76.js';\nimport '@sendbird/chat/openChannel';\nimport '../../chunks/bundle-BrTJ5Zbd.js';\nimport '../../chunks/bundle-etuaqevl.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\nimport '../../chunks/bundle-BgwzpLeQ.js';\nimport '../../ui/Loader.js';\nimport './OpenChannelProfile.js';\nimport '../../ui/TextButton.js';\nimport '../../chunks/bundle-rA4afvKU.js';\nimport '../../ui/OpenChannelAvatar.js';\nimport '../../chunks/bundle-CFosTNce.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../chunks/bundle-DXRRGizV.js';\nimport '../../chunks/bundle-GMlM2rlV.js';\nimport './EditDetailsModal.js';\nimport '../../chunks/bundle-b6TpX_JP.js';\nimport '../../chunks/bundle-CXdo2kR_.js';\nimport '../../chunks/bundle-DxTN4_0p.js';\nimport '@sendbird/chat/groupChannel';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../chunks/bundle-CNWAfTVw.js';\nimport '../../chunks/bundle-CA85nVxp.js';\nimport 'react-dom';\nimport '../../chunks/bundle-f-SpnOx2.js';\nimport '../../ui/IconButton.js';\nimport '../../ui/Button.js';\nimport '@sendbird/uikit-tools';\nimport 'css-vars-ponyfill';\nimport '@sendbird/chat';\nimport '../../chunks/bundle-DDeWOERD.js';\nimport '../../chunks/bundle-DCMGp6rH.js';\nimport '../../chunks/bundle-CwKZj-B6.js';\nimport '../../ui/SortByRow.js';\nimport '../../ui/Input.js';\nimport '../../ui/Accordion.js';\nimport '../../ui/AccordionGroup.js';\nimport '../../ui/UserListItem.js';\nimport '../../ui/MutedAvatarOverlay.js';\nimport '../../ui/Checkbox.js';\nimport '../../ui/UserProfile.js';\nimport '../../sendbirdSelectors.js';\n\nfunction InvalidChannel(_a) {\n    var onCloseClick = _a.onCloseClick;\n    var stringSet = useContext(LocalizationContext).stringSet;\n    return (React__default.createElement(\"div\", { className: \"sendbird-openchannel-settings\" },\n        React__default.createElement(\"div\", { className: \"sendbird-openchannel-settings__header\" },\n            React__default.createElement(Label, { type: LabelTypography.H_2, color: LabelColors.ONBACKGROUND_1 }, stringSet.CHANNEL_SETTING__HEADER__TITLE),\n            React__default.createElement(Icon, { type: IconTypes.CLOSE, className: \"sendbird-openchannel-settings__close-icon\", height: \"24px\", width: \"24px\", onClick: function () {\n                    onCloseClick === null || onCloseClick === void 0 ? void 0 : onCloseClick();\n                } })),\n        React__default.createElement(\"div\", { className: \"sendbird-openchannel-settings__placeholder\" },\n            React__default.createElement(PlaceHolder, { type: PlaceHolderTypes.WRONG }))));\n}\n\nvar OpenChannelUI = function (_a) {\n    var _b, _c, _d;\n    var renderOperatorUI = _a.renderOperatorUI, renderParticipantList = _a.renderParticipantList;\n    var _e = useOpenChannelSettingsContext(), channel = _e.channel, onCloseClick = _e.onCloseClick, isChannelInitialized = _e.isChannelInitialized;\n    var globalStore = useSendbirdStateContext();\n    var logger = (_b = globalStore === null || globalStore === void 0 ? void 0 : globalStore.config) === null || _b === void 0 ? void 0 : _b.logger;\n    var user = (_d = (_c = globalStore === null || globalStore === void 0 ? void 0 : globalStore.stores) === null || _c === void 0 ? void 0 : _c.userStore) === null || _d === void 0 ? void 0 : _d.user;\n    var stringSet = useContext(LocalizationContext).stringSet;\n    if (isChannelInitialized && !channel) {\n        return (React__default.createElement(InvalidChannel, { onCloseClick: function () {\n                logger.info('OpenChannelSettings: Click close');\n                if (onCloseClick) {\n                    onCloseClick();\n                }\n            } }));\n    }\n    return (React__default.createElement(\"div\", { className: 'sendbird-openchannel-settings' },\n        (channel === null || channel === void 0 ? void 0 : channel.isOperator(user)) && ((renderOperatorUI === null || renderOperatorUI === void 0 ? void 0 : renderOperatorUI()) || (React__default.createElement(OperatorUI, null))),\n        !(channel === null || channel === void 0 ? void 0 : channel.isOperator(user)) && (React__default.createElement(\"div\", { className: \"sendbird-openchannel-settings__participant\" },\n            React__default.createElement(\"div\", { className: \"sendbird-openchannel-settings__header\" },\n                React__default.createElement(Label, { type: LabelTypography.H_2, color: LabelColors.ONBACKGROUND_1 }, stringSet.OPEN_CHANNEL_SETTINGS__PARTICIPANTS_TITLE),\n                React__default.createElement(Icon, { type: IconTypes.CLOSE, className: \"sendbird-openchannel-settings__close-icon\", height: \"24px\", width: \"24px\", onClick: function () {\n                        onCloseClick === null || onCloseClick === void 0 ? void 0 : onCloseClick();\n                    } })),\n            (renderParticipantList === null || renderParticipantList === void 0 ? void 0 : renderParticipantList()) || (React__default.createElement(ParticipantList, null))))));\n};\n\nexport { OpenChannelUI as default };\n//# sourceMappingURL=OpenChannelSettingsUI.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}