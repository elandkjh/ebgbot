{"ast":null,"code":"import { _ as __assign } from '../../chunks/bundle-BQi9-O76.js';\nimport React__default from 'react';\nimport { useSendbirdStateContext } from '../../useSendbirdStateContext.js';\nimport { useChannelContext } from '../context.js';\nimport { g as getSuggestedReplies } from '../../chunks/bundle-DxTN4_0p.js';\nimport { b as isDisabledBecauseFrozen, c as isDisabledBecauseMuted } from '../../chunks/bundle-CMLImr6T.js';\nimport { M as MessageView } from '../../chunks/bundle-Dnj0fmAf.js';\nimport { FileViewer } from './FileViewer.js';\nimport RemoveMessageModal from './RemoveMessageModal.js';\nimport '../../withSendbird.js';\nimport '../../chunks/bundle-BrTJ5Zbd.js';\nimport '../../chunks/bundle-CveCFQYP.js';\nimport '../../chunks/bundle-BNDaXsLn.js';\nimport '../../chunks/bundle-CAdqcqOm.js';\nimport '../../chunks/bundle-CA85nVxp.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\nimport '@sendbird/chat/message';\nimport '../../chunks/bundle-CpjASiz4.js';\nimport '../../chunks/bundle-CZUYMubi.js';\nimport '../../chunks/bundle-chiYJ8F8.js';\nimport '../../chunks/bundle-DCMGp6rH.js';\nimport '@sendbird/chat/groupChannel';\nimport '../../chunks/bundle-etuaqevl.js';\nimport '../../chunks/bundle-H8J7tAed.js';\nimport '../../chunks/bundle-b6TpX_JP.js';\nimport '../../chunks/bundle-y29vL7zu.js';\nimport '../../chunks/bundle-fHeMHhND.js';\nimport '../../chunks/bundle-T6fVCCb7.js';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../chunks/bundle-CNWAfTVw.js';\nimport '../../chunks/bundle-cQZ3UZoG.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../chunks/bundle-C3ktHDOc.js';\nimport '../../Message/hooks/useDirtyGetMentions.js';\nimport '../../ui/DateSeparator.js';\nimport '../../chunks/bundle-rA4afvKU.js';\nimport '../../chunks/bundle-DhKQeIfP.js';\nimport '../../ui/MessageInput.js';\nimport '../../chunks/bundle-0qSTzMXb.js';\nimport '../../ui/IconButton.js';\nimport '../../ui/Button.js';\nimport '../../chunks/bundle-TZQ6dJCG.js';\nimport 'dompurify';\nimport '../../chunks/bundle-0nQK2G2O.js';\nimport '../../chunks/bundle-B6edg1g0.js';\nimport '../../chunks/bundle-DhGZA5UP.js';\nimport '../../ui/Icon.js';\nimport '../../chunks/bundle-BgwzpLeQ.js';\nimport '../../chunks/bundle-GUbI4JcD.js';\nimport '../../ui/MessageContent.js';\nimport '../../chunks/bundle-vuBlPTsL.js';\nimport '../../ui/Loader.js';\nimport '../../chunks/bundle-BHK1eF5R.js';\nimport '../../chunks/bundle-F5koPk19.js';\nimport '../../chunks/bundle-DkBecO3w.js';\nimport '../../chunks/bundle-CwKZj-B6.js';\nimport 'react-dom';\nimport '@sendbird/chat';\nimport '@sendbird/chat/openChannel';\nimport '../../ui/SortByRow.js';\nimport '../../ui/MessageItemReactionMenu.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../ui/ReactionButton.js';\nimport '../../chunks/bundle-AfQS5DGf.js';\nimport '../../chunks/bundle-f-SpnOx2.js';\nimport '../../ui/EmojiReactions.js';\nimport '../../ui/ReactionBadge.js';\nimport '../../ui/BottomSheet.js';\nimport '../../chunks/bundle-CXdo2kR_.js';\nimport '@sendbird/uikit-tools';\nimport 'css-vars-ponyfill';\nimport '../../chunks/bundle-DDeWOERD.js';\nimport '../../ui/UserListItem.js';\nimport '../../chunks/bundle-CFosTNce.js';\nimport '../../chunks/bundle-DXRRGizV.js';\nimport '../../ui/MutedAvatarOverlay.js';\nimport '../../ui/Checkbox.js';\nimport '../../ui/UserProfile.js';\nimport '../../sendbirdSelectors.js';\nimport '../../ui/Tooltip.js';\nimport '../../ui/TooltipWrapper.js';\nimport '../../Message/context.js';\nimport '../../ui/AdminMessage.js';\nimport '../../ui/QuoteMessage.js';\nimport '../../chunks/bundle-BqMHiKkl.js';\nimport '../../ui/MobileMenu.js';\nimport '../../ui/ThreadReplies.js';\nimport '../../ui/OGMessageItemBody.js';\nimport '../../chunks/bundle-DofK8ySe.js';\nimport '../../ui/MentionLabel.js';\nimport '../../ui/LinkLabel.js';\nimport '../../ui/TextMessageItemBody.js';\nimport '../../ui/FileMessageItemBody.js';\nimport '../../ui/TextButton.js';\nimport '../../chunks/bundle-ZVq6xGXk.js';\nimport '../../ui/FileViewer.js';\nimport '../../chunks/bundle-Gdl-rzQC.js';\nimport '../../ui/VoiceMessageItemBody.js';\nimport '../../ui/ProgressBar.js';\nimport '../../VoicePlayer/useVoicePlayer.js';\nimport '../../ui/PlaybackTime.js';\nimport '../../ui/ThumbnailMessageItemBody.js';\nimport '../../ui/UnknownMessageItemBody.js';\nimport '../../ui/TemplateMessageItemBody.js';\nimport '../../chunks/bundle-uLjwqZrR.js';\nimport '../../ui/FallbackTemplateMessageItemBody.tsx.js';\nimport '../../ui/LoadingTemplateMessageItemBody.tsx.js';\nimport '../../ui/FeedbackIconButton.js';\nimport '../../ui/MobileFeedbackMenu.js';\nimport '../../ui/MessageFeedbackModal.js';\nimport '../../ui/Input.js';\nimport '../../ui/MessageFeedbackFailedModal.js';\nimport '../../chunks/bundle-Cf0UgZwi.js';\nimport '../../GroupChannel/components/SuggestedReplies.js';\nimport '../../chunks/bundle-Due9yzp6.js';\nimport '../../chunks/bundle-CqpGyIDR.js';\nimport '../../chunks/bundle-D0TYbkjN.js';\nimport '../../chunks/bundle-Zvm5CMGT.js';\nvar Message = function (props) {\n  var _a, _b, _c;\n  var config = useSendbirdStateContext().config;\n  var _d = useChannelContext(),\n    initialized = _d.initialized,\n    currentGroupChannel = _d.currentGroupChannel,\n    animatedMessageId = _d.animatedMessageId,\n    setAnimatedMessageId = _d.setAnimatedMessageId,\n    updateMessage = _d.updateMessage,\n    scrollToMessage = _d.scrollToMessage,\n    replyType = _d.replyType,\n    threadReplySelectType = _d.threadReplySelectType,\n    isReactionEnabled = _d.isReactionEnabled,\n    toggleReaction = _d.toggleReaction,\n    emojiContainer = _d.emojiContainer,\n    nicknamesMap = _d.nicknamesMap,\n    setQuoteMessage = _d.setQuoteMessage,\n    resendMessage = _d.resendMessage,\n    deleteMessage = _d.deleteMessage,\n    renderUserMentionItem = _d.renderUserMentionItem,\n    onReplyInThread = _d.onReplyInThread,\n    onQuoteMessageClick = _d.onQuoteMessageClick,\n    onMessageAnimated = _d.onMessageAnimated,\n    sendMessage = _d.sendMessage,\n    localMessages = _d.localMessages;\n  var message = props.message;\n  if (!currentGroupChannel) return null;\n  return React__default.createElement(MessageView, __assign({}, props, {\n    channel: currentGroupChannel,\n    emojiContainer: emojiContainer,\n    editInputDisabled: !initialized || isDisabledBecauseFrozen(currentGroupChannel) || isDisabledBecauseMuted(currentGroupChannel) || !config.isOnline,\n    shouldRenderSuggestedReplies: ((_a = config === null || config === void 0 ? void 0 : config.groupChannel) === null || _a === void 0 ? void 0 : _a.enableSuggestedReplies) && (((_b = config === null || config === void 0 ? void 0 : config.groupChannel) === null || _b === void 0 ? void 0 : _b.showSuggestedRepliesFor) === 'all_messages' ? true : message.messageId === ((_c = currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.lastMessage) === null || _c === void 0 ? void 0 : _c.messageId))\n    // the options should appear only when there's no failed or pending messages\n    && (localMessages === null || localMessages === void 0 ? void 0 : localMessages.length) === 0 && getSuggestedReplies(message).length > 0,\n    isReactionEnabled: isReactionEnabled,\n    replyType: replyType,\n    threadReplySelectType: threadReplySelectType,\n    nicknamesMap: nicknamesMap,\n    renderUserMentionItem: renderUserMentionItem,\n    scrollToMessage: scrollToMessage,\n    toggleReaction: toggleReaction,\n    setQuoteMessage: setQuoteMessage,\n    onQuoteMessageClick: onQuoteMessageClick,\n    onReplyInThreadClick: onReplyInThread,\n    sendUserMessage: function (params) {\n      sendMessage({\n        message: params.message,\n        mentionedUsers: params.mentionedUsers,\n        mentionTemplate: params.mentionedMessageTemplate\n      });\n    },\n    updateUserMessage: function (messageId, params) {\n      var _a;\n      updateMessage({\n        messageId: messageId,\n        message: (_a = params.message) !== null && _a !== void 0 ? _a : '',\n        mentionedUsers: params.mentionedUsers,\n        mentionTemplate: params.mentionedMessageTemplate\n      });\n    },\n    resendMessage: resendMessage,\n    deleteMessage: deleteMessage,\n    animatedMessageId: animatedMessageId,\n    setAnimatedMessageId: setAnimatedMessageId,\n    onMessageAnimated: onMessageAnimated,\n    renderFileViewer: function (props) {\n      return React__default.createElement(FileViewer, __assign({}, props));\n    },\n    renderRemoveMessageModal: function (props) {\n      return React__default.createElement(RemoveMessageModal, __assign({}, props));\n    }\n  }));\n};\nexport { Message as default };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import { _ as __assign } from '../../chunks/bundle-BQi9-O76.js';\nimport React__default from 'react';\nimport { useSendbirdStateContext } from '../../useSendbirdStateContext.js';\nimport { useChannelContext } from '../context.js';\nimport { g as getSuggestedReplies } from '../../chunks/bundle-DxTN4_0p.js';\nimport { b as isDisabledBecauseFrozen, c as isDisabledBecauseMuted } from '../../chunks/bundle-CMLImr6T.js';\nimport { M as MessageView } from '../../chunks/bundle-Dnj0fmAf.js';\nimport { FileViewer } from './FileViewer.js';\nimport RemoveMessageModal from './RemoveMessageModal.js';\nimport '../../withSendbird.js';\nimport '../../chunks/bundle-BrTJ5Zbd.js';\nimport '../../chunks/bundle-CveCFQYP.js';\nimport '../../chunks/bundle-BNDaXsLn.js';\nimport '../../chunks/bundle-CAdqcqOm.js';\nimport '../../chunks/bundle-CA85nVxp.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\nimport '@sendbird/chat/message';\nimport '../../chunks/bundle-CpjASiz4.js';\nimport '../../chunks/bundle-CZUYMubi.js';\nimport '../../chunks/bundle-chiYJ8F8.js';\nimport '../../chunks/bundle-DCMGp6rH.js';\nimport '@sendbird/chat/groupChannel';\nimport '../../chunks/bundle-etuaqevl.js';\nimport '../../chunks/bundle-H8J7tAed.js';\nimport '../../chunks/bundle-b6TpX_JP.js';\nimport '../../chunks/bundle-y29vL7zu.js';\nimport '../../chunks/bundle-fHeMHhND.js';\nimport '../../chunks/bundle-T6fVCCb7.js';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../chunks/bundle-CNWAfTVw.js';\nimport '../../chunks/bundle-cQZ3UZoG.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../chunks/bundle-C3ktHDOc.js';\nimport '../../Message/hooks/useDirtyGetMentions.js';\nimport '../../ui/DateSeparator.js';\nimport '../../chunks/bundle-rA4afvKU.js';\nimport '../../chunks/bundle-DhKQeIfP.js';\nimport '../../ui/MessageInput.js';\nimport '../../chunks/bundle-0qSTzMXb.js';\nimport '../../ui/IconButton.js';\nimport '../../ui/Button.js';\nimport '../../chunks/bundle-TZQ6dJCG.js';\nimport 'dompurify';\nimport '../../chunks/bundle-0nQK2G2O.js';\nimport '../../chunks/bundle-B6edg1g0.js';\nimport '../../chunks/bundle-DhGZA5UP.js';\nimport '../../ui/Icon.js';\nimport '../../chunks/bundle-BgwzpLeQ.js';\nimport '../../chunks/bundle-GUbI4JcD.js';\nimport '../../ui/MessageContent.js';\nimport '../../chunks/bundle-vuBlPTsL.js';\nimport '../../ui/Loader.js';\nimport '../../chunks/bundle-BHK1eF5R.js';\nimport '../../chunks/bundle-F5koPk19.js';\nimport '../../chunks/bundle-DkBecO3w.js';\nimport '../../chunks/bundle-CwKZj-B6.js';\nimport 'react-dom';\nimport '@sendbird/chat';\nimport '@sendbird/chat/openChannel';\nimport '../../ui/SortByRow.js';\nimport '../../ui/MessageItemReactionMenu.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../ui/ReactionButton.js';\nimport '../../chunks/bundle-AfQS5DGf.js';\nimport '../../chunks/bundle-f-SpnOx2.js';\nimport '../../ui/EmojiReactions.js';\nimport '../../ui/ReactionBadge.js';\nimport '../../ui/BottomSheet.js';\nimport '../../chunks/bundle-CXdo2kR_.js';\nimport '@sendbird/uikit-tools';\nimport 'css-vars-ponyfill';\nimport '../../chunks/bundle-DDeWOERD.js';\nimport '../../ui/UserListItem.js';\nimport '../../chunks/bundle-CFosTNce.js';\nimport '../../chunks/bundle-DXRRGizV.js';\nimport '../../ui/MutedAvatarOverlay.js';\nimport '../../ui/Checkbox.js';\nimport '../../ui/UserProfile.js';\nimport '../../sendbirdSelectors.js';\nimport '../../ui/Tooltip.js';\nimport '../../ui/TooltipWrapper.js';\nimport '../../Message/context.js';\nimport '../../ui/AdminMessage.js';\nimport '../../ui/QuoteMessage.js';\nimport '../../chunks/bundle-BqMHiKkl.js';\nimport '../../ui/MobileMenu.js';\nimport '../../ui/ThreadReplies.js';\nimport '../../ui/OGMessageItemBody.js';\nimport '../../chunks/bundle-DofK8ySe.js';\nimport '../../ui/MentionLabel.js';\nimport '../../ui/LinkLabel.js';\nimport '../../ui/TextMessageItemBody.js';\nimport '../../ui/FileMessageItemBody.js';\nimport '../../ui/TextButton.js';\nimport '../../chunks/bundle-ZVq6xGXk.js';\nimport '../../ui/FileViewer.js';\nimport '../../chunks/bundle-Gdl-rzQC.js';\nimport '../../ui/VoiceMessageItemBody.js';\nimport '../../ui/ProgressBar.js';\nimport '../../VoicePlayer/useVoicePlayer.js';\nimport '../../ui/PlaybackTime.js';\nimport '../../ui/ThumbnailMessageItemBody.js';\nimport '../../ui/UnknownMessageItemBody.js';\nimport '../../ui/TemplateMessageItemBody.js';\nimport '../../chunks/bundle-uLjwqZrR.js';\nimport '../../ui/FallbackTemplateMessageItemBody.tsx.js';\nimport '../../ui/LoadingTemplateMessageItemBody.tsx.js';\nimport '../../ui/FeedbackIconButton.js';\nimport '../../ui/MobileFeedbackMenu.js';\nimport '../../ui/MessageFeedbackModal.js';\nimport '../../ui/Input.js';\nimport '../../ui/MessageFeedbackFailedModal.js';\nimport '../../chunks/bundle-Cf0UgZwi.js';\nimport '../../GroupChannel/components/SuggestedReplies.js';\nimport '../../chunks/bundle-Due9yzp6.js';\nimport '../../chunks/bundle-CqpGyIDR.js';\nimport '../../chunks/bundle-D0TYbkjN.js';\nimport '../../chunks/bundle-Zvm5CMGT.js';\n\nvar Message = function (props) {\n    var _a, _b, _c;\n    var config = useSendbirdStateContext().config;\n    var _d = useChannelContext(), initialized = _d.initialized, currentGroupChannel = _d.currentGroupChannel, animatedMessageId = _d.animatedMessageId, setAnimatedMessageId = _d.setAnimatedMessageId, updateMessage = _d.updateMessage, scrollToMessage = _d.scrollToMessage, replyType = _d.replyType, threadReplySelectType = _d.threadReplySelectType, isReactionEnabled = _d.isReactionEnabled, toggleReaction = _d.toggleReaction, emojiContainer = _d.emojiContainer, nicknamesMap = _d.nicknamesMap, setQuoteMessage = _d.setQuoteMessage, resendMessage = _d.resendMessage, deleteMessage = _d.deleteMessage, renderUserMentionItem = _d.renderUserMentionItem, onReplyInThread = _d.onReplyInThread, onQuoteMessageClick = _d.onQuoteMessageClick, onMessageAnimated = _d.onMessageAnimated, sendMessage = _d.sendMessage, localMessages = _d.localMessages;\n    var message = props.message;\n    if (!currentGroupChannel)\n        return null;\n    return (React__default.createElement(MessageView, __assign({}, props, { channel: currentGroupChannel, emojiContainer: emojiContainer, editInputDisabled: !initialized || isDisabledBecauseFrozen(currentGroupChannel) || isDisabledBecauseMuted(currentGroupChannel) || !config.isOnline, shouldRenderSuggestedReplies: ((_a = config === null || config === void 0 ? void 0 : config.groupChannel) === null || _a === void 0 ? void 0 : _a.enableSuggestedReplies)\n            && (((_b = config === null || config === void 0 ? void 0 : config.groupChannel) === null || _b === void 0 ? void 0 : _b.showSuggestedRepliesFor) === 'all_messages'\n                ? true\n                : message.messageId === ((_c = currentGroupChannel === null || currentGroupChannel === void 0 ? void 0 : currentGroupChannel.lastMessage) === null || _c === void 0 ? void 0 : _c.messageId))\n            // the options should appear only when there's no failed or pending messages\n            && (localMessages === null || localMessages === void 0 ? void 0 : localMessages.length) === 0\n            && getSuggestedReplies(message).length > 0, isReactionEnabled: isReactionEnabled, replyType: replyType, threadReplySelectType: threadReplySelectType, nicknamesMap: nicknamesMap, renderUserMentionItem: renderUserMentionItem, scrollToMessage: scrollToMessage, toggleReaction: toggleReaction, setQuoteMessage: setQuoteMessage, onQuoteMessageClick: onQuoteMessageClick, onReplyInThreadClick: onReplyInThread, sendUserMessage: function (params) {\n            sendMessage({\n                message: params.message,\n                mentionedUsers: params.mentionedUsers,\n                mentionTemplate: params.mentionedMessageTemplate,\n            });\n        }, updateUserMessage: function (messageId, params) {\n            var _a;\n            updateMessage({\n                messageId: messageId,\n                message: (_a = params.message) !== null && _a !== void 0 ? _a : '',\n                mentionedUsers: params.mentionedUsers,\n                mentionTemplate: params.mentionedMessageTemplate,\n            });\n        }, resendMessage: resendMessage, deleteMessage: deleteMessage, animatedMessageId: animatedMessageId, setAnimatedMessageId: setAnimatedMessageId, onMessageAnimated: onMessageAnimated, renderFileViewer: function (props) { return React__default.createElement(FileViewer, __assign({}, props)); }, renderRemoveMessageModal: function (props) { return React__default.createElement(RemoveMessageModal, __assign({}, props)); } })));\n};\n\nexport { Message as default };\n//# sourceMappingURL=Message.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}