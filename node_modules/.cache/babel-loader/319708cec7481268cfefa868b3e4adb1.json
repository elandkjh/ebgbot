{"ast":null,"code":"import { _ as __assign, a as __awaiter, b as __generator, c as __spreadArray } from './bundle-BQi9-O76.js';\nimport React__default, { useState, useContext, useEffect, useCallback } from 'react';\nimport { L as LocalizationContext, u as useLocalization } from './bundle-cQZ3UZoG.js';\nimport { useChannelSettingsContext } from '../ChannelSettings/context.js';\nimport Button, { ButtonTypes, ButtonSizes } from '../ui/Button.js';\nimport { U as UserListItemMenu } from './bundle-BjjAXlnY.js';\nimport { UserListItem } from '../ui/UserListItem.js';\nimport { M as Modal } from './bundle-CXdo2kR_.js';\nimport { u as useOnScrollPositionChangeDetector } from './bundle-DvsVgg5f.js';\nimport { L as Label, b as LabelColors, a as LabelTypography } from './bundle-DhKQeIfP.js';\nimport { OperatorFilter } from '@sendbird/chat/groupChannel';\nimport { n as noop } from './bundle-BgwzpLeQ.js';\nfunction OperatorsModal(_a) {\n  var _this = this;\n  var onCancel = _a.onCancel,\n    _b = _a.renderUserListItem,\n    renderUserListItem = _b === void 0 ? function (props) {\n      return React__default.createElement(UserListItem, __assign({}, props));\n    } : _b,\n    _c = _a.operatorListQueryParams,\n    operatorListQueryParams = _c === void 0 ? {} : _c;\n  var _d = useState([]),\n    operators = _d[0],\n    setOperators = _d[1];\n  var _e = useState(null),\n    operatorQuery = _e[0],\n    setOperatorQuery = _e[1];\n  var channel = useChannelSettingsContext().channel;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  useEffect(function () {\n    var operatorListQuery = channel === null || channel === void 0 ? void 0 : channel.createOperatorListQuery(__assign({\n      limit: 20\n    }, operatorListQueryParams));\n    operatorListQuery === null || operatorListQuery === void 0 ? void 0 : operatorListQuery.next().then(function (operators) {\n      setOperators(operators);\n    });\n    setOperatorQuery(operatorListQuery !== null && operatorListQuery !== void 0 ? operatorListQuery : null);\n  }, []);\n  return React__default.createElement(\"div\", null, React__default.createElement(Modal, {\n    isFullScreenOnMobile: true,\n    hideFooter: true,\n    titleText: stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL,\n    onCancel: onCancel\n  }, React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: useOnScrollPositionChangeDetector({\n      onReachedBottom: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            if (operatorQuery && operatorQuery.hasNext) {\n              operatorQuery.next().then(function (o) {\n                setOperators(__spreadArray(__spreadArray([], operators, true), o, true));\n              });\n            }\n            return [2 /*return*/];\n          });\n        });\n      }\n    })\n  }, operators.map(function (member) {\n    return React__default.createElement(React__default.Fragment, {\n      key: member.userId\n    }, renderUserListItem({\n      user: member,\n      channel: channel,\n      renderListItemMenu: function (props) {\n        return React__default.createElement(UserListItemMenu, __assign({}, props, {\n          isOperator: true,\n          onToggleOperatorState: function (_a) {\n            var user = _a.user;\n            setOperators(operators.filter(function (_a) {\n              var userId = _a.userId;\n              return userId !== user.userId;\n            }));\n          },\n          renderMenuItems: function (_a) {\n            var items = _a.items;\n            return React__default.createElement(items.OperatorToggleMenuItem, null);\n          }\n        }));\n      }\n    }));\n  }))));\n}\nfunction AddOperatorsModal(_a) {\n  var _this = this;\n  var onCancel = _a.onCancel,\n    onSubmit = _a.onSubmit,\n    _b = _a.renderUserListItem,\n    renderUserListItem = _b === void 0 ? function (props) {\n      return React__default.createElement(UserListItem, __assign({}, props));\n    } : _b;\n  var _c = useState([]),\n    members = _c[0],\n    setMembers = _c[1];\n  var _d = useState({}),\n    selectedMembers = _d[0],\n    setSelectedMembers = _d[1];\n  var _e = useState(null),\n    memberQuery = _e[0],\n    setMemberQuery = _e[1];\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var channel = useChannelSettingsContext().channel;\n  useEffect(function () {\n    var memberListQuery = channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery({\n      operatorFilter: OperatorFilter.NONOPERATOR,\n      limit: 20\n    });\n    memberListQuery === null || memberListQuery === void 0 ? void 0 : memberListQuery.next().then(function (members) {\n      setMembers(members);\n    });\n    setMemberQuery(memberListQuery !== null && memberListQuery !== void 0 ? memberListQuery : null);\n  }, []);\n  var selectedCount = Object.keys(selectedMembers).filter(function (m) {\n    return selectedMembers[m];\n  }).length;\n  return React__default.createElement(\"div\", null, React__default.createElement(Modal, {\n    isFullScreenOnMobile: true,\n    type: ButtonTypes.PRIMARY,\n    submitText: stringSet.CHANNEL_SETTING__OPERATORS__ADD_BUTTON,\n    onCancel: onCancel,\n    onSubmit: function () {\n      var members = Object.keys(selectedMembers).filter(function (m) {\n        return selectedMembers[m];\n      });\n      channel === null || channel === void 0 ? void 0 : channel.addOperators(members).then(function () {\n        onSubmit(members);\n      });\n    },\n    titleText: stringSet.CHANNEL_SETTING__MEMBERS__SELECT_TITLE\n  }, React__default.createElement(Label, {\n    color: selectedCount > 0 ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3,\n    type: LabelTypography.CAPTION_1\n  }, \"\".concat(selectedCount, \" \").concat(stringSet.MODAL__INVITE_MEMBER__SELECTED)), React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: useOnScrollPositionChangeDetector({\n      onReachedBottom: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var hasNext;\n          return __generator(this, function (_a) {\n            hasNext = memberQuery.hasNext;\n            if (hasNext) {\n              memberQuery.next().then(function (o) {\n                setMembers(__spreadArray(__spreadArray([], members, true), o, true));\n              });\n            }\n            return [2 /*return*/];\n          });\n        });\n      }\n    })\n  }, members.map(function (member) {\n    return React__default.createElement(React__default.Fragment, {\n      key: member.userId\n    }, renderUserListItem({\n      user: member,\n      checkBox: true,\n      checked: selectedMembers[member.userId],\n      disabled: (member === null || member === void 0 ? void 0 : member.role) === 'operator',\n      onChange: function (event) {\n        var _a;\n        var modifiedSelectedMembers = __assign(__assign({}, selectedMembers), (_a = {}, _a[event.target.id] = event.target.checked, _a));\n        if (!event.target.checked) {\n          delete modifiedSelectedMembers[event.target.id];\n        }\n        setSelectedMembers(modifiedSelectedMembers);\n      }\n    }));\n  }))));\n}\nvar OperatorList = function (_a) {\n  var _b = _a.renderUserListItem,\n    renderUserListItem = _b === void 0 ? function (props) {\n      return React__default.createElement(UserListItem, __assign({}, props));\n    } : _b,\n    _c = _a.operatorListQueryParams,\n    operatorListQueryParams = _c === void 0 ? {} : _c;\n  var _d = useState([]),\n    operators = _d[0],\n    setOperators = _d[1];\n  var _e = useState(false),\n    showMore = _e[0],\n    setShowMore = _e[1];\n  var _f = useState(false),\n    showAdd = _f[0],\n    setShowAdd = _f[1];\n  var _g = useState(false),\n    hasNext = _g[0],\n    setHasNext = _g[1];\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var channel = useChannelSettingsContext().channel;\n  var refreshList = useCallback(function () {\n    if (!channel) {\n      setOperators([]);\n      return;\n    }\n    var operatorListQuery = channel === null || channel === void 0 ? void 0 : channel.createOperatorListQuery(__assign({\n      limit: 10\n    }, operatorListQueryParams));\n    operatorListQuery.next().then(function (operators) {\n      setOperators(operators);\n      setHasNext(operatorListQuery.hasNext);\n    });\n  }, [channel === null || channel === void 0 ? void 0 : channel.url, channel === null || channel === void 0 ? void 0 : channel.createOperatorListQuery]);\n  useEffect(refreshList, [channel === null || channel === void 0 ? void 0 : channel.url]);\n  return React__default.createElement(React__default.Fragment, null, operators.map(function (operator) {\n    return React__default.createElement(React__default.Fragment, {\n      key: operator.userId\n    }, renderUserListItem({\n      user: operator,\n      channel: channel,\n      size: 'small',\n      avatarSize: '24px',\n      renderListItemMenu: function (props) {\n        return React__default.createElement(UserListItemMenu, __assign({}, props, {\n          /**\n           * isOperator:\n           * The ReturnType of createOperatorListQuery is User[].\n           * We can't determine if this user is an operator, because User doesn't have a `role` property.\n           * Therefore, we need to explicitly specify that this user is an operator.\n          */\n          isOperator: true,\n          onToggleOperatorState: function () {\n            // Limitation to server-side table update delay.\n            setTimeout(function () {\n              refreshList();\n            }, 500);\n          },\n          renderMenuItems: function (_a) {\n            var items = _a.items;\n            return React__default.createElement(items.OperatorToggleMenuItem, null);\n          }\n        }));\n      }\n    }));\n  }), React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings-accordion__footer\"\n  }, React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function () {\n      setShowAdd(true);\n    }\n  }, stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ADD), hasNext && React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function () {\n      setShowMore(true);\n    }\n  }, stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL)), showMore && React__default.createElement(OperatorsModal, {\n    onCancel: function () {\n      setShowMore(false);\n      refreshList();\n    },\n    renderUserListItem: renderUserListItem,\n    operatorListQueryParams: operatorListQueryParams\n  }), showAdd && React__default.createElement(AddOperatorsModal, {\n    onCancel: function () {\n      return setShowAdd(false);\n    },\n    onSubmit: function () {\n      /**\n       * Limitation to server-side table update delay.\n       */\n      setTimeout(function () {\n        refreshList();\n      }, 500);\n      setShowAdd(false);\n    },\n    renderUserListItem: renderUserListItem\n  }));\n};\nfunction BannedUsersModal(_a) {\n  var _this = this;\n  var onCancel = _a.onCancel,\n    _b = _a.renderUserListItem,\n    renderUserListItem = _b === void 0 ? function (props) {\n      return React__default.createElement(UserListItem, __assign({}, props));\n    } : _b,\n    _c = _a.bannedUserListQueryParams,\n    bannedUserListQueryParams = _c === void 0 ? {} : _c;\n  var _d = useState([]),\n    members = _d[0],\n    setMembers = _d[1];\n  var _e = useState(null),\n    memberQuery = _e[0],\n    setMemberQuery = _e[1];\n  var channel = useChannelSettingsContext().channel;\n  var stringSet = useLocalization().stringSet;\n  useEffect(function () {\n    var bannedUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createBannedUserListQuery(__assign({\n      limit: 20\n    }, bannedUserListQueryParams));\n    if (bannedUserListQuery) {\n      bannedUserListQuery.next().then(function (users) {\n        setMembers(users);\n      });\n      setMemberQuery(bannedUserListQuery);\n    }\n  }, []);\n  return React__default.createElement(\"div\", null, React__default.createElement(Modal, {\n    isFullScreenOnMobile: true,\n    hideFooter: true,\n    onCancel: function () {\n      return onCancel();\n    },\n    onSubmit: noop,\n    titleText: stringSet.CHANNEL_SETTING__BANNED_MEMBERS__TITLE\n  }, React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: useOnScrollPositionChangeDetector({\n      onReachedBottom: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var hasNext;\n          return __generator(this, function (_a) {\n            if (!memberQuery) return [2 /*return*/];\n            hasNext = memberQuery.hasNext;\n            if (hasNext) {\n              memberQuery.next().then(function (o) {\n                setMembers(__spreadArray(__spreadArray([], members, true), o, true));\n              });\n            }\n            return [2 /*return*/];\n          });\n        });\n      }\n    })\n  }, members.map(function (member) {\n    return renderUserListItem({\n      user: member,\n      channel: channel,\n      renderListItemMenu: function (props) {\n        return React__default.createElement(UserListItemMenu, __assign({}, props, {\n          isBanned: true,\n          onToggleBanState: function () {\n            setMembers(members.filter(function (m) {\n              return m.userId !== member.userId;\n            }));\n          },\n          renderMenuItems: function (_a) {\n            var items = _a.items;\n            return React__default.createElement(items.BanToggleMenuItem, null);\n          }\n        }));\n      }\n    });\n  }))));\n}\nvar BannedUserList = function (_a) {\n  var _b = _a.renderUserListItem,\n    renderUserListItem = _b === void 0 ? function (props) {\n      return React__default.createElement(UserListItem, __assign({}, props));\n    } : _b,\n    _c = _a.bannedUserListQueryParams,\n    bannedUserListQueryParams = _c === void 0 ? {} : _c;\n  var _d = useState([]),\n    members = _d[0],\n    setMembers = _d[1];\n  var _e = useState(false),\n    hasNext = _e[0],\n    setHasNext = _e[1];\n  var _f = useState(false),\n    showModal = _f[0],\n    setShowModal = _f[1];\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var channel = useChannelSettingsContext().channel;\n  var refreshList = useCallback(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    var bannedUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createBannedUserListQuery(__assign({\n      limit: 10\n    }, bannedUserListQueryParams));\n    bannedUserListQuery.next().then(function (users) {\n      setMembers(users);\n      setHasNext(bannedUserListQuery.hasNext);\n    });\n  }, [channel === null || channel === void 0 ? void 0 : channel.url, channel === null || channel === void 0 ? void 0 : channel.createBannedUserListQuery]);\n  useEffect(refreshList, [channel === null || channel === void 0 ? void 0 : channel.url]);\n  return React__default.createElement(React__default.Fragment, null, members.map(function (member) {\n    return React__default.createElement(React__default.Fragment, {\n      key: member.userId\n    }, renderUserListItem({\n      user: member,\n      channel: channel,\n      size: 'small',\n      avatarSize: '24px',\n      renderListItemMenu: function (props) {\n        return React__default.createElement(UserListItemMenu, __assign({}, props, {\n          isBanned: true,\n          onToggleBanState: function () {\n            return refreshList();\n          },\n          renderMenuItems: function (_a) {\n            var items = _a.items;\n            return React__default.createElement(items.BanToggleMenuItem, null);\n          }\n        }));\n      }\n    }));\n  }), members && members.length === 0 && React__default.createElement(Label, {\n    className: \"sendbird-channel-settings__empty-list\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, stringSet.CHANNEL_SETTING__MODERATION__EMPTY_BAN), hasNext && React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings-accordion__footer\"\n  }, React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function () {\n      setShowModal(true);\n    }\n  }, stringSet.CHANNEL_SETTING__MODERATION__ALL_BAN)), showModal && React__default.createElement(BannedUsersModal, {\n    onCancel: function () {\n      setShowModal(false);\n      refreshList();\n    },\n    renderUserListItem: renderUserListItem,\n    bannedUserListQueryParams: bannedUserListQueryParams\n  }));\n};\nfunction MutedMembersModal(_a) {\n  var _this = this;\n  var onCancel = _a.onCancel,\n    _b = _a.renderUserListItem,\n    renderUserListItem = _b === void 0 ? function (props) {\n      return React__default.createElement(UserListItem, __assign({}, props));\n    } : _b,\n    _c = _a.memberListQueryParams,\n    memberListQueryParams = _c === void 0 ? {} : _c;\n  var _d = useState([]),\n    members = _d[0],\n    setMembers = _d[1];\n  var _e = useState(null),\n    memberQuery = _e[0],\n    setMemberQuery = _e[1];\n  var channel = useChannelSettingsContext().channel;\n  var stringSet = useLocalization().stringSet;\n  useEffect(function () {\n    var memberUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery(__assign(__assign({\n      limit: 20\n    }, memberListQueryParams), {\n      // @ts-ignore\n      mutedMemberFilter: 'muted'\n    }));\n    memberUserListQuery === null || memberUserListQuery === void 0 ? void 0 : memberUserListQuery.next().then(function (members) {\n      setMembers(members);\n    });\n    setMemberQuery(memberUserListQuery !== null && memberUserListQuery !== void 0 ? memberUserListQuery : null);\n  }, []);\n  return React__default.createElement(\"div\", null, React__default.createElement(Modal, {\n    isFullScreenOnMobile: true,\n    hideFooter: true,\n    onCancel: function () {\n      return onCancel();\n    },\n    onSubmit: noop,\n    titleText: stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE\n  }, React__default.createElement(\"div\", {\n    className: \"sendbird-more-members__popup-scroll\",\n    onScroll: useOnScrollPositionChangeDetector({\n      onReachedBottom: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var hasNext;\n          return __generator(this, function (_a) {\n            hasNext = memberQuery.hasNext;\n            if (hasNext) {\n              memberQuery.next().then(function (o) {\n                setMembers(__spreadArray(__spreadArray([], members, true), o, true));\n              });\n            }\n            return [2 /*return*/];\n          });\n        });\n      }\n    })\n  }, members.map(function (member) {\n    return React__default.createElement(React__default.Fragment, {\n      key: member.userId\n    }, renderUserListItem({\n      user: member,\n      channel: channel,\n      renderListItemMenu: function (props) {\n        return React__default.createElement(UserListItemMenu, __assign({}, props, {\n          onToggleMuteState: function () {\n            setMembers(members.filter(function (m) {\n              return m.userId !== member.userId;\n            }));\n          },\n          renderMenuItems: function (_a) {\n            var items = _a.items;\n            return React__default.createElement(items.MuteToggleMenuItem, null);\n          }\n        }));\n      }\n    }));\n  }))));\n}\nvar MutedMemberList = function (_a) {\n  var _b = _a.renderUserListItem,\n    renderUserListItem = _b === void 0 ? function (props) {\n      return React__default.createElement(UserListItem, __assign({}, props));\n    } : _b,\n    _c = _a.memberListQueryParams,\n    memberListQueryParams = _c === void 0 ? {} : _c;\n  var _d = useState([]),\n    members = _d[0],\n    setMembers = _d[1];\n  var _e = useState(false),\n    hasNext = _e[0],\n    setHasNext = _e[1];\n  var _f = useState(false),\n    showModal = _f[0],\n    setShowModal = _f[1];\n  var stringSet = useLocalization().stringSet;\n  var channel = useChannelSettingsContext().channel;\n  var refreshList = useCallback(function () {\n    if (!channel) {\n      setMembers([]);\n      return;\n    }\n    var memberUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery(__assign(__assign({\n      limit: 10\n    }, memberListQueryParams), {\n      // @ts-ignore\n      mutedMemberFilter: 'muted'\n    }));\n    memberUserListQuery.next().then(function (members) {\n      setMembers(members);\n      setHasNext(memberUserListQuery.hasNext);\n    });\n  }, [channel === null || channel === void 0 ? void 0 : channel.url, channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery]);\n  useEffect(refreshList, [channel === null || channel === void 0 ? void 0 : channel.url]);\n  return React__default.createElement(React__default.Fragment, null, members.map(function (member) {\n    return React__default.createElement(React__default.Fragment, {\n      key: member.userId\n    }, renderUserListItem({\n      user: member,\n      channel: channel,\n      size: 'small',\n      avatarSize: '24px',\n      renderListItemMenu: function (props) {\n        return React__default.createElement(UserListItemMenu, __assign({}, props, {\n          onToggleMuteState: function () {\n            // Limitation to server-side table update delay.\n            setTimeout(function () {\n              refreshList();\n            }, 500);\n          },\n          renderMenuItems: function (_a) {\n            var items = _a.items;\n            return React__default.createElement(items.MuteToggleMenuItem, null);\n          }\n        }));\n      }\n    }));\n  }), members && members.length === 0 && React__default.createElement(Label, {\n    className: \"sendbird-channel-settings__empty-list\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, stringSet.CHANNEL_SETTING__NO_UNMUTED), hasNext && React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings-accordion__footer\"\n  }, React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: function () {\n      setShowModal(true);\n    }\n  }, stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE_ALL)), showModal && React__default.createElement(MutedMembersModal, {\n    onCancel: function () {\n      setShowModal(false);\n      refreshList();\n    },\n    renderUserListItem: renderUserListItem,\n    memberListQueryParams: memberListQueryParams\n  }));\n};\nexport { BannedUserList as B, MutedMemberList as M, OperatorList as O };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import { _ as __assign, a as __awaiter, b as __generator, c as __spreadArray } from './bundle-BQi9-O76.js';\nimport React__default, { useState, useContext, useEffect, useCallback } from 'react';\nimport { L as LocalizationContext, u as useLocalization } from './bundle-cQZ3UZoG.js';\nimport { useChannelSettingsContext } from '../ChannelSettings/context.js';\nimport Button, { ButtonTypes, ButtonSizes } from '../ui/Button.js';\nimport { U as UserListItemMenu } from './bundle-BjjAXlnY.js';\nimport { UserListItem } from '../ui/UserListItem.js';\nimport { M as Modal } from './bundle-CXdo2kR_.js';\nimport { u as useOnScrollPositionChangeDetector } from './bundle-DvsVgg5f.js';\nimport { L as Label, b as LabelColors, a as LabelTypography } from './bundle-DhKQeIfP.js';\nimport { OperatorFilter } from '@sendbird/chat/groupChannel';\nimport { n as noop } from './bundle-BgwzpLeQ.js';\n\nfunction OperatorsModal(_a) {\n    var _this = this;\n    var onCancel = _a.onCancel, _b = _a.renderUserListItem, renderUserListItem = _b === void 0 ? function (props) { return React__default.createElement(UserListItem, __assign({}, props)); } : _b, _c = _a.operatorListQueryParams, operatorListQueryParams = _c === void 0 ? {} : _c;\n    var _d = useState([]), operators = _d[0], setOperators = _d[1];\n    var _e = useState(null), operatorQuery = _e[0], setOperatorQuery = _e[1];\n    var channel = useChannelSettingsContext().channel;\n    var stringSet = useContext(LocalizationContext).stringSet;\n    useEffect(function () {\n        var operatorListQuery = channel === null || channel === void 0 ? void 0 : channel.createOperatorListQuery(__assign({ limit: 20 }, operatorListQueryParams));\n        operatorListQuery === null || operatorListQuery === void 0 ? void 0 : operatorListQuery.next().then(function (operators) {\n            setOperators(operators);\n        });\n        setOperatorQuery(operatorListQuery !== null && operatorListQuery !== void 0 ? operatorListQuery : null);\n    }, []);\n    return (React__default.createElement(\"div\", null,\n        React__default.createElement(Modal, { isFullScreenOnMobile: true, hideFooter: true, titleText: stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL, onCancel: onCancel },\n            React__default.createElement(\"div\", { className: \"sendbird-more-members__popup-scroll\", onScroll: useOnScrollPositionChangeDetector({\n                    onReachedBottom: function () { return __awaiter(_this, void 0, void 0, function () {\n                        return __generator(this, function (_a) {\n                            if (operatorQuery && operatorQuery.hasNext) {\n                                operatorQuery.next().then(function (o) {\n                                    setOperators(__spreadArray(__spreadArray([], operators, true), o, true));\n                                });\n                            }\n                            return [2 /*return*/];\n                        });\n                    }); },\n                }) }, operators.map(function (member) { return (React__default.createElement(React__default.Fragment, { key: member.userId }, renderUserListItem({\n                user: member,\n                channel: channel,\n                renderListItemMenu: function (props) { return (React__default.createElement(UserListItemMenu, __assign({}, props, { isOperator: true, onToggleOperatorState: function (_a) {\n                        var user = _a.user;\n                        setOperators(operators.filter(function (_a) {\n                            var userId = _a.userId;\n                            return userId !== user.userId;\n                        }));\n                    }, renderMenuItems: function (_a) {\n                        var items = _a.items;\n                        return (React__default.createElement(items.OperatorToggleMenuItem, null));\n                    } }))); },\n            }))); })))));\n}\n\nfunction AddOperatorsModal(_a) {\n    var _this = this;\n    var onCancel = _a.onCancel, onSubmit = _a.onSubmit, _b = _a.renderUserListItem, renderUserListItem = _b === void 0 ? function (props) { return React__default.createElement(UserListItem, __assign({}, props)); } : _b;\n    var _c = useState([]), members = _c[0], setMembers = _c[1];\n    var _d = useState({}), selectedMembers = _d[0], setSelectedMembers = _d[1];\n    var _e = useState(null), memberQuery = _e[0], setMemberQuery = _e[1];\n    var stringSet = useContext(LocalizationContext).stringSet;\n    var channel = useChannelSettingsContext().channel;\n    useEffect(function () {\n        var memberListQuery = channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery({\n            operatorFilter: OperatorFilter.NONOPERATOR,\n            limit: 20,\n        });\n        memberListQuery === null || memberListQuery === void 0 ? void 0 : memberListQuery.next().then(function (members) {\n            setMembers(members);\n        });\n        setMemberQuery(memberListQuery !== null && memberListQuery !== void 0 ? memberListQuery : null);\n    }, []);\n    var selectedCount = Object.keys(selectedMembers).filter(function (m) { return selectedMembers[m]; }).length;\n    return (React__default.createElement(\"div\", null,\n        React__default.createElement(Modal, { isFullScreenOnMobile: true, type: ButtonTypes.PRIMARY, submitText: stringSet.CHANNEL_SETTING__OPERATORS__ADD_BUTTON, onCancel: onCancel, onSubmit: function () {\n                var members = Object.keys(selectedMembers).filter(function (m) { return selectedMembers[m]; });\n                channel === null || channel === void 0 ? void 0 : channel.addOperators(members).then(function () {\n                    onSubmit(members);\n                });\n            }, titleText: stringSet.CHANNEL_SETTING__MEMBERS__SELECT_TITLE },\n            React__default.createElement(Label, { color: (selectedCount > 0) ? LabelColors.PRIMARY : LabelColors.ONBACKGROUND_3, type: LabelTypography.CAPTION_1 }, \"\".concat(selectedCount, \" \").concat(stringSet.MODAL__INVITE_MEMBER__SELECTED)),\n            React__default.createElement(\"div\", { className: \"sendbird-more-members__popup-scroll\", onScroll: useOnScrollPositionChangeDetector({\n                    onReachedBottom: function () { return __awaiter(_this, void 0, void 0, function () {\n                        var hasNext;\n                        return __generator(this, function (_a) {\n                            hasNext = memberQuery.hasNext;\n                            if (hasNext) {\n                                memberQuery.next().then(function (o) {\n                                    setMembers(__spreadArray(__spreadArray([], members, true), o, true));\n                                });\n                            }\n                            return [2 /*return*/];\n                        });\n                    }); },\n                }) }, members.map(function (member) { return (React__default.createElement(React__default.Fragment, { key: member.userId }, renderUserListItem({\n                user: member,\n                checkBox: true,\n                checked: selectedMembers[member.userId],\n                disabled: (member === null || member === void 0 ? void 0 : member.role) === 'operator',\n                onChange: function (event) {\n                    var _a;\n                    var modifiedSelectedMembers = __assign(__assign({}, selectedMembers), (_a = {}, _a[event.target.id] = event.target.checked, _a));\n                    if (!event.target.checked) {\n                        delete modifiedSelectedMembers[event.target.id];\n                    }\n                    setSelectedMembers(modifiedSelectedMembers);\n                },\n            }))); })))));\n}\n\nvar OperatorList = function (_a) {\n    var _b = _a.renderUserListItem, renderUserListItem = _b === void 0 ? function (props) { return React__default.createElement(UserListItem, __assign({}, props)); } : _b, _c = _a.operatorListQueryParams, operatorListQueryParams = _c === void 0 ? {} : _c;\n    var _d = useState([]), operators = _d[0], setOperators = _d[1];\n    var _e = useState(false), showMore = _e[0], setShowMore = _e[1];\n    var _f = useState(false), showAdd = _f[0], setShowAdd = _f[1];\n    var _g = useState(false), hasNext = _g[0], setHasNext = _g[1];\n    var stringSet = useContext(LocalizationContext).stringSet;\n    var channel = useChannelSettingsContext().channel;\n    var refreshList = useCallback(function () {\n        if (!channel) {\n            setOperators([]);\n            return;\n        }\n        var operatorListQuery = channel === null || channel === void 0 ? void 0 : channel.createOperatorListQuery(__assign({ limit: 10 }, operatorListQueryParams));\n        operatorListQuery.next().then(function (operators) {\n            setOperators(operators);\n            setHasNext(operatorListQuery.hasNext);\n        });\n    }, [channel === null || channel === void 0 ? void 0 : channel.url, channel === null || channel === void 0 ? void 0 : channel.createOperatorListQuery]);\n    useEffect(refreshList, [channel === null || channel === void 0 ? void 0 : channel.url]);\n    return (React__default.createElement(React__default.Fragment, null,\n        operators.map(function (operator) { return (React__default.createElement(React__default.Fragment, { key: operator.userId }, renderUserListItem({\n            user: operator,\n            channel: channel,\n            size: 'small',\n            avatarSize: '24px',\n            renderListItemMenu: function (props) { return (React__default.createElement(UserListItemMenu, __assign({}, props, { \n                /**\n                 * isOperator:\n                 * The ReturnType of createOperatorListQuery is User[].\n                 * We can't determine if this user is an operator, because User doesn't have a `role` property.\n                 * Therefore, we need to explicitly specify that this user is an operator.\n                */\n                isOperator: true, onToggleOperatorState: function () {\n                    // Limitation to server-side table update delay.\n                    setTimeout(function () {\n                        refreshList();\n                    }, 500);\n                }, renderMenuItems: function (_a) {\n                    var items = _a.items;\n                    return (React__default.createElement(items.OperatorToggleMenuItem, null));\n                } }))); },\n        }))); }),\n        React__default.createElement(\"div\", { className: \"sendbird-channel-settings-accordion__footer\" },\n            React__default.createElement(Button, { type: ButtonTypes.SECONDARY, size: ButtonSizes.SMALL, onClick: function () {\n                    setShowAdd(true);\n                } }, stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ADD),\n            hasNext && (React__default.createElement(Button, { type: ButtonTypes.SECONDARY, size: ButtonSizes.SMALL, onClick: function () {\n                    setShowMore(true);\n                } }, stringSet.CHANNEL_SETTING__OPERATORS__TITLE_ALL))),\n        showMore && (React__default.createElement(OperatorsModal, { onCancel: function () {\n                setShowMore(false);\n                refreshList();\n            }, renderUserListItem: renderUserListItem, operatorListQueryParams: operatorListQueryParams })),\n        showAdd && (React__default.createElement(AddOperatorsModal, { onCancel: function () { return setShowAdd(false); }, onSubmit: function () {\n                /**\n                 * Limitation to server-side table update delay.\n                 */\n                setTimeout(function () {\n                    refreshList();\n                }, 500);\n                setShowAdd(false);\n            }, renderUserListItem: renderUserListItem }))));\n};\n\nfunction BannedUsersModal(_a) {\n    var _this = this;\n    var onCancel = _a.onCancel, _b = _a.renderUserListItem, renderUserListItem = _b === void 0 ? function (props) { return React__default.createElement(UserListItem, __assign({}, props)); } : _b, _c = _a.bannedUserListQueryParams, bannedUserListQueryParams = _c === void 0 ? {} : _c;\n    var _d = useState([]), members = _d[0], setMembers = _d[1];\n    var _e = useState(null), memberQuery = _e[0], setMemberQuery = _e[1];\n    var channel = useChannelSettingsContext().channel;\n    var stringSet = useLocalization().stringSet;\n    useEffect(function () {\n        var bannedUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createBannedUserListQuery(__assign({ limit: 20 }, bannedUserListQueryParams));\n        if (bannedUserListQuery) {\n            bannedUserListQuery.next().then(function (users) {\n                setMembers(users);\n            });\n            setMemberQuery(bannedUserListQuery);\n        }\n    }, []);\n    return (React__default.createElement(\"div\", null,\n        React__default.createElement(Modal, { isFullScreenOnMobile: true, hideFooter: true, onCancel: function () { return onCancel(); }, onSubmit: noop, titleText: stringSet.CHANNEL_SETTING__BANNED_MEMBERS__TITLE },\n            React__default.createElement(\"div\", { className: \"sendbird-more-members__popup-scroll\", onScroll: useOnScrollPositionChangeDetector({\n                    onReachedBottom: function () { return __awaiter(_this, void 0, void 0, function () {\n                        var hasNext;\n                        return __generator(this, function (_a) {\n                            if (!memberQuery)\n                                return [2 /*return*/];\n                            hasNext = memberQuery.hasNext;\n                            if (hasNext) {\n                                memberQuery.next().then(function (o) {\n                                    setMembers(__spreadArray(__spreadArray([], members, true), o, true));\n                                });\n                            }\n                            return [2 /*return*/];\n                        });\n                    }); },\n                }) }, members.map(function (member) { return (renderUserListItem({\n                user: member,\n                channel: channel,\n                renderListItemMenu: function (props) { return (React__default.createElement(UserListItemMenu, __assign({}, props, { isBanned: true, onToggleBanState: function () {\n                        setMembers(members.filter(function (m) {\n                            return (m.userId !== member.userId);\n                        }));\n                    }, renderMenuItems: function (_a) {\n                        var items = _a.items;\n                        return React__default.createElement(items.BanToggleMenuItem, null);\n                    } }))); },\n            })); })))));\n}\n\nvar BannedUserList = function (_a) {\n    var _b = _a.renderUserListItem, renderUserListItem = _b === void 0 ? function (props) { return React__default.createElement(UserListItem, __assign({}, props)); } : _b, _c = _a.bannedUserListQueryParams, bannedUserListQueryParams = _c === void 0 ? {} : _c;\n    var _d = useState([]), members = _d[0], setMembers = _d[1];\n    var _e = useState(false), hasNext = _e[0], setHasNext = _e[1];\n    var _f = useState(false), showModal = _f[0], setShowModal = _f[1];\n    var stringSet = useContext(LocalizationContext).stringSet;\n    var channel = useChannelSettingsContext().channel;\n    var refreshList = useCallback(function () {\n        if (!channel) {\n            setMembers([]);\n            return;\n        }\n        var bannedUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createBannedUserListQuery(__assign({ limit: 10 }, bannedUserListQueryParams));\n        bannedUserListQuery.next().then(function (users) {\n            setMembers(users);\n            setHasNext(bannedUserListQuery.hasNext);\n        });\n    }, [channel === null || channel === void 0 ? void 0 : channel.url, channel === null || channel === void 0 ? void 0 : channel.createBannedUserListQuery]);\n    useEffect(refreshList, [channel === null || channel === void 0 ? void 0 : channel.url]);\n    return (React__default.createElement(React__default.Fragment, null,\n        members.map(function (member) { return (React__default.createElement(React__default.Fragment, { key: member.userId }, renderUserListItem({\n            user: member,\n            channel: channel,\n            size: 'small',\n            avatarSize: '24px',\n            renderListItemMenu: function (props) { return (React__default.createElement(UserListItemMenu, __assign({}, props, { isBanned: true, onToggleBanState: function () { return refreshList(); }, renderMenuItems: function (_a) {\n                    var items = _a.items;\n                    return (React__default.createElement(items.BanToggleMenuItem, null));\n                } }))); },\n        }))); }),\n        members && members.length === 0 && (React__default.createElement(Label, { className: \"sendbird-channel-settings__empty-list\", type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_3 }, stringSet.CHANNEL_SETTING__MODERATION__EMPTY_BAN)),\n        hasNext && (React__default.createElement(\"div\", { className: \"sendbird-channel-settings-accordion__footer\" },\n            React__default.createElement(Button, { type: ButtonTypes.SECONDARY, size: ButtonSizes.SMALL, onClick: function () {\n                    setShowModal(true);\n                } }, stringSet.CHANNEL_SETTING__MODERATION__ALL_BAN))),\n        showModal && (React__default.createElement(BannedUsersModal, { onCancel: function () {\n                setShowModal(false);\n                refreshList();\n            }, renderUserListItem: renderUserListItem, bannedUserListQueryParams: bannedUserListQueryParams }))));\n};\n\nfunction MutedMembersModal(_a) {\n    var _this = this;\n    var onCancel = _a.onCancel, _b = _a.renderUserListItem, renderUserListItem = _b === void 0 ? function (props) { return React__default.createElement(UserListItem, __assign({}, props)); } : _b, _c = _a.memberListQueryParams, memberListQueryParams = _c === void 0 ? {} : _c;\n    var _d = useState([]), members = _d[0], setMembers = _d[1];\n    var _e = useState(null), memberQuery = _e[0], setMemberQuery = _e[1];\n    var channel = useChannelSettingsContext().channel;\n    var stringSet = useLocalization().stringSet;\n    useEffect(function () {\n        var memberUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery(__assign(__assign({ limit: 20 }, memberListQueryParams), { \n            // @ts-ignore\n            mutedMemberFilter: 'muted' }));\n        memberUserListQuery === null || memberUserListQuery === void 0 ? void 0 : memberUserListQuery.next().then(function (members) {\n            setMembers(members);\n        });\n        setMemberQuery(memberUserListQuery !== null && memberUserListQuery !== void 0 ? memberUserListQuery : null);\n    }, []);\n    return (React__default.createElement(\"div\", null,\n        React__default.createElement(Modal, { isFullScreenOnMobile: true, hideFooter: true, onCancel: function () { return onCancel(); }, onSubmit: noop, titleText: stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE },\n            React__default.createElement(\"div\", { className: \"sendbird-more-members__popup-scroll\", onScroll: useOnScrollPositionChangeDetector({\n                    onReachedBottom: function () { return __awaiter(_this, void 0, void 0, function () {\n                        var hasNext;\n                        return __generator(this, function (_a) {\n                            hasNext = memberQuery.hasNext;\n                            if (hasNext) {\n                                memberQuery.next().then(function (o) {\n                                    setMembers(__spreadArray(__spreadArray([], members, true), o, true));\n                                });\n                            }\n                            return [2 /*return*/];\n                        });\n                    }); },\n                }) }, members.map(function (member) { return (React__default.createElement(React__default.Fragment, { key: member.userId }, renderUserListItem({\n                user: member,\n                channel: channel,\n                renderListItemMenu: function (props) { return (React__default.createElement(UserListItemMenu, __assign({}, props, { onToggleMuteState: function () {\n                        setMembers(members.filter(function (m) {\n                            return (m.userId !== member.userId);\n                        }));\n                    }, renderMenuItems: function (_a) {\n                        var items = _a.items;\n                        return (React__default.createElement(items.MuteToggleMenuItem, null));\n                    } }))); },\n            }))); })))));\n}\n\nvar MutedMemberList = function (_a) {\n    var _b = _a.renderUserListItem, renderUserListItem = _b === void 0 ? function (props) { return React__default.createElement(UserListItem, __assign({}, props)); } : _b, _c = _a.memberListQueryParams, memberListQueryParams = _c === void 0 ? {} : _c;\n    var _d = useState([]), members = _d[0], setMembers = _d[1];\n    var _e = useState(false), hasNext = _e[0], setHasNext = _e[1];\n    var _f = useState(false), showModal = _f[0], setShowModal = _f[1];\n    var stringSet = useLocalization().stringSet;\n    var channel = useChannelSettingsContext().channel;\n    var refreshList = useCallback(function () {\n        if (!channel) {\n            setMembers([]);\n            return;\n        }\n        var memberUserListQuery = channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery(__assign(__assign({ limit: 10 }, memberListQueryParams), { \n            // @ts-ignore\n            mutedMemberFilter: 'muted' }));\n        memberUserListQuery.next().then(function (members) {\n            setMembers(members);\n            setHasNext(memberUserListQuery.hasNext);\n        });\n    }, [channel === null || channel === void 0 ? void 0 : channel.url, channel === null || channel === void 0 ? void 0 : channel.createMemberListQuery]);\n    useEffect(refreshList, [channel === null || channel === void 0 ? void 0 : channel.url]);\n    return (React__default.createElement(React__default.Fragment, null,\n        members.map(function (member) { return (React__default.createElement(React__default.Fragment, { key: member.userId }, renderUserListItem({\n            user: member,\n            channel: channel,\n            size: 'small',\n            avatarSize: '24px',\n            renderListItemMenu: function (props) { return (React__default.createElement(UserListItemMenu, __assign({}, props, { onToggleMuteState: function () {\n                    // Limitation to server-side table update delay.\n                    setTimeout(function () {\n                        refreshList();\n                    }, 500);\n                }, renderMenuItems: function (_a) {\n                    var items = _a.items;\n                    return (React__default.createElement(items.MuteToggleMenuItem, null));\n                } }))); },\n        }))); }),\n        members && members.length === 0 && (React__default.createElement(Label, { className: \"sendbird-channel-settings__empty-list\", type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_3 }, stringSet.CHANNEL_SETTING__NO_UNMUTED)),\n        hasNext && (React__default.createElement(\"div\", { className: \"sendbird-channel-settings-accordion__footer\" },\n            React__default.createElement(Button, { type: ButtonTypes.SECONDARY, size: ButtonSizes.SMALL, onClick: function () {\n                    setShowModal(true);\n                } }, stringSet.CHANNEL_SETTING__MUTED_MEMBERS__TITLE_ALL))),\n        showModal && (React__default.createElement(MutedMembersModal, { onCancel: function () {\n                setShowModal(false);\n                refreshList();\n            }, renderUserListItem: renderUserListItem, memberListQueryParams: memberListQueryParams }))));\n};\n\nexport { BannedUserList as B, MutedMemberList as M, OperatorList as O };\n//# sourceMappingURL=bundle-DHpCLtwn.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}