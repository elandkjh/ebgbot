{"ast":null,"code":"import React__default, { useLayoutEffect } from 'react';\nimport { A as Avatar, a as AvatarDefault } from '../chunks/bundle-CFosTNce.js';\nimport '../chunks/bundle-BQi9-O76.js';\nimport './ImageRenderer.js';\nimport '../chunks/bundle-BgwzpLeQ.js';\nimport '../chunks/bundle-DXRRGizV.js';\nimport './Icon.js';\nvar TypingDots = function () {\n  return React__default.createElement(\"div\", {\n    className: 'typing-dots-container'\n  }, React__default.createElement(\"span\", null), React__default.createElement(\"span\", null), React__default.createElement(\"span\", null));\n};\nvar AVATAR_BORDER_SIZE = 2;\nvar AVATAR_DIAMETER_WITHOUT_BORDER = 28;\nvar AVATAR_DIAMETER = AVATAR_DIAMETER_WITHOUT_BORDER + AVATAR_BORDER_SIZE * 2;\nvar LEFT_GAP = 24;\nvar MAX_PROFILES_COUNT = 3;\nvar LEFT_FOR_BORDER = AVATAR_BORDER_SIZE;\nvar AvatarStack = function (props) {\n  var sources = props.sources,\n    max = props.max;\n  return React__default.createElement(React__default.Fragment, null, \" \", sources.slice(0, max).map(function (src, index) {\n    return React__default.createElement(Avatar, {\n      className: 'sendbird-message-content__left__avatar multiple',\n      src: src || '',\n      key: \"avatar_stack_item_\".concat(src),\n      // TODO: Divide getting profileUrl logic to utils\n      width: \"\".concat(AVATAR_DIAMETER_WITHOUT_BORDER, \"px\"),\n      height: \"\".concat(AVATAR_DIAMETER_WITHOUT_BORDER, \"px\"),\n      zIndex: index,\n      left: \"\".concat(index * LEFT_GAP - LEFT_FOR_BORDER, \"px\")\n    });\n  }), \" \");\n};\nvar TypingIndicatorBubbleAvatar = function (props) {\n  var typingMembers = props.typingMembers;\n  var membersCount = typingMembers.length;\n  var displayCount = Math.min(membersCount, 4);\n  var hiddenCount = membersCount - MAX_PROFILES_COUNT;\n  var superImposedWidth = (displayCount - 1) * (AVATAR_DIAMETER - LEFT_GAP);\n  var rightPaddingSize = 12;\n  return React__default.createElement(\"div\", {\n    className: 'sendbird-message-content__left incoming',\n    style: {\n      minWidth: displayCount * AVATAR_DIAMETER - superImposedWidth + rightPaddingSize\n    }\n  }, React__default.createElement(AvatarStack, {\n    sources: typingMembers.map(function (member) {\n      return member.profileUrl;\n    }),\n    max: MAX_PROFILES_COUNT\n  }), hiddenCount > 0 ? React__default.createElement(Avatar, {\n    className: 'sendbird-message-content__left__avatar multiple',\n    // TODO: Divide getting profileUrl logic to utils\n    width: \"\".concat(AVATAR_DIAMETER_WITHOUT_BORDER, \"px\"),\n    height: \"\".concat(AVATAR_DIAMETER_WITHOUT_BORDER, \"px\"),\n    zIndex: MAX_PROFILES_COUNT,\n    left: \"\".concat(MAX_PROFILES_COUNT * LEFT_GAP, \"px\"),\n    customDefaultComponent: function (_a) {\n      var width = _a.width,\n        height = _a.height;\n      return React__default.createElement(AvatarDefault, {\n        width: width,\n        height: height,\n        text: \"+\".concat(hiddenCount)\n      });\n    }\n  }) : null);\n};\nvar TypingIndicatorBubble = function (props) {\n  var typingMembers = props.typingMembers,\n    handleScroll = props.handleScroll;\n  if (typingMembers.length === 0) return null;\n  useLayoutEffect(function () {\n    // Keep the scrollBottom value after fetching new message list\n    handleScroll === null || handleScroll === void 0 ? void 0 : handleScroll(true);\n  }, []);\n  return React__default.createElement(\"div\", {\n    className: 'sendbird-message-content incoming',\n    style: {\n      marginBottom: '2px'\n    }\n  }, React__default.createElement(TypingIndicatorBubbleAvatar, {\n    typingMembers: typingMembers\n  }), React__default.createElement(\"div\", {\n    className: 'sendbird-message-content__middle'\n  }, React__default.createElement(TypingDots, null)));\n};\nexport { TypingIndicatorBubble as default };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import React__default, { useLayoutEffect } from 'react';\nimport { A as Avatar, a as AvatarDefault } from '../chunks/bundle-CFosTNce.js';\nimport '../chunks/bundle-BQi9-O76.js';\nimport './ImageRenderer.js';\nimport '../chunks/bundle-BgwzpLeQ.js';\nimport '../chunks/bundle-DXRRGizV.js';\nimport './Icon.js';\n\nvar TypingDots = function () {\n    return (React__default.createElement(\"div\", { className: 'typing-dots-container' },\n        React__default.createElement(\"span\", null),\n        React__default.createElement(\"span\", null),\n        React__default.createElement(\"span\", null)));\n};\n\nvar AVATAR_BORDER_SIZE = 2;\nvar AVATAR_DIAMETER_WITHOUT_BORDER = 28;\nvar AVATAR_DIAMETER = AVATAR_DIAMETER_WITHOUT_BORDER + (AVATAR_BORDER_SIZE * 2);\nvar LEFT_GAP = 24;\nvar MAX_PROFILES_COUNT = 3;\nvar LEFT_FOR_BORDER = AVATAR_BORDER_SIZE;\nvar AvatarStack = function (props) {\n    var sources = props.sources, max = props.max;\n    return (React__default.createElement(React__default.Fragment, null,\n        \" \",\n        sources.slice(0, max).map(function (src, index) { return (React__default.createElement(Avatar, { className: 'sendbird-message-content__left__avatar multiple', src: src || '', key: \"avatar_stack_item_\".concat(src), \n            // TODO: Divide getting profileUrl logic to utils\n            width: \"\".concat(AVATAR_DIAMETER_WITHOUT_BORDER, \"px\"), height: \"\".concat(AVATAR_DIAMETER_WITHOUT_BORDER, \"px\"), zIndex: index, left: \"\".concat(index * LEFT_GAP - LEFT_FOR_BORDER, \"px\") })); }),\n        \" \"));\n};\nvar TypingIndicatorBubbleAvatar = function (props) {\n    var typingMembers = props.typingMembers;\n    var membersCount = typingMembers.length;\n    var displayCount = Math.min(membersCount, 4);\n    var hiddenCount = membersCount - MAX_PROFILES_COUNT;\n    var superImposedWidth = ((displayCount - 1) * (AVATAR_DIAMETER - LEFT_GAP));\n    var rightPaddingSize = 12;\n    return (React__default.createElement(\"div\", { className: 'sendbird-message-content__left incoming', style: {\n            minWidth: (displayCount * AVATAR_DIAMETER) - superImposedWidth + rightPaddingSize,\n        } },\n        React__default.createElement(AvatarStack, { sources: typingMembers.map(function (member) { return member.profileUrl; }), max: MAX_PROFILES_COUNT }),\n        hiddenCount > 0\n            ? React__default.createElement(Avatar, { className: 'sendbird-message-content__left__avatar multiple', \n                // TODO: Divide getting profileUrl logic to utils\n                width: \"\".concat(AVATAR_DIAMETER_WITHOUT_BORDER, \"px\"), height: \"\".concat(AVATAR_DIAMETER_WITHOUT_BORDER, \"px\"), zIndex: MAX_PROFILES_COUNT, left: \"\".concat(MAX_PROFILES_COUNT * LEFT_GAP, \"px\"), customDefaultComponent: function (_a) {\n                    var width = _a.width, height = _a.height;\n                    return (React__default.createElement(AvatarDefault, { width: width, height: height, text: \"+\".concat(hiddenCount) }));\n                } })\n            : null));\n};\nvar TypingIndicatorBubble = function (props) {\n    var typingMembers = props.typingMembers, handleScroll = props.handleScroll;\n    if (typingMembers.length === 0)\n        return null;\n    useLayoutEffect(function () {\n        // Keep the scrollBottom value after fetching new message list\n        handleScroll === null || handleScroll === void 0 ? void 0 : handleScroll(true);\n    }, []);\n    return React__default.createElement(\"div\", { className: 'sendbird-message-content incoming', style: { marginBottom: '2px' } },\n        React__default.createElement(TypingIndicatorBubbleAvatar, { typingMembers: typingMembers }),\n        React__default.createElement(\"div\", { className: 'sendbird-message-content__middle' },\n            React__default.createElement(TypingDots, null)));\n};\n\nexport { TypingIndicatorBubble as default };\n//# sourceMappingURL=TypingIndicatorBubble.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}