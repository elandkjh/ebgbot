{"ast":null,"code":"import React__default, { useState, useEffect, useContext } from 'react';\nimport { GroupChannelHandler } from '@sendbird/chat/groupChannel';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../../chunks/bundle-DhKQeIfP.js';\nimport { L as LocalizationContext } from '../../chunks/bundle-cQZ3UZoG.js';\nimport { useSendbirdStateContext } from '../../useSendbirdStateContext.js';\nimport { u as uuidv4 } from '../../chunks/bundle-etuaqevl.js';\nimport '../../chunks/bundle-BQi9-O76.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\nimport '../../withSendbird.js';\nvar TypingIndicatorText = function (_a) {\n  var members = _a.members;\n  function getText() {\n    var stringSet = useContext(LocalizationContext).stringSet;\n    if (!members || members.length === 0) {\n      return '';\n    }\n    if (members && members.length === 1) {\n      return \"\".concat(members[0].nickname, \" \").concat(stringSet.TYPING_INDICATOR__IS_TYPING);\n    }\n    if (members && members.length === 2) {\n      return \"\".concat(members[0].nickname, \" \").concat(stringSet.TYPING_INDICATOR__AND, \" \").concat(members[1].nickname, \" \").concat(stringSet.TYPING_INDICATOR__ARE_TYPING);\n    }\n    return stringSet.TYPING_INDICATOR__MULTIPLE_TYPING;\n  }\n  return React__default.createElement(React__default.Fragment, null, getText());\n};\nvar TypingIndicator = function (_a) {\n  var _b, _c, _d;\n  var channelUrl = _a.channelUrl;\n  var globalStore = useSendbirdStateContext();\n  var sb = (_c = (_b = globalStore === null || globalStore === void 0 ? void 0 : globalStore.stores) === null || _b === void 0 ? void 0 : _b.sdkStore) === null || _c === void 0 ? void 0 : _c.sdk;\n  var logger = (_d = globalStore === null || globalStore === void 0 ? void 0 : globalStore.config) === null || _d === void 0 ? void 0 : _d.logger;\n  var _e = useState(uuidv4()),\n    handlerId = _e[0],\n    setHandlerId = _e[1];\n  var _f = useState([]),\n    typingMembers = _f[0],\n    setTypingMembers = _f[1];\n  useEffect(function () {\n    var _a;\n    if ((_a = sb === null || sb === void 0 ? void 0 : sb.groupChannel) === null || _a === void 0 ? void 0 : _a.addGroupChannelHandler) {\n      sb.groupChannel.removeGroupChannelHandler(handlerId);\n      var newHandlerId = uuidv4();\n      var handler = new GroupChannelHandler({\n        onTypingStatusUpdated: function (groupChannel) {\n          // there is a possible warning in here - setState called after unmount\n          logger.info('Channel > Typing Indicator: onTypingStatusUpdated', groupChannel);\n          if (groupChannel.url === channelUrl) {\n            var members = groupChannel.getTypingUsers();\n            setTypingMembers(members);\n          }\n        }\n      });\n      sb.groupChannel.addGroupChannelHandler(newHandlerId, handler);\n      setHandlerId(newHandlerId);\n    }\n    return function () {\n      var _a;\n      setTypingMembers([]);\n      if ((_a = sb === null || sb === void 0 ? void 0 : sb.groupChannel) === null || _a === void 0 ? void 0 : _a.removeGroupChannelHandler) {\n        sb.groupChannel.removeGroupChannelHandler(handlerId);\n      }\n    };\n  }, [channelUrl]);\n  return React__default.createElement(Label, {\n    className: \"sendbird-conversation__footer__typing-indicator__text\",\n    type: LabelTypography.CAPTION_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, React__default.createElement(TypingIndicatorText, {\n    members: typingMembers\n  }));\n};\nexport { TypingIndicator, TypingIndicatorText, TypingIndicator as default };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import React__default, { useState, useEffect, useContext } from 'react';\nimport { GroupChannelHandler } from '@sendbird/chat/groupChannel';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../../chunks/bundle-DhKQeIfP.js';\nimport { L as LocalizationContext } from '../../chunks/bundle-cQZ3UZoG.js';\nimport { useSendbirdStateContext } from '../../useSendbirdStateContext.js';\nimport { u as uuidv4 } from '../../chunks/bundle-etuaqevl.js';\nimport '../../chunks/bundle-BQi9-O76.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\nimport '../../withSendbird.js';\n\nvar TypingIndicatorText = function (_a) {\n    var members = _a.members;\n    function getText() {\n        var stringSet = useContext(LocalizationContext).stringSet;\n        if (!members || members.length === 0) {\n            return '';\n        }\n        if (members && members.length === 1) {\n            return \"\".concat(members[0].nickname, \" \").concat(stringSet.TYPING_INDICATOR__IS_TYPING);\n        }\n        if (members && members.length === 2) {\n            return \"\".concat(members[0].nickname, \" \").concat(stringSet.TYPING_INDICATOR__AND, \" \").concat(members[1].nickname, \" \").concat(stringSet.TYPING_INDICATOR__ARE_TYPING);\n        }\n        return stringSet.TYPING_INDICATOR__MULTIPLE_TYPING;\n    }\n    return React__default.createElement(React__default.Fragment, null, getText());\n};\nvar TypingIndicator = function (_a) {\n    var _b, _c, _d;\n    var channelUrl = _a.channelUrl;\n    var globalStore = useSendbirdStateContext();\n    var sb = (_c = (_b = globalStore === null || globalStore === void 0 ? void 0 : globalStore.stores) === null || _b === void 0 ? void 0 : _b.sdkStore) === null || _c === void 0 ? void 0 : _c.sdk;\n    var logger = (_d = globalStore === null || globalStore === void 0 ? void 0 : globalStore.config) === null || _d === void 0 ? void 0 : _d.logger;\n    var _e = useState(uuidv4()), handlerId = _e[0], setHandlerId = _e[1];\n    var _f = useState([]), typingMembers = _f[0], setTypingMembers = _f[1];\n    useEffect(function () {\n        var _a;\n        if ((_a = sb === null || sb === void 0 ? void 0 : sb.groupChannel) === null || _a === void 0 ? void 0 : _a.addGroupChannelHandler) {\n            sb.groupChannel.removeGroupChannelHandler(handlerId);\n            var newHandlerId = uuidv4();\n            var handler = new GroupChannelHandler({\n                onTypingStatusUpdated: function (groupChannel) {\n                    // there is a possible warning in here - setState called after unmount\n                    logger.info('Channel > Typing Indicator: onTypingStatusUpdated', groupChannel);\n                    if (groupChannel.url === channelUrl) {\n                        var members = groupChannel.getTypingUsers();\n                        setTypingMembers(members);\n                    }\n                },\n            });\n            sb.groupChannel.addGroupChannelHandler(newHandlerId, handler);\n            setHandlerId(newHandlerId);\n        }\n        return function () {\n            var _a;\n            setTypingMembers([]);\n            if ((_a = sb === null || sb === void 0 ? void 0 : sb.groupChannel) === null || _a === void 0 ? void 0 : _a.removeGroupChannelHandler) {\n                sb.groupChannel.removeGroupChannelHandler(handlerId);\n            }\n        };\n    }, [channelUrl]);\n    return (React__default.createElement(Label, { className: \"sendbird-conversation__footer__typing-indicator__text\", type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 },\n        React__default.createElement(TypingIndicatorText, { members: typingMembers })));\n};\n\nexport { TypingIndicator, TypingIndicatorText, TypingIndicator as default };\n//# sourceMappingURL=TypingIndicator.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}