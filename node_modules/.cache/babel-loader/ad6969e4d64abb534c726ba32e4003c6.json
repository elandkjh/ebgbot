{"ast":null,"code":"import React__default, { useContext } from 'react';\nimport { A as Avatar } from '../../chunks/bundle-CFosTNce.js';\nimport Icon, { IconColors, IconTypes } from '../../ui/Icon.js';\nimport IconButton from '../../ui/IconButton.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../../chunks/bundle-DhKQeIfP.js';\nimport { L as LocalizationContext } from '../../chunks/bundle-cQZ3UZoG.js';\nimport { u as useOpenChannelContext, k as kFormatter } from '../../chunks/bundle-CoPuVBn-.js';\nimport { u as useMediaQueryContext } from '../../chunks/bundle-f-SpnOx2.js';\nimport '../../chunks/bundle-BQi9-O76.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../chunks/bundle-BgwzpLeQ.js';\nimport '../../chunks/bundle-DXRRGizV.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\nimport '../../chunks/bundle-BrTJ5Zbd.js';\nimport '../../chunks/bundle-CZUYMubi.js';\nimport '../../chunks/bundle-b6TpX_JP.js';\nimport '@sendbird/chat';\nimport '@sendbird/chat/openChannel';\nimport '../../chunks/bundle-etuaqevl.js';\nimport '../../chunks/bundle-DAz5E5O_.js';\nimport '../../useSendbirdStateContext.js';\nimport '../../withSendbird.js';\nimport '../../chunks/bundle-CXdo2kR_.js';\nimport '../../chunks/bundle-DxTN4_0p.js';\nimport '@sendbird/chat/groupChannel';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../chunks/bundle-CNWAfTVw.js';\nimport '../../chunks/bundle-CA85nVxp.js';\nimport 'react-dom';\nimport '../../ui/Button.js';\nimport '@sendbird/uikit-tools';\nimport 'css-vars-ponyfill';\nimport '../../chunks/bundle-DDeWOERD.js';\nimport '../../chunks/bundle-DCMGp6rH.js';\nimport '../../chunks/bundle-CwKZj-B6.js';\nimport '../../ui/SortByRow.js';\nfunction OpenchannelConversationHeader() {\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var _a = useOpenChannelContext(),\n    currentOpenChannel = _a.currentOpenChannel,\n    onChatHeaderActionClick = _a.onChatHeaderActionClick,\n    amIOperator = _a.amIOperator,\n    onBackClick = _a.onBackClick;\n  var title = currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.name;\n  var subTitle = \"\".concat(kFormatter(currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.participantCount), \" \").concat(stringSet.OPEN_CHANNEL_CONVERSATION__TITLE_PARTICIPANTS);\n  var coverImage = currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.coverUrl;\n  var isMobile = useMediaQueryContext().isMobile;\n  return React__default.createElement(\"div\", {\n    className: \"sendbird-openchannel-conversation-header\"\n  }, React__default.createElement(\"div\", {\n    className: \"sendbird-openchannel-conversation-header__left\"\n  }, isMobile && React__default.createElement(Icon, {\n    className: \"sendbird-oepnchannel-header__icon_back\",\n    onClick: onBackClick,\n    fillColor: IconColors.PRIMARY,\n    width: \"24px\",\n    height: \"24px\",\n    type: IconTypes.ARROW_LEFT\n  }), coverImage ? React__default.createElement(Avatar, {\n    className: \"sendbird-openchannel-conversation-header__left__cover-image\",\n    src: coverImage,\n    alt: \"channel cover image\",\n    width: \"32px\",\n    height: \"32px\"\n  }) : React__default.createElement(\"div\", {\n    className: \"sendbird-openchannel-conversation-header__left__cover-image--icon\",\n    style: {\n      width: 32,\n      height: 32\n    }\n  }, React__default.createElement(Icon, {\n    type: IconTypes.CHANNELS,\n    fillColor: IconColors.CONTENT,\n    width: \"18px\",\n    height: \"18px\"\n  })), React__default.createElement(Label, {\n    className: \"sendbird-openchannel-conversation-header__left__title\",\n    type: LabelTypography.H_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, title || stringSet.NO_TITLE), React__default.createElement(Label, {\n    className: \"sendbird-openchannel-conversation-header__left__sub-title\",\n    type: LabelTypography.BODY_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, subTitle || stringSet.NO_TITLE)), React__default.createElement(\"div\", {\n    className: \"sendbird-openchannel-conversation-header__right\"\n  }, React__default.createElement(IconButton, {\n    className: \"sendbird-openchannel-conversation-header__right__trigger\",\n    width: \"32px\",\n    height: \"32px\",\n    onClick: onChatHeaderActionClick\n  }, React__default.createElement(Icon, {\n    type: amIOperator ? IconTypes.INFO : IconTypes.MEMBERS,\n    fillColor: IconColors.PRIMARY,\n    width: \"24px\",\n    height: \"24px\"\n  }))));\n}\nexport { OpenchannelConversationHeader as default };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import React__default, { useContext } from 'react';\nimport { A as Avatar } from '../../chunks/bundle-CFosTNce.js';\nimport Icon, { IconColors, IconTypes } from '../../ui/Icon.js';\nimport IconButton from '../../ui/IconButton.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../../chunks/bundle-DhKQeIfP.js';\nimport { L as LocalizationContext } from '../../chunks/bundle-cQZ3UZoG.js';\nimport { u as useOpenChannelContext, k as kFormatter } from '../../chunks/bundle-CoPuVBn-.js';\nimport { u as useMediaQueryContext } from '../../chunks/bundle-f-SpnOx2.js';\nimport '../../chunks/bundle-BQi9-O76.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../chunks/bundle-BgwzpLeQ.js';\nimport '../../chunks/bundle-DXRRGizV.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\nimport '../../chunks/bundle-BrTJ5Zbd.js';\nimport '../../chunks/bundle-CZUYMubi.js';\nimport '../../chunks/bundle-b6TpX_JP.js';\nimport '@sendbird/chat';\nimport '@sendbird/chat/openChannel';\nimport '../../chunks/bundle-etuaqevl.js';\nimport '../../chunks/bundle-DAz5E5O_.js';\nimport '../../useSendbirdStateContext.js';\nimport '../../withSendbird.js';\nimport '../../chunks/bundle-CXdo2kR_.js';\nimport '../../chunks/bundle-DxTN4_0p.js';\nimport '@sendbird/chat/groupChannel';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../chunks/bundle-CNWAfTVw.js';\nimport '../../chunks/bundle-CA85nVxp.js';\nimport 'react-dom';\nimport '../../ui/Button.js';\nimport '@sendbird/uikit-tools';\nimport 'css-vars-ponyfill';\nimport '../../chunks/bundle-DDeWOERD.js';\nimport '../../chunks/bundle-DCMGp6rH.js';\nimport '../../chunks/bundle-CwKZj-B6.js';\nimport '../../ui/SortByRow.js';\n\nfunction OpenchannelConversationHeader() {\n    var stringSet = useContext(LocalizationContext).stringSet;\n    var _a = useOpenChannelContext(), currentOpenChannel = _a.currentOpenChannel, onChatHeaderActionClick = _a.onChatHeaderActionClick, amIOperator = _a.amIOperator, onBackClick = _a.onBackClick;\n    var title = currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.name;\n    var subTitle = \"\".concat(kFormatter(currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.participantCount), \" \").concat(stringSet.OPEN_CHANNEL_CONVERSATION__TITLE_PARTICIPANTS);\n    var coverImage = currentOpenChannel === null || currentOpenChannel === void 0 ? void 0 : currentOpenChannel.coverUrl;\n    var isMobile = useMediaQueryContext().isMobile;\n    return (React__default.createElement(\"div\", { className: \"sendbird-openchannel-conversation-header\" },\n        React__default.createElement(\"div\", { className: \"sendbird-openchannel-conversation-header__left\" },\n            isMobile && (React__default.createElement(Icon, { className: \"sendbird-oepnchannel-header__icon_back\", onClick: onBackClick, fillColor: IconColors.PRIMARY, width: \"24px\", height: \"24px\", type: IconTypes.ARROW_LEFT })),\n            coverImage ? (React__default.createElement(Avatar, { className: \"sendbird-openchannel-conversation-header__left__cover-image\", src: coverImage, alt: \"channel cover image\", width: \"32px\", height: \"32px\" })) : (React__default.createElement(\"div\", { className: \"sendbird-openchannel-conversation-header__left__cover-image--icon\", style: { width: 32, height: 32 } },\n                React__default.createElement(Icon, { type: IconTypes.CHANNELS, fillColor: IconColors.CONTENT, width: \"18px\", height: \"18px\" }))),\n            React__default.createElement(Label, { className: \"sendbird-openchannel-conversation-header__left__title\", type: LabelTypography.H_2, color: LabelColors.ONBACKGROUND_1 }, title || stringSet.NO_TITLE),\n            React__default.createElement(Label, { className: \"sendbird-openchannel-conversation-header__left__sub-title\", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_2 }, subTitle || stringSet.NO_TITLE)),\n        React__default.createElement(\"div\", { className: \"sendbird-openchannel-conversation-header__right\" },\n            React__default.createElement(IconButton, { className: \"sendbird-openchannel-conversation-header__right__trigger\", width: \"32px\", height: \"32px\", onClick: onChatHeaderActionClick },\n                React__default.createElement(Icon, { type: (amIOperator\n                        ? IconTypes.INFO\n                        : IconTypes.MEMBERS), fillColor: IconColors.PRIMARY, width: \"24px\", height: \"24px\" })))));\n}\n\nexport { OpenchannelConversationHeader as default };\n//# sourceMappingURL=OpenChannelHeader.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}