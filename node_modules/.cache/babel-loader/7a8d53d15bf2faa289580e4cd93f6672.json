{"ast":null,"code":"export function isSendableMessage(msg) {\n  return msg !== undefined && msg !== null && 'sendingStatus' in msg;\n}\nexport function isMyMessage(msg) {\n  let currentUserId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '##__USER_ID_IS_NOT_PROVIDED__##';\n  var _a;\n  if (!isSendableMessage(msg)) return false;\n  return ((_a = msg.sender) === null || _a === void 0 ? void 0 : _a.userId) === currentUserId;\n}\nexport function isNewMessage(msg, currentUserId) {\n  const myMessage = isMyMessage(msg, currentUserId);\n  if (myMessage) return false;\n  if (msg.isAdminMessage()) return false;\n  return msg.updatedAt === 0;\n}\nexport function getMessageUniqId(msg) {\n  if ('sendingStatus' in msg) {\n    if (msg.sendingStatus === 'succeeded') return String(msg.messageId);\n    return msg.reqId;\n  }\n  return String(msg.messageId);\n}","map":{"version":3,"names":["isSendableMessage","msg","undefined","isMyMessage","currentUserId","arguments","length","_a","sender","userId","isNewMessage","myMessage","isAdminMessage","updatedAt","getMessageUniqId","sendingStatus","String","messageId","reqId"],"sources":["D:/ebgbot/node_modules/@sendbird/uikit-react/node_modules/@sendbird/uikit-tools/dist/esm/utils/message.js"],"sourcesContent":["export function isSendableMessage(msg) {\n    return msg !== undefined && msg !== null && 'sendingStatus' in msg;\n}\nexport function isMyMessage(msg, currentUserId = '##__USER_ID_IS_NOT_PROVIDED__##') {\n    var _a;\n    if (!isSendableMessage(msg))\n        return false;\n    return ((_a = msg.sender) === null || _a === void 0 ? void 0 : _a.userId) === currentUserId;\n}\nexport function isNewMessage(msg, currentUserId) {\n    const myMessage = isMyMessage(msg, currentUserId);\n    if (myMessage)\n        return false;\n    if (msg.isAdminMessage())\n        return false;\n    return msg.updatedAt === 0;\n}\nexport function getMessageUniqId(msg) {\n    if ('sendingStatus' in msg) {\n        if (msg.sendingStatus === 'succeeded')\n            return String(msg.messageId);\n        return msg.reqId;\n    }\n    return String(msg.messageId);\n}\n"],"mappings":"AAAA,OAAO,SAASA,iBAAiBA,CAACC,GAAG,EAAE;EACnC,OAAOA,GAAG,KAAKC,SAAS,IAAID,GAAG,KAAK,IAAI,IAAI,eAAe,IAAIA,GAAG;AACtE;AACA,OAAO,SAASE,WAAWA,CAACF,GAAG,EAAqD;EAAA,IAAnDG,aAAa,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAH,SAAA,GAAAG,SAAA,MAAG,iCAAiC;EAC9E,IAAIE,EAAE;EACN,IAAI,CAACP,iBAAiB,CAACC,GAAG,CAAC,EACvB,OAAO,KAAK;EAChB,OAAO,CAAC,CAACM,EAAE,GAAGN,GAAG,CAACO,MAAM,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACE,MAAM,MAAML,aAAa;AAC/F;AACA,OAAO,SAASM,YAAYA,CAACT,GAAG,EAAEG,aAAa,EAAE;EAC7C,MAAMO,SAAS,GAAGR,WAAW,CAACF,GAAG,EAAEG,aAAa,CAAC;EACjD,IAAIO,SAAS,EACT,OAAO,KAAK;EAChB,IAAIV,GAAG,CAACW,cAAc,CAAC,CAAC,EACpB,OAAO,KAAK;EAChB,OAAOX,GAAG,CAACY,SAAS,KAAK,CAAC;AAC9B;AACA,OAAO,SAASC,gBAAgBA,CAACb,GAAG,EAAE;EAClC,IAAI,eAAe,IAAIA,GAAG,EAAE;IACxB,IAAIA,GAAG,CAACc,aAAa,KAAK,WAAW,EACjC,OAAOC,MAAM,CAACf,GAAG,CAACgB,SAAS,CAAC;IAChC,OAAOhB,GAAG,CAACiB,KAAK;EACpB;EACA,OAAOF,MAAM,CAACf,GAAG,CAACgB,SAAS,CAAC;AAChC","ignoreList":[]},"metadata":{},"sourceType":"module"}