{"ast":null,"code":"import { _ as __assign } from '../../chunks/bundle-BQi9-O76.js';\nimport React__default from 'react';\nimport ThreadListItem from './ThreadListItem.js';\nimport { useThreadContext } from '../context.js';\nimport { compareMessagesForGrouping } from '../../Channel/utils/compareMessagesForGrouping.js';\nimport { useSendbirdStateContext } from '../../useSendbirdStateContext.js';\nimport { isSameDay } from 'date-fns';\nimport { MessageProvider } from '../../Message/context.js';\nimport { g as getCaseResolvedReplyType } from '../../chunks/bundle-fHeMHhND.js';\nimport '../../chunks/bundle-CAdqcqOm.js';\nimport '../../chunks/bundle-CA85nVxp.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\nimport '../../chunks/bundle-cQZ3UZoG.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../ui/DateSeparator.js';\nimport '../../chunks/bundle-rA4afvKU.js';\nimport '../../chunks/bundle-DhKQeIfP.js';\nimport '../../chunks/bundle-D6ZpcPbH.js';\nimport '../../chunks/bundle-CXdo2kR_.js';\nimport '../../chunks/bundle-DxTN4_0p.js';\nimport '@sendbird/chat/groupChannel';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../chunks/bundle-CNWAfTVw.js';\nimport '../../chunks/bundle-BgwzpLeQ.js';\nimport 'react-dom';\nimport '../../chunks/bundle-f-SpnOx2.js';\nimport '../../ui/IconButton.js';\nimport '../../ui/Button.js';\nimport '../../ui/Icon.js';\nimport '@sendbird/uikit-tools';\nimport '../../withSendbird.js';\nimport 'css-vars-ponyfill';\nimport '@sendbird/chat';\nimport '../../chunks/bundle-etuaqevl.js';\nimport '@sendbird/chat/openChannel';\nimport '../../chunks/bundle-DDeWOERD.js';\nimport '../../chunks/bundle-DCMGp6rH.js';\nimport '../../chunks/bundle-CwKZj-B6.js';\nimport '../../ui/SortByRow.js';\nimport '../../chunks/bundle-Zvm5CMGT.js';\nimport '../../ui/FileViewer.js';\nimport '../../chunks/bundle-CFosTNce.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../chunks/bundle-DXRRGizV.js';\nimport '../../chunks/bundle-Gdl-rzQC.js';\nimport '../../chunks/bundle-BsAIw_77.js';\nimport '../../chunks/bundle-Due9yzp6.js';\nimport '../../chunks/bundle-CveCFQYP.js';\nimport '../../chunks/bundle-0qSTzMXb.js';\nimport '../../ui/MessageInput.js';\nimport '../../chunks/bundle-TZQ6dJCG.js';\nimport 'dompurify';\nimport '../../chunks/bundle-0nQK2G2O.js';\nimport '../../chunks/bundle-B6edg1g0.js';\nimport '../../chunks/bundle-DhGZA5UP.js';\nimport '../../chunks/bundle-GUbI4JcD.js';\nimport '../context/types.js';\nimport '../../chunks/bundle-BrTJ5Zbd.js';\nimport '../../ui/UserProfile.js';\nimport '../../sendbirdSelectors.js';\nimport '../../chunks/bundle-b6TpX_JP.js';\nimport '../../ui/MessageItemReactionMenu.js';\nimport '../../ui/ReactionButton.js';\nimport '../../chunks/bundle-AfQS5DGf.js';\nimport '../../chunks/bundle-vuBlPTsL.js';\nimport '../../ui/Loader.js';\nimport '../../chunks/bundle-BHK1eF5R.js';\nimport '../../chunks/bundle-F5koPk19.js';\nimport '../../ui/EmojiReactions.js';\nimport '../../ui/ReactionBadge.js';\nimport '../../ui/BottomSheet.js';\nimport '../../ui/UserListItem.js';\nimport '../../ui/MutedAvatarOverlay.js';\nimport '../../ui/Checkbox.js';\nimport '../../ui/Tooltip.js';\nimport '../../ui/TooltipWrapper.js';\nimport '../../chunks/bundle-BNDaXsLn.js';\nimport '../../ui/TextMessageItemBody.js';\nimport '../../chunks/bundle-DofK8ySe.js';\nimport '../../ui/MentionLabel.js';\nimport '../../ui/LinkLabel.js';\nimport '../../ui/OGMessageItemBody.js';\nimport '../../ui/FileMessageItemBody.js';\nimport '../../ui/TextButton.js';\nimport '../../ui/ThumbnailMessageItemBody.js';\nimport '../../chunks/bundle-BqMHiKkl.js';\nimport '../../ui/UnknownMessageItemBody.js';\nimport '../../ui/VoiceMessageItemBody.js';\nimport '../../ui/ProgressBar.js';\nimport '../../VoicePlayer/useVoicePlayer.js';\nimport '../../ui/PlaybackTime.js';\nimport '../../ui/MobileMenu.js';\nimport '../../chunks/bundle-ZVq6xGXk.js';\nimport '@sendbird/chat/message';\nimport '../../chunks/bundle-DkBecO3w.js';\nimport '../../chunks/bundle-Cf0UgZwi.js';\nimport '../../chunks/bundle-C3Ty1Yuy.js';\nimport '../../Message/hooks/useDirtyGetMentions.js';\nimport '../../chunks/bundle-T6fVCCb7.js';\nimport '../../chunks/bundle-CMLImr6T.js';\nimport '../../chunks/bundle-CpjASiz4.js';\nimport '../../chunks/bundle-CZUYMubi.js';\nfunction ThreadList(_a) {\n  var className = _a.className,\n    _b = _a.renderMessage,\n    renderMessage = _b === void 0 ? function (props) {\n      return React__default.createElement(ThreadListItem, __assign({}, props));\n    } : _b,\n    renderCustomSeparator = _a.renderCustomSeparator,\n    scrollRef = _a.scrollRef,\n    scrollBottom = _a.scrollBottom;\n  var config = useSendbirdStateContext().config;\n  var userId = config.userId;\n  var _c = useThreadContext(),\n    currentChannel = _c.currentChannel,\n    allThreadMessages = _c.allThreadMessages,\n    localThreadMessages = _c.localThreadMessages;\n  return React__default.createElement(\"div\", {\n    className: \"sendbird-thread-list \".concat(className)\n  }, allThreadMessages.map(function (message, idx) {\n    var _a;\n    var isByMe = ((_a = message === null || message === void 0 ? void 0 : message.sender) === null || _a === void 0 ? void 0 : _a.userId) === userId;\n    var prevMessage = allThreadMessages[idx - 1];\n    var nextMessage = allThreadMessages[idx + 1];\n    // eslint-disable-next-line no-constant-condition\n    var _b = compareMessagesForGrouping(prevMessage, message, nextMessage, currentChannel, getCaseResolvedReplyType(config.groupChannel.replyType).upperCase),\n      chainTop = _b[0],\n      chainBottom = _b[1];\n    var hasSeparator = !((prevMessage === null || prevMessage === void 0 ? void 0 : prevMessage.createdAt) > 0 && isSameDay(message === null || message === void 0 ? void 0 : message.createdAt, prevMessage === null || prevMessage === void 0 ? void 0 : prevMessage.createdAt));\n    var handleScroll = function () {\n      var current = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;\n      if (current && scrollBottom) {\n        var bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;\n        if (scrollBottom < bottom) {\n          current.scrollTop += bottom - scrollBottom;\n        }\n      }\n    };\n    return React__default.createElement(MessageProvider, {\n      message: message,\n      isByMe: isByMe,\n      key: message === null || message === void 0 ? void 0 : message.messageId\n    }, renderMessage({\n      message: message,\n      chainTop: chainTop,\n      chainBottom: chainBottom,\n      hasSeparator: hasSeparator,\n      renderCustomSeparator: renderCustomSeparator,\n      handleScroll: handleScroll\n    }));\n  }), localThreadMessages.map(function (message) {\n    var _a;\n    var isByMe = ((_a = message === null || message === void 0 ? void 0 : message.sender) === null || _a === void 0 ? void 0 : _a.userId) === userId;\n    var handleScroll = function () {\n      var current = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;\n      if (current) {\n        var bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;\n        if (scrollBottom < bottom) {\n          current.scrollTop += bottom - scrollBottom;\n        }\n      }\n    };\n    return React__default.createElement(MessageProvider, {\n      message: message,\n      isByMe: isByMe,\n      key: message === null || message === void 0 ? void 0 : message.messageId\n    }, renderMessage({\n      message: message,\n      hasSeparator: false,\n      renderCustomSeparator: renderCustomSeparator,\n      handleScroll: handleScroll\n    }));\n  }));\n}\nexport { ThreadList as default };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import { _ as __assign } from '../../chunks/bundle-BQi9-O76.js';\nimport React__default from 'react';\nimport ThreadListItem from './ThreadListItem.js';\nimport { useThreadContext } from '../context.js';\nimport { compareMessagesForGrouping } from '../../Channel/utils/compareMessagesForGrouping.js';\nimport { useSendbirdStateContext } from '../../useSendbirdStateContext.js';\nimport { isSameDay } from 'date-fns';\nimport { MessageProvider } from '../../Message/context.js';\nimport { g as getCaseResolvedReplyType } from '../../chunks/bundle-fHeMHhND.js';\nimport '../../chunks/bundle-CAdqcqOm.js';\nimport '../../chunks/bundle-CA85nVxp.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\nimport '../../chunks/bundle-cQZ3UZoG.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../ui/DateSeparator.js';\nimport '../../chunks/bundle-rA4afvKU.js';\nimport '../../chunks/bundle-DhKQeIfP.js';\nimport '../../chunks/bundle-D6ZpcPbH.js';\nimport '../../chunks/bundle-CXdo2kR_.js';\nimport '../../chunks/bundle-DxTN4_0p.js';\nimport '@sendbird/chat/groupChannel';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../chunks/bundle-CNWAfTVw.js';\nimport '../../chunks/bundle-BgwzpLeQ.js';\nimport 'react-dom';\nimport '../../chunks/bundle-f-SpnOx2.js';\nimport '../../ui/IconButton.js';\nimport '../../ui/Button.js';\nimport '../../ui/Icon.js';\nimport '@sendbird/uikit-tools';\nimport '../../withSendbird.js';\nimport 'css-vars-ponyfill';\nimport '@sendbird/chat';\nimport '../../chunks/bundle-etuaqevl.js';\nimport '@sendbird/chat/openChannel';\nimport '../../chunks/bundle-DDeWOERD.js';\nimport '../../chunks/bundle-DCMGp6rH.js';\nimport '../../chunks/bundle-CwKZj-B6.js';\nimport '../../ui/SortByRow.js';\nimport '../../chunks/bundle-Zvm5CMGT.js';\nimport '../../ui/FileViewer.js';\nimport '../../chunks/bundle-CFosTNce.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../chunks/bundle-DXRRGizV.js';\nimport '../../chunks/bundle-Gdl-rzQC.js';\nimport '../../chunks/bundle-BsAIw_77.js';\nimport '../../chunks/bundle-Due9yzp6.js';\nimport '../../chunks/bundle-CveCFQYP.js';\nimport '../../chunks/bundle-0qSTzMXb.js';\nimport '../../ui/MessageInput.js';\nimport '../../chunks/bundle-TZQ6dJCG.js';\nimport 'dompurify';\nimport '../../chunks/bundle-0nQK2G2O.js';\nimport '../../chunks/bundle-B6edg1g0.js';\nimport '../../chunks/bundle-DhGZA5UP.js';\nimport '../../chunks/bundle-GUbI4JcD.js';\nimport '../context/types.js';\nimport '../../chunks/bundle-BrTJ5Zbd.js';\nimport '../../ui/UserProfile.js';\nimport '../../sendbirdSelectors.js';\nimport '../../chunks/bundle-b6TpX_JP.js';\nimport '../../ui/MessageItemReactionMenu.js';\nimport '../../ui/ReactionButton.js';\nimport '../../chunks/bundle-AfQS5DGf.js';\nimport '../../chunks/bundle-vuBlPTsL.js';\nimport '../../ui/Loader.js';\nimport '../../chunks/bundle-BHK1eF5R.js';\nimport '../../chunks/bundle-F5koPk19.js';\nimport '../../ui/EmojiReactions.js';\nimport '../../ui/ReactionBadge.js';\nimport '../../ui/BottomSheet.js';\nimport '../../ui/UserListItem.js';\nimport '../../ui/MutedAvatarOverlay.js';\nimport '../../ui/Checkbox.js';\nimport '../../ui/Tooltip.js';\nimport '../../ui/TooltipWrapper.js';\nimport '../../chunks/bundle-BNDaXsLn.js';\nimport '../../ui/TextMessageItemBody.js';\nimport '../../chunks/bundle-DofK8ySe.js';\nimport '../../ui/MentionLabel.js';\nimport '../../ui/LinkLabel.js';\nimport '../../ui/OGMessageItemBody.js';\nimport '../../ui/FileMessageItemBody.js';\nimport '../../ui/TextButton.js';\nimport '../../ui/ThumbnailMessageItemBody.js';\nimport '../../chunks/bundle-BqMHiKkl.js';\nimport '../../ui/UnknownMessageItemBody.js';\nimport '../../ui/VoiceMessageItemBody.js';\nimport '../../ui/ProgressBar.js';\nimport '../../VoicePlayer/useVoicePlayer.js';\nimport '../../ui/PlaybackTime.js';\nimport '../../ui/MobileMenu.js';\nimport '../../chunks/bundle-ZVq6xGXk.js';\nimport '@sendbird/chat/message';\nimport '../../chunks/bundle-DkBecO3w.js';\nimport '../../chunks/bundle-Cf0UgZwi.js';\nimport '../../chunks/bundle-C3Ty1Yuy.js';\nimport '../../Message/hooks/useDirtyGetMentions.js';\nimport '../../chunks/bundle-T6fVCCb7.js';\nimport '../../chunks/bundle-CMLImr6T.js';\nimport '../../chunks/bundle-CpjASiz4.js';\nimport '../../chunks/bundle-CZUYMubi.js';\n\nfunction ThreadList(_a) {\n    var className = _a.className, _b = _a.renderMessage, renderMessage = _b === void 0 ? function (props) { return React__default.createElement(ThreadListItem, __assign({}, props)); } : _b, renderCustomSeparator = _a.renderCustomSeparator, scrollRef = _a.scrollRef, scrollBottom = _a.scrollBottom;\n    var config = useSendbirdStateContext().config;\n    var userId = config.userId;\n    var _c = useThreadContext(), currentChannel = _c.currentChannel, allThreadMessages = _c.allThreadMessages, localThreadMessages = _c.localThreadMessages;\n    return (React__default.createElement(\"div\", { className: \"sendbird-thread-list \".concat(className) },\n        allThreadMessages.map(function (message, idx) {\n            var _a;\n            var isByMe = ((_a = message === null || message === void 0 ? void 0 : message.sender) === null || _a === void 0 ? void 0 : _a.userId) === userId;\n            var prevMessage = allThreadMessages[idx - 1];\n            var nextMessage = allThreadMessages[idx + 1];\n            // eslint-disable-next-line no-constant-condition\n            var _b = compareMessagesForGrouping(prevMessage, message, nextMessage, currentChannel, getCaseResolvedReplyType(config.groupChannel.replyType).upperCase)\n                , chainTop = _b[0], chainBottom = _b[1];\n            var hasSeparator = !((prevMessage === null || prevMessage === void 0 ? void 0 : prevMessage.createdAt) > 0 && (isSameDay(message === null || message === void 0 ? void 0 : message.createdAt, prevMessage === null || prevMessage === void 0 ? void 0 : prevMessage.createdAt)));\n            var handleScroll = function () {\n                var current = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;\n                if (current && scrollBottom) {\n                    var bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;\n                    if (scrollBottom < bottom) {\n                        current.scrollTop += bottom - scrollBottom;\n                    }\n                }\n            };\n            return (React__default.createElement(MessageProvider, { message: message, isByMe: isByMe, key: message === null || message === void 0 ? void 0 : message.messageId }, renderMessage({\n                message: message,\n                chainTop: chainTop,\n                chainBottom: chainBottom,\n                hasSeparator: hasSeparator,\n                renderCustomSeparator: renderCustomSeparator,\n                handleScroll: handleScroll,\n            })));\n        }),\n        localThreadMessages.map(function (message) {\n            var _a;\n            var isByMe = ((_a = message === null || message === void 0 ? void 0 : message.sender) === null || _a === void 0 ? void 0 : _a.userId) === userId;\n            var handleScroll = function () {\n                var current = scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current;\n                if (current) {\n                    var bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;\n                    if (scrollBottom < bottom) {\n                        current.scrollTop += bottom - scrollBottom;\n                    }\n                }\n            };\n            return (React__default.createElement(MessageProvider, { message: message, isByMe: isByMe, key: message === null || message === void 0 ? void 0 : message.messageId }, renderMessage({\n                message: message,\n                hasSeparator: false,\n                renderCustomSeparator: renderCustomSeparator,\n                handleScroll: handleScroll,\n            })));\n        })));\n}\n\nexport { ThreadList as default };\n//# sourceMappingURL=ThreadList.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}