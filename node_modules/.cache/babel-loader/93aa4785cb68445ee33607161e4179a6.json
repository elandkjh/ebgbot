{"ast":null,"code":"import React__default from 'react';\nimport IconButton from '../ui/IconButton.js';\nimport Icon, { IconTypes, IconColors } from '../ui/Icon.js';\nimport CreateChannel from '../CreateChannel.js';\nimport { useSendbirdStateContext } from '../useSendbirdStateContext.js';\nvar AddGroupChannelView = function (_a) {\n  var createChannelVisible = _a.createChannelVisible,\n    onChangeCreateChannelVisible = _a.onChangeCreateChannelVisible,\n    onBeforeCreateChannel = _a.onBeforeCreateChannel,\n    onCreateChannelClick = _a.onCreateChannelClick,\n    onChannelCreated = _a.onChannelCreated;\n  var config = useSendbirdStateContext().config;\n  return React__default.createElement(React__default.Fragment, null, React__default.createElement(IconButton, {\n    height: '32px',\n    width: '32px',\n    disabled: !config.isOnline,\n    onClick: function () {\n      return onChangeCreateChannelVisible(true);\n    }\n  }, React__default.createElement(Icon, {\n    type: IconTypes.CREATE,\n    fillColor: IconColors.PRIMARY,\n    width: '24px',\n    height: '24px'\n  })), createChannelVisible && React__default.createElement(CreateChannel, {\n    onCancel: function () {\n      return onChangeCreateChannelVisible(false);\n    },\n    onChannelCreated: function (channel) {\n      onChannelCreated === null || onChannelCreated === void 0 ? void 0 : onChannelCreated(channel);\n      onChangeCreateChannelVisible(false);\n    },\n    onBeforeCreateChannel: onBeforeCreateChannel,\n    onCreateChannelClick: onCreateChannelClick\n  }));\n};\nexport { AddGroupChannelView as A };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import React__default from 'react';\nimport IconButton from '../ui/IconButton.js';\nimport Icon, { IconTypes, IconColors } from '../ui/Icon.js';\nimport CreateChannel from '../CreateChannel.js';\nimport { useSendbirdStateContext } from '../useSendbirdStateContext.js';\n\nvar AddGroupChannelView = function (_a) {\n    var createChannelVisible = _a.createChannelVisible, onChangeCreateChannelVisible = _a.onChangeCreateChannelVisible, onBeforeCreateChannel = _a.onBeforeCreateChannel, onCreateChannelClick = _a.onCreateChannelClick, onChannelCreated = _a.onChannelCreated;\n    var config = useSendbirdStateContext().config;\n    return (React__default.createElement(React__default.Fragment, null,\n        React__default.createElement(IconButton, { height: '32px', width: '32px', disabled: !config.isOnline, onClick: function () { return onChangeCreateChannelVisible(true); } },\n            React__default.createElement(Icon, { type: IconTypes.CREATE, fillColor: IconColors.PRIMARY, width: '24px', height: '24px' })),\n        createChannelVisible && (React__default.createElement(CreateChannel, { onCancel: function () { return onChangeCreateChannelVisible(false); }, onChannelCreated: function (channel) {\n                onChannelCreated === null || onChannelCreated === void 0 ? void 0 : onChannelCreated(channel);\n                onChangeCreateChannelVisible(false);\n            }, onBeforeCreateChannel: onBeforeCreateChannel, onCreateChannelClick: onCreateChannelClick }))));\n};\n\nexport { AddGroupChannelView as A };\n//# sourceMappingURL=bundle-Ba2Z_B16.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}