{"ast":null,"code":"// we use pubsub to sync events between multiple components(example - ChannelList, Channel)\n// for example, if customer sends a message from their custom component\n// without pubsub,we would not be able to listen to it\n// in our ChannelList or Conversation\nvar pubSubFactory = function (opts) {\n  var topics = {};\n  return {\n    __getTopics: function () {\n      return topics;\n    },\n    subscribe: function (topic, listener) {\n      var _a;\n      (_a = topics[topic]) !== null && _a !== void 0 ? _a : topics[topic] = new Set();\n      topics[topic].add(listener);\n      return {\n        remove: function () {\n          topics[topic].delete(listener);\n        }\n      };\n    },\n    publish: function (topic, info) {\n      if (topics[topic]) {\n        topics[topic].forEach(function (fn) {\n          if (opts === null || opts === void 0 ? void 0 : opts.publishSynchronous) {\n            fn(info !== undefined ? info : {});\n          } else {\n            setTimeout(function () {\n              return fn(info !== undefined ? info : {});\n            }, 0);\n          }\n        });\n      }\n    }\n  };\n};\nexport { pubSubFactory as p };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["// we use pubsub to sync events between multiple components(example - ChannelList, Channel)\n// for example, if customer sends a message from their custom component\n// without pubsub,we would not be able to listen to it\n// in our ChannelList or Conversation\nvar pubSubFactory = function (opts) {\n    var topics = {};\n    return {\n        __getTopics: function () { return topics; },\n        subscribe: function (topic, listener) {\n            var _a;\n            (_a = topics[topic]) !== null && _a !== void 0 ? _a : (topics[topic] = new Set());\n            topics[topic].add(listener);\n            return {\n                remove: function () {\n                    topics[topic].delete(listener);\n                },\n            };\n        },\n        publish: function (topic, info) {\n            if (topics[topic]) {\n                topics[topic].forEach(function (fn) {\n                    if (opts === null || opts === void 0 ? void 0 : opts.publishSynchronous) {\n                        fn(info !== undefined ? info : {});\n                    }\n                    else {\n                        setTimeout(function () { return fn(info !== undefined ? info : {}); }, 0);\n                    }\n                });\n            }\n        },\n    };\n};\n\nexport { pubSubFactory as p };\n//# sourceMappingURL=bundle-Df65wuUZ.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}