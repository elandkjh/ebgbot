{"ast":null,"code":"import { useRef, useEffect } from 'react';\nimport { usePreservedCallback } from '@sendbird/uikit-tools';\n\n/**\n * Note: `leading` has higher priority rather than `trailing`\n * */\nfunction useThrottleCallback(callback, delay, options) {\n  if (options === void 0) {\n    options = {\n      leading: true,\n      trailing: false\n    };\n  }\n  var timer = useRef(null);\n  var trailingArgs = useRef(null);\n  useEffect(function () {\n    return function () {\n      if (timer.current) clearTimeout(timer.current);\n    };\n  }, []);\n  return usePreservedCallback(function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    if (timer.current) {\n      trailingArgs.current = args;\n      return;\n    }\n    if (options.leading) {\n      callback.apply(void 0, args);\n    } else {\n      trailingArgs.current = args;\n    }\n    var invoke = function () {\n      if (options.trailing && trailingArgs.current) {\n        callback.apply(void 0, trailingArgs.current);\n        trailingArgs.current = null;\n        timer.current = setTimeout(invoke, delay);\n      } else {\n        timer.current = null;\n      }\n    };\n    timer.current = setTimeout(invoke, delay);\n  });\n}\nexport { useThrottleCallback as u };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import { useRef, useEffect } from 'react';\nimport { usePreservedCallback } from '@sendbird/uikit-tools';\n\n/**\n * Note: `leading` has higher priority rather than `trailing`\n * */\nfunction useThrottleCallback(callback, delay, options) {\n    if (options === void 0) { options = {\n        leading: true,\n        trailing: false,\n    }; }\n    var timer = useRef(null);\n    var trailingArgs = useRef(null);\n    useEffect(function () {\n        return function () {\n            if (timer.current)\n                clearTimeout(timer.current);\n        };\n    }, []);\n    return usePreservedCallback(function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (timer.current) {\n            trailingArgs.current = args;\n            return;\n        }\n        if (options.leading) {\n            callback.apply(void 0, args);\n        }\n        else {\n            trailingArgs.current = args;\n        }\n        var invoke = function () {\n            if (options.trailing && trailingArgs.current) {\n                callback.apply(void 0, trailingArgs.current);\n                trailingArgs.current = null;\n                timer.current = setTimeout(invoke, delay);\n            }\n            else {\n                timer.current = null;\n            }\n        };\n        timer.current = setTimeout(invoke, delay);\n    });\n}\n\nexport { useThrottleCallback as u };\n//# sourceMappingURL=bundle-DSn10d8F.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}