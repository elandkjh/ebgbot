{"ast":null,"code":"import { c as __spreadArray } from '../chunks/bundle-BQi9-O76.js';\nimport React__default, { useRef, useContext } from 'react';\nimport '@sendbird/uikit-tools';\nimport '../withSendbird.js';\nimport '../chunks/bundle-CXdo2kR_.js';\nimport 'css-vars-ponyfill';\nimport '../chunks/bundle-DxTN4_0p.js';\nimport '@sendbird/chat';\nimport '@sendbird/chat/openChannel';\nimport '@sendbird/chat/groupChannel';\nimport { c as classnames } from '../chunks/bundle-BgwzpLeQ.js';\nimport '../chunks/bundle-DDeWOERD.js';\nimport { u as useLocalization } from '../chunks/bundle-cQZ3UZoG.js';\nimport '../chunks/bundle-f-SpnOx2.js';\nimport { C as ContextMenu, b as MenuItems } from '../chunks/bundle-CwKZj-B6.js';\nimport { useSendbirdStateContext } from '../useSendbirdStateContext.js';\nimport { a as UserProfileContext } from '../chunks/bundle-BrTJ5Zbd.js';\nimport { A as Avatar } from '../chunks/bundle-CFosTNce.js';\nimport MutedAvatarOverlay from './MutedAvatarOverlay.js';\nimport Checkbox from './Checkbox.js';\nimport UserProfile from './UserProfile.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../chunks/bundle-DhKQeIfP.js';\nimport { p as pxToNumber } from '../chunks/bundle-DXRRGizV.js';\nimport 'react-dom';\nimport './IconButton.js';\nimport './Button.js';\nimport './Icon.js';\nimport '../chunks/bundle-etuaqevl.js';\nimport '../chunks/bundle-DCMGp6rH.js';\nimport '../utils/message/getOutgoingMessageState.js';\nimport '../chunks/bundle-CNWAfTVw.js';\nimport '../chunks/bundle-CA85nVxp.js';\nimport '../chunks/bundle-Bwk5KPwK.js';\nimport '../chunks/bundle-bdDHjHH6.js';\nimport './SortByRow.js';\nimport './ImageRenderer.js';\nimport '../sendbirdSelectors.js';\nimport '../chunks/bundle-b6TpX_JP.js';\nfunction UserListItem(_a) {\n  var user = _a.user,\n    channel = _a.channel,\n    _b = _a.className,\n    className = _b === void 0 ? undefined : _b,\n    checked = _a.checked,\n    checkBox = _a.checkBox,\n    isOperator = _a.isOperator,\n    disabled = _a.disabled,\n    disableMessaging = _a.disableMessaging,\n    action = _a.action,\n    onChange = _a.onChange,\n    _c = _a.avatarSize,\n    avatarSize = _c === void 0 ? '40px' : _c,\n    onClick = _a.onClick,\n    onUserAvatarClick = _a.onUserAvatarClick,\n    renderListItemMenu = _a.renderListItemMenu,\n    _d = _a.size,\n    size = _d === void 0 ? 'normal' : _d;\n  var operator = isOperator !== null && isOperator !== void 0 ? isOperator : (user === null || user === void 0 ? void 0 : user.role) === 'operator';\n  var uniqueKey = user.userId;\n  var actionRef = useRef(null);\n  var parentRef = useRef(null);\n  var avatarRef = useRef(null);\n  var _e = useContext(UserProfileContext),\n    disableUserProfile = _e.disableUserProfile,\n    renderUserProfile = _e.renderUserProfile;\n  var stringSet = useLocalization().stringSet;\n  var config = useSendbirdStateContext().config;\n  var currentUser = config.userId;\n  var itemClassName = size === 'small' ? 'sendbird-user-list-item--small' : 'sendbird-user-list-item';\n  var avatarClassName = size === 'small' ? 'sendbird-user-list-item--small__avatar' : 'sendbird-user-list-item__avatar';\n  var titleClassName = size === 'small' ? 'sendbird-user-list-item--small__title' : 'sendbird-user-list-item__title';\n  var subtitleClassName = size === 'small' ? 'sendbird-user-list-item--small__subtitle' : 'sendbird-user-list-item__subtitle';\n  var checkboxClassName = size === 'small' ? 'sendbird-user-list-item--small__checkbox' : 'sendbird-user-list-item__checkbox';\n  var actionClassName = size === 'small' ? 'sendbird-user-list-item--small__action' : 'sendbird-user-list-item__action';\n  var operatorClassName = size === 'small' ? 'sendbird-user-list-item--small__operator' : 'sendbird-user-list-item__operator';\n  return React__default.createElement(\"div\", {\n    className: classnames.apply(void 0, __spreadArray([itemClassName], Array.isArray(className) ? className : [className], false)),\n    ref: parentRef\n  }, React__default.createElement(ContextMenu, {\n    menuTrigger: function (toggleDropdown) {\n      return React__default.createElement(React__default.Fragment, null, React__default.createElement(Avatar, {\n        className: avatarClassName,\n        ref: avatarRef,\n        src: (user === null || user === void 0 ? void 0 : user.profileUrl) || (user === null || user === void 0 ? void 0 : user.plainProfileUrl) || '',\n        width: avatarSize,\n        height: avatarSize,\n        onClick: function () {\n          var _a;\n          if (!disableUserProfile) {\n            toggleDropdown();\n            (_a = onUserAvatarClick !== null && onUserAvatarClick !== void 0 ? onUserAvatarClick : onClick) === null || _a === void 0 ? void 0 : _a();\n          }\n        }\n      }), (user === null || user === void 0 ? void 0 : user.isMuted) && React__default.createElement(MutedAvatarOverlay, {\n        height: pxToNumber(avatarSize),\n        width: pxToNumber(avatarSize)\n      }));\n    },\n    menuItems: function (closeDropdown) {\n      return renderUserProfile ? renderUserProfile({\n        user: user,\n        currentUserId: currentUser !== null && currentUser !== void 0 ? currentUser : '',\n        close: closeDropdown,\n        avatarRef: avatarRef\n      }) : React__default.createElement(MenuItems, {\n        openLeft: true,\n        parentRef: avatarRef,\n        parentContainRef: avatarRef,\n        closeDropdown: closeDropdown,\n        style: {\n          paddingTop: '0px',\n          paddingBottom: '0px'\n        }\n      }, React__default.createElement(UserProfile, {\n        disableMessaging: disableMessaging,\n        user: user,\n        currentUserId: currentUser,\n        onSuccess: closeDropdown\n      }));\n    }\n  }), React__default.createElement(Label, {\n    className: titleClassName,\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, user.nickname || stringSet.NO_NAME, currentUser === user.userId && stringSet.CHANNEL_SETTING__MEMBERS__YOU), !user.nickname && React__default.createElement(Label, {\n    className: subtitleClassName,\n    type: LabelTypography.CAPTION_3,\n    color: LabelColors.ONBACKGROUND_2\n  }, user.userId), checkBox && React__default.createElement(\"label\", {\n    className: checkboxClassName,\n    htmlFor: uniqueKey\n  }, React__default.createElement(Checkbox, {\n    id: uniqueKey,\n    checked: checked,\n    disabled: disabled,\n    onChange: function (event) {\n      return onChange === null || onChange === void 0 ? void 0 : onChange(event);\n    }\n  })), operator && React__default.createElement(Label, {\n    className: classnames(operatorClassName, checkBox && 'checkbox'),\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, stringSet.LABEL__OPERATOR), !checkBox && !renderListItemMenu && action && React__default.createElement(\"div\", {\n    className: actionClassName,\n    ref: actionRef\n  }, action({\n    actionRef: actionRef,\n    parentRef: parentRef\n  })), !checkBox && renderListItemMenu && React__default.createElement(\"div\", {\n    className: actionClassName,\n    ref: actionRef\n  }, renderListItemMenu({\n    channel: channel,\n    user: user\n  })));\n}\nexport { UserListItem, UserListItem as default };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import { c as __spreadArray } from '../chunks/bundle-BQi9-O76.js';\nimport React__default, { useRef, useContext } from 'react';\nimport '@sendbird/uikit-tools';\nimport '../withSendbird.js';\nimport '../chunks/bundle-CXdo2kR_.js';\nimport 'css-vars-ponyfill';\nimport '../chunks/bundle-DxTN4_0p.js';\nimport '@sendbird/chat';\nimport '@sendbird/chat/openChannel';\nimport '@sendbird/chat/groupChannel';\nimport { c as classnames } from '../chunks/bundle-BgwzpLeQ.js';\nimport '../chunks/bundle-DDeWOERD.js';\nimport { u as useLocalization } from '../chunks/bundle-cQZ3UZoG.js';\nimport '../chunks/bundle-f-SpnOx2.js';\nimport { C as ContextMenu, b as MenuItems } from '../chunks/bundle-CwKZj-B6.js';\nimport { useSendbirdStateContext } from '../useSendbirdStateContext.js';\nimport { a as UserProfileContext } from '../chunks/bundle-BrTJ5Zbd.js';\nimport { A as Avatar } from '../chunks/bundle-CFosTNce.js';\nimport MutedAvatarOverlay from './MutedAvatarOverlay.js';\nimport Checkbox from './Checkbox.js';\nimport UserProfile from './UserProfile.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../chunks/bundle-DhKQeIfP.js';\nimport { p as pxToNumber } from '../chunks/bundle-DXRRGizV.js';\nimport 'react-dom';\nimport './IconButton.js';\nimport './Button.js';\nimport './Icon.js';\nimport '../chunks/bundle-etuaqevl.js';\nimport '../chunks/bundle-DCMGp6rH.js';\nimport '../utils/message/getOutgoingMessageState.js';\nimport '../chunks/bundle-CNWAfTVw.js';\nimport '../chunks/bundle-CA85nVxp.js';\nimport '../chunks/bundle-Bwk5KPwK.js';\nimport '../chunks/bundle-bdDHjHH6.js';\nimport './SortByRow.js';\nimport './ImageRenderer.js';\nimport '../sendbirdSelectors.js';\nimport '../chunks/bundle-b6TpX_JP.js';\n\nfunction UserListItem(_a) {\n    var user = _a.user, channel = _a.channel, _b = _a.className, className = _b === void 0 ? undefined : _b, checked = _a.checked, checkBox = _a.checkBox, isOperator = _a.isOperator, disabled = _a.disabled, disableMessaging = _a.disableMessaging, action = _a.action, onChange = _a.onChange, _c = _a.avatarSize, avatarSize = _c === void 0 ? '40px' : _c, onClick = _a.onClick, onUserAvatarClick = _a.onUserAvatarClick, renderListItemMenu = _a.renderListItemMenu, _d = _a.size, size = _d === void 0 ? 'normal' : _d;\n    var operator = isOperator !== null && isOperator !== void 0 ? isOperator : (user === null || user === void 0 ? void 0 : user.role) === 'operator';\n    var uniqueKey = user.userId;\n    var actionRef = useRef(null);\n    var parentRef = useRef(null);\n    var avatarRef = useRef(null);\n    var _e = useContext(UserProfileContext), disableUserProfile = _e.disableUserProfile, renderUserProfile = _e.renderUserProfile;\n    var stringSet = useLocalization().stringSet;\n    var config = useSendbirdStateContext().config;\n    var currentUser = config.userId;\n    var itemClassName = size === 'small' ? 'sendbird-user-list-item--small' : 'sendbird-user-list-item';\n    var avatarClassName = size === 'small' ? 'sendbird-user-list-item--small__avatar' : 'sendbird-user-list-item__avatar';\n    var titleClassName = size === 'small' ? 'sendbird-user-list-item--small__title' : 'sendbird-user-list-item__title';\n    var subtitleClassName = size === 'small' ? 'sendbird-user-list-item--small__subtitle' : 'sendbird-user-list-item__subtitle';\n    var checkboxClassName = size === 'small' ? 'sendbird-user-list-item--small__checkbox' : 'sendbird-user-list-item__checkbox';\n    var actionClassName = size === 'small' ? 'sendbird-user-list-item--small__action' : 'sendbird-user-list-item__action';\n    var operatorClassName = size === 'small' ? 'sendbird-user-list-item--small__operator' : 'sendbird-user-list-item__operator';\n    return (React__default.createElement(\"div\", { className: classnames.apply(void 0, __spreadArray([itemClassName], (Array.isArray(className) ? className : [className]), false)), ref: parentRef },\n        React__default.createElement(ContextMenu, { menuTrigger: function (toggleDropdown) { return (React__default.createElement(React__default.Fragment, null,\n                React__default.createElement(Avatar, { className: avatarClassName, ref: avatarRef, src: (user === null || user === void 0 ? void 0 : user.profileUrl) || (user === null || user === void 0 ? void 0 : user.plainProfileUrl) || '', width: avatarSize, height: avatarSize, onClick: function () {\n                        var _a;\n                        if (!disableUserProfile) {\n                            toggleDropdown();\n                            (_a = (onUserAvatarClick !== null && onUserAvatarClick !== void 0 ? onUserAvatarClick : onClick)) === null || _a === void 0 ? void 0 : _a();\n                        }\n                    } }),\n                (user === null || user === void 0 ? void 0 : user.isMuted) && (React__default.createElement(MutedAvatarOverlay, { height: pxToNumber(avatarSize), width: pxToNumber(avatarSize) })))); }, menuItems: function (closeDropdown) { return (renderUserProfile\n                ? renderUserProfile({\n                    user: user,\n                    currentUserId: currentUser !== null && currentUser !== void 0 ? currentUser : '',\n                    close: closeDropdown,\n                    avatarRef: avatarRef,\n                })\n                : (React__default.createElement(MenuItems, { openLeft: true, parentRef: avatarRef, parentContainRef: avatarRef, closeDropdown: closeDropdown, style: { paddingTop: '0px', paddingBottom: '0px' } },\n                    React__default.createElement(UserProfile, { disableMessaging: disableMessaging, user: user, currentUserId: currentUser, onSuccess: closeDropdown })))); } }),\n        React__default.createElement(Label, { className: titleClassName, type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 },\n            user.nickname || stringSet.NO_NAME,\n            (currentUser === user.userId) && (stringSet.CHANNEL_SETTING__MEMBERS__YOU)),\n        !user.nickname && (React__default.createElement(Label, { className: subtitleClassName, type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2 }, user.userId)),\n        checkBox && (React__default.createElement(\"label\", { className: checkboxClassName, htmlFor: uniqueKey },\n            React__default.createElement(Checkbox, { id: uniqueKey, checked: checked, disabled: disabled, onChange: function (event) { return onChange === null || onChange === void 0 ? void 0 : onChange(event); } }))),\n        operator && (React__default.createElement(Label, { className: classnames(operatorClassName, checkBox && 'checkbox'), type: LabelTypography.SUBTITLE_2, color: LabelColors.ONBACKGROUND_2 }, stringSet.LABEL__OPERATOR)),\n        !checkBox && !renderListItemMenu && action && (React__default.createElement(\"div\", { className: actionClassName, ref: actionRef }, action({ actionRef: actionRef, parentRef: parentRef }))),\n        !checkBox && renderListItemMenu && (React__default.createElement(\"div\", { className: actionClassName, ref: actionRef }, renderListItemMenu({ channel: channel, user: user })))));\n}\n\nexport { UserListItem, UserListItem as default };\n//# sourceMappingURL=UserListItem.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}