{"ast":null,"code":"import { e as __extends, _ as __assign, c as __spreadArray } from './bundle-BQi9-O76.js';\nimport React__default, { useState, useRef, useCallback, useEffect, createContext, useContext } from 'react';\nimport { createPortal } from 'react-dom';\nimport { c as classnames } from './bundle-BgwzpLeQ.js';\nimport { Role } from '@sendbird/chat';\nimport { OpenChannel } from '@sendbird/chat/openChannel';\nimport SortByRow from '../ui/SortByRow.js';\nimport '../withSendbird.js';\nimport '../ui/IconButton.js';\nimport './bundle-DxTN4_0p.js';\nimport './bundle-cQZ3UZoG.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from './bundle-DhKQeIfP.js';\nvar APP_LAYOUT_ROOT = 'sendbird-app__layout';\nvar HEIGHT_PADDING = 60;\nvar MenuItems$1 = /** @class */function (_super) {\n  __extends(MenuItems, _super);\n  function MenuItems(props) {\n    var _this = _super.call(this, props) || this;\n    _this.menuRef = React__default.createRef();\n    _this.setupEvents = function () {\n      var closeDropdown = _this.props.closeDropdown;\n      var menuRef = _this.menuRef;\n      var handleClickOutside = function (event) {\n        var _a, _b;\n        if ((menuRef === null || menuRef === void 0 ? void 0 : menuRef.current) && !((_b = (_a = menuRef === null || menuRef === void 0 ? void 0 : menuRef.current) === null || _a === void 0 ? void 0 : _a.contains) === null || _b === void 0 ? void 0 : _b.call(_a, event.target))) {\n          closeDropdown === null || closeDropdown === void 0 ? void 0 : closeDropdown();\n        }\n      };\n      _this.setState({\n        handleClickOutside: handleClickOutside\n      });\n      document.addEventListener('mousedown', handleClickOutside);\n    };\n    _this.cleanUpEvents = function () {\n      var handleClickOutside = _this.state.handleClickOutside;\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n    _this.getMenuPosition = function () {\n      var _a, _b, _c;\n      var _d = _this.props,\n        parentRef = _d.parentRef,\n        openLeft = _d.openLeft;\n      var portalElement = document.getElementById(APP_LAYOUT_ROOT);\n      var portalRect = ((_a = portalElement === null || portalElement === void 0 ? void 0 : portalElement.getBoundingClientRect) === null || _a === void 0 ? void 0 : _a.call(portalElement)) || {\n        top: 0,\n        left: 0,\n        width: window.innerWidth,\n        height: window.innerHeight\n      };\n      var parentRect = (_c = (_b = parentRef === null || parentRef === void 0 ? void 0 : parentRef.current) === null || _b === void 0 ? void 0 : _b.getBoundingClientRect) === null || _c === void 0 ? void 0 : _c.call(_b);\n      var x = ((parentRect === null || parentRect === void 0 ? void 0 : parentRect.x) || (parentRect === null || parentRect === void 0 ? void 0 : parentRect.left) || 0) - portalRect.left;\n      var y = ((parentRect === null || parentRect === void 0 ? void 0 : parentRect.y) || (parentRect === null || parentRect === void 0 ? void 0 : parentRect.top) || 0) - portalRect.top;\n      var menuStyle = {\n        top: y,\n        left: x\n      };\n      if (!_this.menuRef.current) return menuStyle;\n      var rect = _this.menuRef.current.getBoundingClientRect();\n      if (y + rect.height + HEIGHT_PADDING > portalRect.height) {\n        menuStyle.top -= rect.height;\n      }\n      if (x + rect.width > portalRect.width && !openLeft) {\n        menuStyle.left -= rect.width;\n      }\n      if (menuStyle.top < 0) {\n        menuStyle.top = rect.height < portalRect.height ? (portalRect.height - rect.height) / 2 : 0;\n      }\n      menuStyle.top += 32;\n      if (openLeft) {\n        var padding = Number.isNaN(rect.width - 30) ? 108 // default\n        : rect.width - 30;\n        menuStyle.left -= padding;\n      }\n      if (menuStyle.left < 0) {\n        menuStyle.left = rect.width < portalRect.width ? (portalRect.width - rect.width) / 2 : 0;\n      }\n      _this.setState({\n        menuStyle: menuStyle\n      });\n      return menuStyle;\n    };\n    _this.state = {\n      menuStyle: {\n        top: 0,\n        left: 0\n      },\n      handleClickOutside: function () {}\n    };\n    return _this;\n  }\n  MenuItems.prototype.componentDidMount = function () {\n    this.setupEvents();\n    this.getMenuPosition();\n  };\n  MenuItems.prototype.componentWillUnmount = function () {\n    this.cleanUpEvents();\n  };\n  MenuItems.prototype.render = function () {\n    var portalElement = document.getElementById(MENU_ROOT_ID);\n    if (!portalElement) return React__default.createElement(React__default.Fragment, null);\n    var menuStyle = this.state.menuStyle;\n    var _a = this.props,\n      children = _a.children,\n      style = _a.style,\n      _b = _a.className,\n      className = _b === void 0 ? '' : _b,\n      testID = _a.testID,\n      id = _a.id;\n    return createPortal(React__default.createElement(\"div\", {\n      className: classnames(MENU_OBSERVING_CLASS_NAME, className),\n      \"data-testid\": testID,\n      id: id\n    }, React__default.createElement(\"div\", {\n      className: \"sendbird-dropdown__menu-backdrop\"\n    }), React__default.createElement(\"ul\", {\n      className: \"\".concat(className, \" sendbird-dropdown__menu\"),\n      ref: this.menuRef,\n      style: __assign({\n        display: 'inline-block',\n        position: 'fixed',\n        left: \"\".concat(Math.round(menuStyle.left), \"px\"),\n        top: \"\".concat(Math.round(menuStyle.top), \"px\")\n      }, style),\n      \"data-testid\": \"sendbird-dropdown-menu\"\n    }, children)), portalElement);\n  };\n  return MenuItems;\n}(React__default.Component);\nvar MuteMenuItem = function (_a) {\n  var channel = _a.channel,\n    user = _a.user,\n    _b = _a.className,\n    className = _b === void 0 ? '' : _b,\n    children = _a.children,\n    _c = _a.disable,\n    disable = _c === void 0 ? false : _c,\n    _d = _a.dataSbId,\n    dataSbId = _d === void 0 ? '' : _d,\n    testID = _a.testID,\n    _e = _a.onChange,\n    onChange = _e === void 0 ? function () {} : _e,\n    _f = _a.onError,\n    onError = _f === void 0 ? function () {} : _f;\n  var _g = useState(user.isMuted),\n    isMuted = _g[0],\n    setIsMuted = _g[1];\n  var isProcessing = useRef(false);\n  var onClickHandler = useCallback(function () {\n    if (!isProcessing.current) {\n      isProcessing.current = true;\n      if (isMuted) {\n        channel.unmuteUser(user).then(function () {\n          setIsMuted(false);\n          onChange(channel, user, false);\n          isProcessing.current = false;\n        }).catch(function (err) {\n          onError(err);\n          isProcessing.current = false;\n        });\n      } else {\n        channel.muteUser(user).then(function () {\n          setIsMuted(true);\n          onChange(channel, user, true);\n          isProcessing.current = false;\n        }).catch(function (err) {\n          onError(err);\n          isProcessing.current = false;\n        });\n      }\n    }\n  }, [isProcessing, isMuted]);\n  return React__default.createElement(MenuItem, {\n    className: className,\n    disable: disable,\n    testID: testID !== null && testID !== void 0 ? testID : dataSbId,\n    onClick: onClickHandler\n  }, children);\n};\nvar OperatorMenuItem = function (_a) {\n  var channel = _a.channel,\n    user = _a.user,\n    _b = _a.className,\n    className = _b === void 0 ? '' : _b,\n    children = _a.children,\n    _c = _a.disable,\n    disable = _c === void 0 ? false : _c,\n    _d = _a.dataSbId,\n    dataSbId = _d === void 0 ? '' : _d,\n    testID = _a.testID,\n    _e = _a.onChange,\n    onChange = _e === void 0 ? function () {} : _e,\n    _f = _a.onError,\n    onError = _f === void 0 ? function () {} : _f;\n  var _g = useState(channel instanceof OpenChannel ? channel.isOperator(user) : user.role === Role.OPERATOR),\n    isOperator = _g[0],\n    setIsOperator = _g[1];\n  var isProcessing = useRef(false);\n  var onClickHandler = useCallback(function () {\n    if (!isProcessing.current) {\n      isProcessing.current = true;\n      if (isOperator) {\n        channel.removeOperators([user.userId]).then(function () {\n          setIsOperator(false);\n          onChange(channel, user, false);\n          isProcessing.current = false;\n        }).catch(function (err) {\n          onError(err);\n          isProcessing.current = false;\n        });\n      } else {\n        channel.addOperators([user.userId]).then(function () {\n          setIsOperator(true);\n          onChange(channel, user, true);\n          isProcessing.current = false;\n        }).catch(function (err) {\n          onError(err);\n          isProcessing.current = false;\n        });\n      }\n    }\n  }, [isProcessing, isOperator]);\n  return React__default.createElement(MenuItem, {\n    className: className,\n    disable: disable,\n    testID: testID !== null && testID !== void 0 ? testID : dataSbId,\n    onClick: onClickHandler\n  }, children);\n};\nvar defaultParentRect = {\n  x: 0,\n  y: 0,\n  left: 0,\n  top: 0,\n  height: 0\n};\nvar EmojiListItems$1 = function (_a) {\n  var id = _a.id,\n    children = _a.children,\n    parentRef = _a.parentRef,\n    parentContainRef = _a.parentContainRef,\n    _b = _a.spaceFromTrigger,\n    spaceFromTrigger = _b === void 0 ? {\n      x: 0,\n      y: 0\n    } : _b,\n    closeDropdown = _a.closeDropdown;\n  var _c = useState({\n      left: 0,\n      top: 0\n    }),\n    reactionStyle = _c[0],\n    setReactionStyle = _c[1];\n  var reactionRef = useRef(null);\n  /* showParent & hideParent */\n  useEffect(function () {\n    if (parentContainRef && (parentContainRef === null || parentContainRef === void 0 ? void 0 : parentContainRef.current)) {\n      parentContainRef.current.classList.add('sendbird-reactions--pressed');\n    }\n    return function () {\n      if (parentContainRef && (parentContainRef === null || parentContainRef === void 0 ? void 0 : parentContainRef.current)) {\n        parentContainRef.current.classList.remove('sendbird-reactions--pressed');\n      }\n    };\n  }, []);\n  /* setupEvents & cleanupEvents */\n  useEffect(function () {\n    var handleClickOutSide = function (event) {\n      var _a, _b;\n      if ((reactionRef === null || reactionRef === void 0 ? void 0 : reactionRef.current) && !((_b = (_a = reactionRef === null || reactionRef === void 0 ? void 0 : reactionRef.current) === null || _a === void 0 ? void 0 : _a.contains) === null || _b === void 0 ? void 0 : _b.call(_a, event.target))) {\n        closeDropdown();\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutSide);\n    return function () {\n      document.removeEventListener('mousedown', handleClickOutSide);\n    };\n  }, []);\n  /* getBarPosition */\n  useEffect(function () {\n    var _a, _b, _c, _d;\n    var spaceFromTriggerX = (spaceFromTrigger === null || spaceFromTrigger === void 0 ? void 0 : spaceFromTrigger.x) || 0;\n    var spaceFromTriggerY = (spaceFromTrigger === null || spaceFromTrigger === void 0 ? void 0 : spaceFromTrigger.y) || 0;\n    var portalElement = document.getElementById(APP_LAYOUT_ROOT);\n    var portalRect = ((_a = portalElement === null || portalElement === void 0 ? void 0 : portalElement.getBoundingClientRect) === null || _a === void 0 ? void 0 : _a.call(portalElement)) || {\n      top: 0,\n      left: 0,\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n    var parentRect = (_c = (_b = parentRef === null || parentRef === void 0 ? void 0 : parentRef.current) === null || _b === void 0 ? void 0 : _b.getBoundingClientRect()) !== null && _c !== void 0 ? _c : defaultParentRect;\n    var x = ((parentRect === null || parentRect === void 0 ? void 0 : parentRect.x) || (parentRect === null || parentRect === void 0 ? void 0 : parentRect.left) || 0) - portalRect.left;\n    var y = ((parentRect === null || parentRect === void 0 ? void 0 : parentRect.y) || (parentRect === null || parentRect === void 0 ? void 0 : parentRect.top) || 0) - portalRect.top;\n    var reactionStyle = {\n      top: y,\n      left: x\n    };\n    if (!(reactionRef === null || reactionRef === void 0 ? void 0 : reactionRef.current)) {\n      setReactionStyle(reactionStyle);\n    } else {\n      var rect = (_d = reactionRef === null || reactionRef === void 0 ? void 0 : reactionRef.current) === null || _d === void 0 ? void 0 : _d.getBoundingClientRect();\n      if (reactionStyle.top < rect.height) {\n        reactionStyle.top += parentRect.height;\n        reactionStyle.top += spaceFromTriggerY;\n      } else {\n        reactionStyle.top -= rect.height;\n        reactionStyle.top -= spaceFromTriggerY;\n      }\n      reactionStyle.left -= rect.width / 2;\n      reactionStyle.left += parentRect.height / 2 - 2;\n      reactionStyle.left += spaceFromTriggerX;\n      var maximumLeft = portalRect.width - rect.width;\n      if (maximumLeft < reactionStyle.left) {\n        reactionStyle.left = maximumLeft;\n      }\n      if (reactionStyle.left < 0) {\n        reactionStyle.left = 0;\n      }\n      setReactionStyle(reactionStyle);\n    }\n  }, []);\n  var rootElement = document.getElementById(EMOJI_MENU_ROOT_ID);\n  if (rootElement) {\n    return createPortal(React__default.createElement(\"div\", {\n      className: MENU_OBSERVING_CLASS_NAME,\n      id: id\n    }, React__default.createElement(\"div\", {\n      className: \"sendbird-dropdown__menu-backdrop\"\n    }), React__default.createElement(\"ul\", {\n      className: \"sendbird-dropdown__reaction-bar\",\n      \"data-testid\": \"sendbird-dropdown__reaction-bar\",\n      ref: reactionRef,\n      style: {\n        display: 'inline-block',\n        position: 'fixed',\n        left: \"\".concat(Math.round(reactionStyle.left), \"px\"),\n        top: \"\".concat(Math.round(reactionStyle.top), \"px\")\n      }\n    }, React__default.createElement(SortByRow, {\n      className: \"sendbird-dropdown__reaction-bar__row\",\n      maxItemCount: 8,\n      itemWidth: 44,\n      itemHeight: 40\n    }, children))), rootElement);\n  }\n  return null;\n};\nvar MessageMenuContext = createContext(undefined);\nvar MessageMenuProvider = function (_a) {\n  var children = _a.children,\n    value = _a.value;\n  return React__default.createElement(MessageMenuContext.Provider, {\n    value: value\n  }, children);\n};\nvar useMessageMenuContext = function () {\n  var context = useContext(MessageMenuContext);\n  if (!context) {\n    throw new Error('useMessageMenuContext must be used within a MessageMenuProvider.');\n  }\n  return context;\n};\nvar MenuItem$1 = function (_a) {\n  var className = _a.className,\n    disabled = _a.disabled,\n    _b = _a.tabIndex,\n    tabIndex = _b === void 0 ? 0 : _b,\n    testID = _a.testID,\n    onClick = _a.onClick,\n    children = _a.children;\n  var handleClickEvent = function (e) {\n    if (!disabled && onClick) {\n      onClick(e);\n    }\n  };\n  return React__default.createElement(\"li\", {\n    className: classnames('sendbird-menu-item', className),\n    role: \"menuitem\",\n    \"aria-disabled\": disabled,\n    \"data-testid\": testID,\n    tabIndex: tabIndex,\n    onClick: handleClickEvent,\n    onKeyDown: function (e) {\n      if (e.code === 'Enter') handleClickEvent(e);\n    }\n  }, React__default.createElement(Label, {\n    className: \"sendbird-menu-item__text\",\n    type: LabelTypography.SUBTITLE_2,\n    color: disabled ? LabelColors.ONBACKGROUND_4 : LabelColors.ONBACKGROUND_1\n  }, children));\n};\nvar BottomSheetMenuItem = function (_a) {\n  var className = _a.className,\n    _b = _a.disabled,\n    disabled = _b === void 0 ? false : _b,\n    _c = _a.tabIndex,\n    tabIndex = _c === void 0 ? 0 : _c,\n    testID = _a.testID,\n    onClick = _a.onClick,\n    children = _a.children;\n  return React__default.createElement(\"div\", {\n    className: classnames('sendbird-message__bottomsheet--action', className),\n    role: \"menuitem\",\n    tabIndex: tabIndex,\n    \"aria-disabled\": disabled,\n    onClick: onClick,\n    \"data-testid\": testID\n  }, children);\n};\n\n// # useElementObserve\nvar MENU_OBSERVING_CLASS_NAME = 'sendbird-observing-message-menu';\nvar getObservingId = function (txt) {\n  return \"m_\".concat(txt);\n};\nvar MenuItems = MenuItems$1;\nvar EmojiListItems = EmojiListItems$1;\n/**\n * @deprecated\n * Use the `MenuItem` from '@sendbird/uikit-react/ui/MessageMenu' instead\n */\nvar MenuItem = function (_a) {\n  var _b = _a.className,\n    className = _b === void 0 ? '' : _b,\n    children = _a.children,\n    onClick = _a.onClick,\n    _c = _a.disable,\n    disable = _c === void 0 ? false : _c,\n    _d = _a.dataSbId,\n    dataSbId = _d === void 0 ? '' : _d,\n    testID = _a.testID;\n  return React__default.createElement(MenuItem$1, {\n    className: classnames.apply(void 0, __spreadArray(__spreadArray([], Array.isArray(className) ? className : [className], false), ['sendbird-dropdown__menu-item', disable ? 'disable' : ''], false)),\n    disabled: disable,\n    testID: testID !== null && testID !== void 0 ? testID : dataSbId,\n    onClick: onClick\n  }, children);\n};\nvar MENU_ROOT_ID = 'sendbird-dropdown-portal';\nvar MenuRoot = function () {\n  return React__default.createElement(\"div\", {\n    id: MENU_ROOT_ID,\n    className: MENU_ROOT_ID\n  });\n};\nvar EMOJI_MENU_ROOT_ID = 'sendbird-emoji-list-portal';\nvar EmojiReactionListRoot = function () {\n  return React__default.createElement(\"div\", {\n    id: EMOJI_MENU_ROOT_ID\n  });\n};\nfunction ContextMenu(_a) {\n  var menuTrigger = _a.menuTrigger,\n    menuItems = _a.menuItems,\n    isOpen = _a.isOpen,\n    onClick = _a.onClick;\n  var _b = useState(false),\n    showMenu = _b[0],\n    setShowMenu = _b[1];\n  return React__default.createElement(\"div\", {\n    className: \"sendbird-context-menu\",\n    style: {\n      display: 'inline'\n    },\n    onClick: onClick\n  }, menuTrigger === null || menuTrigger === void 0 ? void 0 : menuTrigger(function () {\n    return setShowMenu(!showMenu);\n  }), (showMenu || isOpen) && menuItems(function () {\n    return setShowMenu(false);\n  }));\n}\nexport { APP_LAYOUT_ROOT as A, BottomSheetMenuItem as B, ContextMenu as C, EMOJI_MENU_ROOT_ID as E, MessageMenuProvider as M, OperatorMenuItem as O, MenuItem$1 as a, MenuItems as b, MenuItem as c, MENU_ROOT_ID as d, MENU_OBSERVING_CLASS_NAME as e, EmojiListItems as f, getObservingId as g, MuteMenuItem as h, EmojiReactionListRoot as i, MenuRoot as j, useMessageMenuContext as u };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import { e as __extends, _ as __assign, c as __spreadArray } from './bundle-BQi9-O76.js';\nimport React__default, { useState, useRef, useCallback, useEffect, createContext, useContext } from 'react';\nimport { createPortal } from 'react-dom';\nimport { c as classnames } from './bundle-BgwzpLeQ.js';\nimport { Role } from '@sendbird/chat';\nimport { OpenChannel } from '@sendbird/chat/openChannel';\nimport SortByRow from '../ui/SortByRow.js';\nimport '../withSendbird.js';\nimport '../ui/IconButton.js';\nimport './bundle-DxTN4_0p.js';\nimport './bundle-cQZ3UZoG.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from './bundle-DhKQeIfP.js';\n\nvar APP_LAYOUT_ROOT = 'sendbird-app__layout';\n\nvar HEIGHT_PADDING = 60;\nvar MenuItems$1 = /** @class */ (function (_super) {\n    __extends(MenuItems, _super);\n    function MenuItems(props) {\n        var _this = _super.call(this, props) || this;\n        _this.menuRef = React__default.createRef();\n        _this.setupEvents = function () {\n            var closeDropdown = _this.props.closeDropdown;\n            var menuRef = _this.menuRef;\n            var handleClickOutside = function (event) {\n                var _a, _b;\n                if ((menuRef === null || menuRef === void 0 ? void 0 : menuRef.current) && !((_b = (_a = menuRef === null || menuRef === void 0 ? void 0 : menuRef.current) === null || _a === void 0 ? void 0 : _a.contains) === null || _b === void 0 ? void 0 : _b.call(_a, event.target))) {\n                    closeDropdown === null || closeDropdown === void 0 ? void 0 : closeDropdown();\n                }\n            };\n            _this.setState({\n                handleClickOutside: handleClickOutside,\n            });\n            document.addEventListener('mousedown', handleClickOutside);\n        };\n        _this.cleanUpEvents = function () {\n            var handleClickOutside = _this.state.handleClickOutside;\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n        _this.getMenuPosition = function () {\n            var _a, _b, _c;\n            var _d = _this.props, parentRef = _d.parentRef, openLeft = _d.openLeft;\n            var portalElement = document.getElementById(APP_LAYOUT_ROOT);\n            var portalRect = ((_a = portalElement === null || portalElement === void 0 ? void 0 : portalElement.getBoundingClientRect) === null || _a === void 0 ? void 0 : _a.call(portalElement)) || {\n                top: 0,\n                left: 0,\n                width: window.innerWidth,\n                height: window.innerHeight,\n            };\n            var parentRect = (_c = (_b = parentRef === null || parentRef === void 0 ? void 0 : parentRef.current) === null || _b === void 0 ? void 0 : _b.getBoundingClientRect) === null || _c === void 0 ? void 0 : _c.call(_b);\n            var x = ((parentRect === null || parentRect === void 0 ? void 0 : parentRect.x) || (parentRect === null || parentRect === void 0 ? void 0 : parentRect.left) || 0) - portalRect.left;\n            var y = ((parentRect === null || parentRect === void 0 ? void 0 : parentRect.y) || (parentRect === null || parentRect === void 0 ? void 0 : parentRect.top) || 0) - portalRect.top;\n            var menuStyle = {\n                top: y,\n                left: x,\n            };\n            if (!_this.menuRef.current)\n                return menuStyle;\n            var rect = _this.menuRef.current.getBoundingClientRect();\n            if (y + rect.height + HEIGHT_PADDING > portalRect.height) {\n                menuStyle.top -= rect.height;\n            }\n            if (x + rect.width > portalRect.width && !openLeft) {\n                menuStyle.left -= rect.width;\n            }\n            if (menuStyle.top < 0) {\n                menuStyle.top = rect.height < portalRect.height ? (portalRect.height - rect.height) / 2 : 0;\n            }\n            menuStyle.top += 32;\n            if (openLeft) {\n                var padding = Number.isNaN(rect.width - 30)\n                    ? 108 // default\n                    : rect.width - 30;\n                menuStyle.left -= padding;\n            }\n            if (menuStyle.left < 0) {\n                menuStyle.left = rect.width < portalRect.width ? (portalRect.width - rect.width) / 2 : 0;\n            }\n            _this.setState({ menuStyle: menuStyle });\n            return menuStyle;\n        };\n        _this.state = {\n            menuStyle: { top: 0, left: 0 },\n            handleClickOutside: function () { },\n        };\n        return _this;\n    }\n    MenuItems.prototype.componentDidMount = function () {\n        this.setupEvents();\n        this.getMenuPosition();\n    };\n    MenuItems.prototype.componentWillUnmount = function () {\n        this.cleanUpEvents();\n    };\n    MenuItems.prototype.render = function () {\n        var portalElement = document.getElementById(MENU_ROOT_ID);\n        if (!portalElement)\n            return React__default.createElement(React__default.Fragment, null);\n        var menuStyle = this.state.menuStyle;\n        var _a = this.props, children = _a.children, style = _a.style, _b = _a.className, className = _b === void 0 ? '' : _b, testID = _a.testID, id = _a.id;\n        return (createPortal((React__default.createElement(\"div\", { className: classnames(MENU_OBSERVING_CLASS_NAME, className), \"data-testid\": testID, id: id },\n            React__default.createElement(\"div\", { className: \"sendbird-dropdown__menu-backdrop\" }),\n            React__default.createElement(\"ul\", { className: \"\".concat(className, \" sendbird-dropdown__menu\"), ref: this.menuRef, style: __assign({ display: 'inline-block', position: 'fixed', left: \"\".concat(Math.round(menuStyle.left), \"px\"), top: \"\".concat(Math.round(menuStyle.top), \"px\") }, style), \"data-testid\": \"sendbird-dropdown-menu\" }, children))), portalElement));\n    };\n    return MenuItems;\n}(React__default.Component));\n\nvar MuteMenuItem = function (_a) {\n    var channel = _a.channel, user = _a.user, _b = _a.className, className = _b === void 0 ? '' : _b, children = _a.children, _c = _a.disable, disable = _c === void 0 ? false : _c, _d = _a.dataSbId, dataSbId = _d === void 0 ? '' : _d, testID = _a.testID, _e = _a.onChange, onChange = _e === void 0 ? function () { } : _e, _f = _a.onError, onError = _f === void 0 ? function () { } : _f;\n    var _g = useState(user.isMuted), isMuted = _g[0], setIsMuted = _g[1];\n    var isProcessing = useRef(false);\n    var onClickHandler = useCallback(function () {\n        if (!isProcessing.current) {\n            isProcessing.current = true;\n            if (isMuted) {\n                channel.unmuteUser(user)\n                    .then(function () {\n                    setIsMuted(false);\n                    onChange(channel, user, false);\n                    isProcessing.current = false;\n                })\n                    .catch(function (err) {\n                    onError(err);\n                    isProcessing.current = false;\n                });\n            }\n            else {\n                channel.muteUser(user)\n                    .then(function () {\n                    setIsMuted(true);\n                    onChange(channel, user, true);\n                    isProcessing.current = false;\n                })\n                    .catch(function (err) {\n                    onError(err);\n                    isProcessing.current = false;\n                });\n            }\n        }\n    }, [isProcessing, isMuted]);\n    return (React__default.createElement(MenuItem, { className: className, disable: disable, testID: testID !== null && testID !== void 0 ? testID : dataSbId, onClick: onClickHandler }, children));\n};\n\nvar OperatorMenuItem = function (_a) {\n    var channel = _a.channel, user = _a.user, _b = _a.className, className = _b === void 0 ? '' : _b, children = _a.children, _c = _a.disable, disable = _c === void 0 ? false : _c, _d = _a.dataSbId, dataSbId = _d === void 0 ? '' : _d, testID = _a.testID, _e = _a.onChange, onChange = _e === void 0 ? function () { } : _e, _f = _a.onError, onError = _f === void 0 ? function () { } : _f;\n    var _g = useState(channel instanceof OpenChannel\n        ? channel.isOperator(user)\n        : user.role === Role.OPERATOR), isOperator = _g[0], setIsOperator = _g[1];\n    var isProcessing = useRef(false);\n    var onClickHandler = useCallback(function () {\n        if (!isProcessing.current) {\n            isProcessing.current = true;\n            if (isOperator) {\n                channel.removeOperators([user.userId])\n                    .then(function () {\n                    setIsOperator(false);\n                    onChange(channel, user, false);\n                    isProcessing.current = false;\n                })\n                    .catch(function (err) {\n                    onError(err);\n                    isProcessing.current = false;\n                });\n            }\n            else {\n                channel.addOperators([user.userId])\n                    .then(function () {\n                    setIsOperator(true);\n                    onChange(channel, user, true);\n                    isProcessing.current = false;\n                })\n                    .catch(function (err) {\n                    onError(err);\n                    isProcessing.current = false;\n                });\n            }\n        }\n    }, [isProcessing, isOperator]);\n    return (React__default.createElement(MenuItem, { className: className, disable: disable, testID: testID !== null && testID !== void 0 ? testID : dataSbId, onClick: onClickHandler }, children));\n};\n\nvar defaultParentRect = { x: 0, y: 0, left: 0, top: 0, height: 0 };\nvar EmojiListItems$1 = function (_a) {\n    var id = _a.id, children = _a.children, parentRef = _a.parentRef, parentContainRef = _a.parentContainRef, _b = _a.spaceFromTrigger, spaceFromTrigger = _b === void 0 ? { x: 0, y: 0 } : _b, closeDropdown = _a.closeDropdown;\n    var _c = useState({ left: 0, top: 0 }), reactionStyle = _c[0], setReactionStyle = _c[1];\n    var reactionRef = useRef(null);\n    /* showParent & hideParent */\n    useEffect(function () {\n        if (parentContainRef && (parentContainRef === null || parentContainRef === void 0 ? void 0 : parentContainRef.current)) {\n            parentContainRef.current.classList.add('sendbird-reactions--pressed');\n        }\n        return function () {\n            if (parentContainRef && (parentContainRef === null || parentContainRef === void 0 ? void 0 : parentContainRef.current)) {\n                parentContainRef.current.classList.remove('sendbird-reactions--pressed');\n            }\n        };\n    }, []);\n    /* setupEvents & cleanupEvents */\n    useEffect(function () {\n        var handleClickOutSide = function (event) {\n            var _a, _b;\n            if ((reactionRef === null || reactionRef === void 0 ? void 0 : reactionRef.current) && !((_b = (_a = reactionRef === null || reactionRef === void 0 ? void 0 : reactionRef.current) === null || _a === void 0 ? void 0 : _a.contains) === null || _b === void 0 ? void 0 : _b.call(_a, event.target))) {\n                closeDropdown();\n            }\n        };\n        document.addEventListener('mousedown', handleClickOutSide);\n        return function () {\n            document.removeEventListener('mousedown', handleClickOutSide);\n        };\n    }, []);\n    /* getBarPosition */\n    useEffect(function () {\n        var _a, _b, _c, _d;\n        var spaceFromTriggerX = (spaceFromTrigger === null || spaceFromTrigger === void 0 ? void 0 : spaceFromTrigger.x) || 0;\n        var spaceFromTriggerY = (spaceFromTrigger === null || spaceFromTrigger === void 0 ? void 0 : spaceFromTrigger.y) || 0;\n        var portalElement = document.getElementById(APP_LAYOUT_ROOT);\n        var portalRect = ((_a = portalElement === null || portalElement === void 0 ? void 0 : portalElement.getBoundingClientRect) === null || _a === void 0 ? void 0 : _a.call(portalElement)) || {\n            top: 0,\n            left: 0,\n            width: window.innerWidth,\n            height: window.innerHeight,\n        };\n        var parentRect = (_c = (_b = parentRef === null || parentRef === void 0 ? void 0 : parentRef.current) === null || _b === void 0 ? void 0 : _b.getBoundingClientRect()) !== null && _c !== void 0 ? _c : defaultParentRect;\n        var x = ((parentRect === null || parentRect === void 0 ? void 0 : parentRect.x) || (parentRect === null || parentRect === void 0 ? void 0 : parentRect.left) || 0) - portalRect.left;\n        var y = ((parentRect === null || parentRect === void 0 ? void 0 : parentRect.y) || (parentRect === null || parentRect === void 0 ? void 0 : parentRect.top) || 0) - portalRect.top;\n        var reactionStyle = {\n            top: y,\n            left: x,\n        };\n        if (!(reactionRef === null || reactionRef === void 0 ? void 0 : reactionRef.current)) {\n            setReactionStyle(reactionStyle);\n        }\n        else {\n            var rect = (_d = reactionRef === null || reactionRef === void 0 ? void 0 : reactionRef.current) === null || _d === void 0 ? void 0 : _d.getBoundingClientRect();\n            if (reactionStyle.top < rect.height) {\n                reactionStyle.top += parentRect.height;\n                reactionStyle.top += spaceFromTriggerY;\n            }\n            else {\n                reactionStyle.top -= rect.height;\n                reactionStyle.top -= spaceFromTriggerY;\n            }\n            reactionStyle.left -= rect.width / 2;\n            reactionStyle.left += (parentRect.height / 2) - 2;\n            reactionStyle.left += spaceFromTriggerX;\n            var maximumLeft = portalRect.width - rect.width;\n            if (maximumLeft < reactionStyle.left) {\n                reactionStyle.left = maximumLeft;\n            }\n            if (reactionStyle.left < 0) {\n                reactionStyle.left = 0;\n            }\n            setReactionStyle(reactionStyle);\n        }\n    }, []);\n    var rootElement = document.getElementById(EMOJI_MENU_ROOT_ID);\n    if (rootElement) {\n        return (createPortal(React__default.createElement(\"div\", { className: MENU_OBSERVING_CLASS_NAME, id: id },\n            React__default.createElement(\"div\", { className: \"sendbird-dropdown__menu-backdrop\" }),\n            React__default.createElement(\"ul\", { className: \"sendbird-dropdown__reaction-bar\", \"data-testid\": \"sendbird-dropdown__reaction-bar\", ref: reactionRef, style: {\n                    display: 'inline-block',\n                    position: 'fixed',\n                    left: \"\".concat(Math.round(reactionStyle.left), \"px\"),\n                    top: \"\".concat(Math.round(reactionStyle.top), \"px\"),\n                } },\n                React__default.createElement(SortByRow, { className: \"sendbird-dropdown__reaction-bar__row\", maxItemCount: 8, itemWidth: 44, itemHeight: 40 }, children))), rootElement));\n    }\n    return null;\n};\n\nvar MessageMenuContext = createContext(undefined);\nvar MessageMenuProvider = function (_a) {\n    var children = _a.children, value = _a.value;\n    return (React__default.createElement(MessageMenuContext.Provider, { value: value }, children));\n};\nvar useMessageMenuContext = function () {\n    var context = useContext(MessageMenuContext);\n    if (!context) {\n        throw new Error('useMessageMenuContext must be used within a MessageMenuProvider.');\n    }\n    return context;\n};\n\nvar MenuItem$1 = function (_a) {\n    var className = _a.className, disabled = _a.disabled, _b = _a.tabIndex, tabIndex = _b === void 0 ? 0 : _b, testID = _a.testID, onClick = _a.onClick, children = _a.children;\n    var handleClickEvent = function (e) {\n        if (!disabled && onClick) {\n            onClick(e);\n        }\n    };\n    return (React__default.createElement(\"li\", { className: classnames('sendbird-menu-item', className), role: \"menuitem\", \"aria-disabled\": disabled, \"data-testid\": testID, tabIndex: tabIndex, onClick: handleClickEvent, onKeyDown: function (e) { if (e.code === 'Enter')\n            handleClickEvent(e); } },\n        React__default.createElement(Label, { className: \"sendbird-menu-item__text\", type: LabelTypography.SUBTITLE_2, color: disabled ? LabelColors.ONBACKGROUND_4 : LabelColors.ONBACKGROUND_1 }, children)));\n};\nvar BottomSheetMenuItem = function (_a) {\n    var className = _a.className, _b = _a.disabled, disabled = _b === void 0 ? false : _b, _c = _a.tabIndex, tabIndex = _c === void 0 ? 0 : _c, testID = _a.testID, onClick = _a.onClick, children = _a.children;\n    return (React__default.createElement(\"div\", { className: classnames('sendbird-message__bottomsheet--action', className), role: \"menuitem\", tabIndex: tabIndex, \"aria-disabled\": disabled, onClick: onClick, \"data-testid\": testID }, children));\n};\n\n// # useElementObserve\nvar MENU_OBSERVING_CLASS_NAME = 'sendbird-observing-message-menu';\nvar getObservingId = function (txt) { return \"m_\".concat(txt); };\nvar MenuItems = MenuItems$1;\nvar EmojiListItems = EmojiListItems$1;\n/**\n * @deprecated\n * Use the `MenuItem` from '@sendbird/uikit-react/ui/MessageMenu' instead\n */\nvar MenuItem = function (_a) {\n    var _b = _a.className, className = _b === void 0 ? '' : _b, children = _a.children, onClick = _a.onClick, _c = _a.disable, disable = _c === void 0 ? false : _c, _d = _a.dataSbId, dataSbId = _d === void 0 ? '' : _d, testID = _a.testID;\n    return (React__default.createElement(MenuItem$1, { className: classnames.apply(void 0, __spreadArray(__spreadArray([], (Array.isArray(className) ? className : [className]), false), ['sendbird-dropdown__menu-item',\n            disable ? 'disable' : ''], false)), disabled: disable, testID: testID !== null && testID !== void 0 ? testID : dataSbId, onClick: onClick }, children));\n};\nvar MENU_ROOT_ID = 'sendbird-dropdown-portal';\nvar MenuRoot = function () { return (React__default.createElement(\"div\", { id: MENU_ROOT_ID, className: MENU_ROOT_ID })); };\nvar EMOJI_MENU_ROOT_ID = 'sendbird-emoji-list-portal';\nvar EmojiReactionListRoot = function () { return React__default.createElement(\"div\", { id: EMOJI_MENU_ROOT_ID }); };\nfunction ContextMenu(_a) {\n    var menuTrigger = _a.menuTrigger, menuItems = _a.menuItems, isOpen = _a.isOpen, onClick = _a.onClick;\n    var _b = useState(false), showMenu = _b[0], setShowMenu = _b[1];\n    return (React__default.createElement(\"div\", { className: \"sendbird-context-menu\", style: { display: 'inline' }, onClick: onClick }, menuTrigger === null || menuTrigger === void 0 ? void 0 :\n        menuTrigger(function () { return setShowMenu(!showMenu); }),\n        (showMenu || isOpen) && menuItems(function () { return setShowMenu(false); })));\n}\n\nexport { APP_LAYOUT_ROOT as A, BottomSheetMenuItem as B, ContextMenu as C, EMOJI_MENU_ROOT_ID as E, MessageMenuProvider as M, OperatorMenuItem as O, MenuItem$1 as a, MenuItems as b, MenuItem as c, MENU_ROOT_ID as d, MENU_OBSERVING_CLASS_NAME as e, EmojiListItems as f, getObservingId as g, MuteMenuItem as h, EmojiReactionListRoot as i, MenuRoot as j, useMessageMenuContext as u };\n//# sourceMappingURL=bundle-CwKZj-B6.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}