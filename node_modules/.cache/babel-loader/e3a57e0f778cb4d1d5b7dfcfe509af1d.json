{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nfunction ChatComponent({\n  channelUrl\n}) {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [response, setResponse] = useState('');\n  const handleSend = async () => {\n    if (question.trim() === '' || !channelUrl) return;\n    const res = await fetch(`https://api-255A6E1D-2863-492B-AEAC-C7351A429D95.sendbird.com/v3/group_channels/${channelUrl}/messages`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Api-Token': '14808b2c48020361fef4a425b64a5312d942f07b'\n      },\n      body: JSON.stringify({\n        message_type: 'MESG',\n        user_id: 'guest_user',\n        message: question\n      })\n    });\n    const data = await res.json();\n    setResponse(data.message);\n    setQuestion('');\n  };\n}\n_s(ChatComponent, \"zkoMqXIfZFIynyXw/mbLGqqlFmI=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","ChatComponent","channelUrl","_s","question","setQuestion","response","setResponse","handleSend","trim","res","fetch","method","headers","body","JSON","stringify","message_type","user_id","message","data","json","_c","$RefreshReg$"],"sources":["D:/ebgbot/src/ChatComponent.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction ChatComponent({ channelUrl }) {\r\n  const [question, setQuestion] = useState('');\r\n  const [response, setResponse] = useState('');\r\n\r\n  const handleSend = async () => {\r\n    if (question.trim() === '' || !channelUrl) return;\r\n\r\n    const res = await fetch(`https://api-255A6E1D-2863-492B-AEAC-C7351A429D95.sendbird.com/v3/group_channels/${channelUrl}/messages`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Token': '14808b2c48020361fef4a425b64a5312d942f07b'\r\n      },\r\n      body: JSON.stringify({\r\n        message_type: 'MESG',\r\n        user_id: 'guest_user',\r\n        message: question\r\n      })\r\n    });\r\n\r\n    const data = await res.json();\r\n    setResponse(data.message);\r\n    setQuestion('');\r\n  };\r\n}\r\n\r\nexport default ChatComponent;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,aAAaA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAIJ,QAAQ,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAACP,UAAU,EAAE;IAE3C,MAAMQ,GAAG,GAAG,MAAMC,KAAK,CAAC,mFAAmFT,UAAU,WAAW,EAAE;MAChIU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,WAAW,EAAE;MACf,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,YAAY,EAAE,MAAM;QACpBC,OAAO,EAAE,YAAY;QACrBC,OAAO,EAAEf;MACX,CAAC;IACH,CAAC,CAAC;IAEF,MAAMgB,IAAI,GAAG,MAAMV,GAAG,CAACW,IAAI,CAAC,CAAC;IAC7Bd,WAAW,CAACa,IAAI,CAACD,OAAO,CAAC;IACzBd,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;AACH;AAACF,EAAA,CAxBQF,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AA0BtB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}