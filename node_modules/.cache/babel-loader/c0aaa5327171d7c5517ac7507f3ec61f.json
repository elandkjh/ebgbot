{"ast":null,"code":"var PublishingModuleType;\n(function (PublishingModuleType) {\n  PublishingModuleType[\"CHANNEL\"] = \"CHANNEL\";\n  PublishingModuleType[\"THREAD\"] = \"THREAD\";\n})(PublishingModuleType || (PublishingModuleType = {}));\n// NOTE: To maintain compatibility with the sendbirdSelector provided to customers\n//  this utility function ensures that if publishingModules is not provided or its length is zero\n//  it will maintain the same behavior as before.\nvar isTargetIncludedInModules = function (target, modules) {\n  if (!modules || modules.length === 0) return true;else return modules.includes(target);\n};\nfunction shouldPubSubPublishToChannel(modules) {\n  return isTargetIncludedInModules(PublishingModuleType.CHANNEL, modules);\n}\nfunction shouldPubSubPublishToThread(modules) {\n  return isTargetIncludedInModules(PublishingModuleType.THREAD, modules);\n}\n\n// NOTE: It seems not distinguish topics by channel type.\nvar PUBSUB_TOPICS;\n(function (PUBSUB_TOPICS) {\n  // Group Channel\n  PUBSUB_TOPICS[\"USER_UPDATED\"] = \"USER_UPDATED\";\n  PUBSUB_TOPICS[\"SEND_MESSAGE_START\"] = \"SEND_MESSAGE_START\";\n  PUBSUB_TOPICS[\"SEND_MESSAGE_FAILED\"] = \"SEND_MESSAGE_FAILED\";\n  PUBSUB_TOPICS[\"SEND_USER_MESSAGE\"] = \"SEND_USER_MESSAGE\";\n  PUBSUB_TOPICS[\"SEND_FILE_MESSAGE\"] = \"SEND_FILE_MESSAGE\";\n  PUBSUB_TOPICS[\"ON_FILE_INFO_UPLOADED\"] = \"ON_FILE_INFO_UPLOADED\";\n  PUBSUB_TOPICS[\"UPDATE_USER_MESSAGE\"] = \"UPDATE_USER_MESSAGE\";\n  PUBSUB_TOPICS[\"DELETE_MESSAGE\"] = \"DELETE_MESSAGE\";\n  PUBSUB_TOPICS[\"LEAVE_CHANNEL\"] = \"LEAVE_CHANNEL\";\n  PUBSUB_TOPICS[\"CREATE_CHANNEL\"] = \"CREATE_CHANNEL\";\n  // Open Channel\n  PUBSUB_TOPICS[\"UPDATE_OPEN_CHANNEL\"] = \"UPDATE_OPEN_CHANNEL\";\n})(PUBSUB_TOPICS || (PUBSUB_TOPICS = {}));\nvar pubSubTopics = PUBSUB_TOPICS;\nexport { PublishingModuleType as P, shouldPubSubPublishToThread as a, PUBSUB_TOPICS as b, pubSubTopics as p, shouldPubSubPublishToChannel as s };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["var PublishingModuleType;\n(function (PublishingModuleType) {\n    PublishingModuleType[\"CHANNEL\"] = \"CHANNEL\";\n    PublishingModuleType[\"THREAD\"] = \"THREAD\";\n})(PublishingModuleType || (PublishingModuleType = {}));\n// NOTE: To maintain compatibility with the sendbirdSelector provided to customers\n//  this utility function ensures that if publishingModules is not provided or its length is zero\n//  it will maintain the same behavior as before.\nvar isTargetIncludedInModules = function (target, modules) {\n    if (!modules || modules.length === 0)\n        return true;\n    else\n        return modules.includes(target);\n};\nfunction shouldPubSubPublishToChannel(modules) {\n    return isTargetIncludedInModules(PublishingModuleType.CHANNEL, modules);\n}\nfunction shouldPubSubPublishToThread(modules) {\n    return isTargetIncludedInModules(PublishingModuleType.THREAD, modules);\n}\n\n// NOTE: It seems not distinguish topics by channel type.\nvar PUBSUB_TOPICS;\n(function (PUBSUB_TOPICS) {\n    // Group Channel\n    PUBSUB_TOPICS[\"USER_UPDATED\"] = \"USER_UPDATED\";\n    PUBSUB_TOPICS[\"SEND_MESSAGE_START\"] = \"SEND_MESSAGE_START\";\n    PUBSUB_TOPICS[\"SEND_MESSAGE_FAILED\"] = \"SEND_MESSAGE_FAILED\";\n    PUBSUB_TOPICS[\"SEND_USER_MESSAGE\"] = \"SEND_USER_MESSAGE\";\n    PUBSUB_TOPICS[\"SEND_FILE_MESSAGE\"] = \"SEND_FILE_MESSAGE\";\n    PUBSUB_TOPICS[\"ON_FILE_INFO_UPLOADED\"] = \"ON_FILE_INFO_UPLOADED\";\n    PUBSUB_TOPICS[\"UPDATE_USER_MESSAGE\"] = \"UPDATE_USER_MESSAGE\";\n    PUBSUB_TOPICS[\"DELETE_MESSAGE\"] = \"DELETE_MESSAGE\";\n    PUBSUB_TOPICS[\"LEAVE_CHANNEL\"] = \"LEAVE_CHANNEL\";\n    PUBSUB_TOPICS[\"CREATE_CHANNEL\"] = \"CREATE_CHANNEL\";\n    // Open Channel\n    PUBSUB_TOPICS[\"UPDATE_OPEN_CHANNEL\"] = \"UPDATE_OPEN_CHANNEL\";\n})(PUBSUB_TOPICS || (PUBSUB_TOPICS = {}));\nvar pubSubTopics = PUBSUB_TOPICS;\n\nexport { PublishingModuleType as P, shouldPubSubPublishToThread as a, PUBSUB_TOPICS as b, pubSubTopics as p, shouldPubSubPublishToChannel as s };\n//# sourceMappingURL=bundle-b6TpX_JP.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}