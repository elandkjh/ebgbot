{"ast":null,"code":"import { _ as __assign } from '../../chunks/bundle-BQi9-O76.js';\nimport React__default from 'react';\nimport { useIIFE } from '@sendbird/uikit-tools';\nimport { useSendbirdStateContext } from '../../useSendbirdStateContext.js';\nimport { k as isSendableMessage, g as getSuggestedReplies } from '../../chunks/bundle-DxTN4_0p.js';\nimport { i as isDisabledBecauseFrozen, a as isDisabledBecauseMuted } from '../../chunks/bundle-C3ktHDOc.js';\nimport { useGroupChannelContext } from '../context.js';\nimport { M as MessageView } from '../../chunks/bundle-Dnj0fmAf.js';\nimport { FileViewer } from './FileViewer.js';\nimport { RemoveMessageModal } from './RemoveMessageModal.js';\nimport { T as ThreadReplySelectType } from '../../chunks/bundle-CveCFQYP.js';\nimport '../../withSendbird.js';\nimport '@sendbird/chat/groupChannel';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../chunks/bundle-CNWAfTVw.js';\nimport '../../chunks/bundle-CA85nVxp.js';\nimport '@sendbird/chat/message';\nimport '../../chunks/bundle-BrTJ5Zbd.js';\nimport '../../chunks/bundle-y29vL7zu.js';\nimport '../../chunks/bundle-fHeMHhND.js';\nimport '../../chunks/bundle-Df65wuUZ.js';\nimport '../../chunks/bundle-b6TpX_JP.js';\nimport '../../chunks/bundle-DCMGp6rH.js';\nimport '../../chunks/bundle-BNDaXsLn.js';\nimport '../../chunks/bundle-CAdqcqOm.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\nimport '../../chunks/bundle-cQZ3UZoG.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../Message/hooks/useDirtyGetMentions.js';\nimport '../../ui/DateSeparator.js';\nimport '../../chunks/bundle-rA4afvKU.js';\nimport '../../chunks/bundle-DhKQeIfP.js';\nimport '../../ui/MessageInput.js';\nimport '../../chunks/bundle-0qSTzMXb.js';\nimport '../../ui/IconButton.js';\nimport '../../ui/Button.js';\nimport '../../chunks/bundle-TZQ6dJCG.js';\nimport 'dompurify';\nimport '../../chunks/bundle-0nQK2G2O.js';\nimport '../../chunks/bundle-B6edg1g0.js';\nimport '../../chunks/bundle-DhGZA5UP.js';\nimport '../../ui/Icon.js';\nimport '../../chunks/bundle-BgwzpLeQ.js';\nimport '../../chunks/bundle-GUbI4JcD.js';\nimport '../../ui/MessageContent.js';\nimport '../../chunks/bundle-vuBlPTsL.js';\nimport '../../ui/Loader.js';\nimport '../../chunks/bundle-BHK1eF5R.js';\nimport '../../chunks/bundle-F5koPk19.js';\nimport '../../chunks/bundle-DkBecO3w.js';\nimport '../../chunks/bundle-CwKZj-B6.js';\nimport 'react-dom';\nimport '@sendbird/chat';\nimport '@sendbird/chat/openChannel';\nimport '../../ui/SortByRow.js';\nimport '../../chunks/bundle-etuaqevl.js';\nimport '../../ui/MessageItemReactionMenu.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../ui/ReactionButton.js';\nimport '../../chunks/bundle-AfQS5DGf.js';\nimport '../../chunks/bundle-f-SpnOx2.js';\nimport '../../ui/EmojiReactions.js';\nimport '../../ui/ReactionBadge.js';\nimport '../../ui/BottomSheet.js';\nimport '../../chunks/bundle-CXdo2kR_.js';\nimport 'css-vars-ponyfill';\nimport '../../chunks/bundle-DDeWOERD.js';\nimport '../../ui/UserListItem.js';\nimport '../../chunks/bundle-CFosTNce.js';\nimport '../../chunks/bundle-DXRRGizV.js';\nimport '../../ui/MutedAvatarOverlay.js';\nimport '../../ui/Checkbox.js';\nimport '../../ui/UserProfile.js';\nimport '../../sendbirdSelectors.js';\nimport '../../ui/Tooltip.js';\nimport '../../ui/TooltipWrapper.js';\nimport '../../Message/context.js';\nimport '../../ui/AdminMessage.js';\nimport '../../ui/QuoteMessage.js';\nimport '../../chunks/bundle-BqMHiKkl.js';\nimport '../../ui/MobileMenu.js';\nimport '../../ui/ThreadReplies.js';\nimport '../../ui/OGMessageItemBody.js';\nimport '../../chunks/bundle-DofK8ySe.js';\nimport '../../ui/MentionLabel.js';\nimport '../../ui/LinkLabel.js';\nimport '../../ui/TextMessageItemBody.js';\nimport '../../ui/FileMessageItemBody.js';\nimport '../../ui/TextButton.js';\nimport '../../chunks/bundle-ZVq6xGXk.js';\nimport '../../ui/FileViewer.js';\nimport '../../chunks/bundle-Gdl-rzQC.js';\nimport '../../ui/VoiceMessageItemBody.js';\nimport '../../ui/ProgressBar.js';\nimport '../../VoicePlayer/useVoicePlayer.js';\nimport '../../ui/PlaybackTime.js';\nimport '../../ui/ThumbnailMessageItemBody.js';\nimport '../../ui/UnknownMessageItemBody.js';\nimport '../../ui/TemplateMessageItemBody.js';\nimport '../../chunks/bundle-uLjwqZrR.js';\nimport '../../ui/FallbackTemplateMessageItemBody.tsx.js';\nimport '../../ui/LoadingTemplateMessageItemBody.tsx.js';\nimport '../../ui/FeedbackIconButton.js';\nimport '../../ui/MobileFeedbackMenu.js';\nimport '../../ui/MessageFeedbackModal.js';\nimport '../../ui/Input.js';\nimport '../../ui/MessageFeedbackFailedModal.js';\nimport '../../chunks/bundle-Cf0UgZwi.js';\nimport './SuggestedReplies.js';\nimport '../../chunks/bundle-Due9yzp6.js';\nimport '../../chunks/bundle-CqpGyIDR.js';\nimport '../../chunks/bundle-D0TYbkjN.js';\nimport '../../chunks/bundle-Zvm5CMGT.js';\nvar Message = function (props) {\n  var _a = useSendbirdStateContext(),\n    config = _a.config,\n    emojiManager = _a.emojiManager;\n  var _b = useGroupChannelContext(),\n    loading = _b.loading,\n    currentChannel = _b.currentChannel,\n    animatedMessageId = _b.animatedMessageId,\n    setAnimatedMessageId = _b.setAnimatedMessageId,\n    scrollToMessage = _b.scrollToMessage,\n    replyType = _b.replyType,\n    threadReplySelectType = _b.threadReplySelectType,\n    isReactionEnabled = _b.isReactionEnabled,\n    toggleReaction = _b.toggleReaction,\n    nicknamesMap = _b.nicknamesMap,\n    setQuoteMessage = _b.setQuoteMessage,\n    renderUserMentionItem = _b.renderUserMentionItem,\n    onQuoteMessageClick = _b.onQuoteMessageClick,\n    onReplyInThreadClick = _b.onReplyInThreadClick,\n    onMessageAnimated = _b.onMessageAnimated,\n    onBeforeDownloadFileMessage = _b.onBeforeDownloadFileMessage,\n    messages = _b.messages,\n    updateUserMessage = _b.updateUserMessage,\n    sendUserMessage = _b.sendUserMessage,\n    resendMessage = _b.resendMessage,\n    deleteMessage = _b.deleteMessage;\n  var message = props.message;\n  var initialized = !loading && Boolean(currentChannel);\n  var shouldRenderSuggestedReplies = useIIFE(function () {\n    var _a;\n    var _b = config.groupChannel,\n      enableSuggestedReplies = _b.enableSuggestedReplies,\n      showSuggestedRepliesFor = _b.showSuggestedRepliesFor;\n    var lastMessageInView = messages[messages.length - 1];\n    var hasUnsentMessage = isSendableMessage(lastMessageInView) && lastMessageInView.sendingStatus !== 'succeeded';\n    var showSuggestedReplies = showSuggestedRepliesFor === 'all_messages' ? true : message.messageId === ((_a = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.lastMessage) === null || _a === void 0 ? void 0 : _a.messageId);\n    return enableSuggestedReplies && getSuggestedReplies(message).length > 0 && !hasUnsentMessage && showSuggestedReplies;\n  });\n  return React__default.createElement(MessageView, __assign({}, props, {\n    channel: currentChannel,\n    emojiContainer: emojiManager.emojiContainer,\n    editInputDisabled: !initialized || isDisabledBecauseFrozen(currentChannel !== null && currentChannel !== void 0 ? currentChannel : undefined) || isDisabledBecauseMuted(currentChannel !== null && currentChannel !== void 0 ? currentChannel : undefined) || !config.isOnline,\n    shouldRenderSuggestedReplies: shouldRenderSuggestedReplies,\n    isReactionEnabled: isReactionEnabled !== null && isReactionEnabled !== void 0 ? isReactionEnabled : false,\n    replyType: replyType !== null && replyType !== void 0 ? replyType : 'NONE',\n    threadReplySelectType: threadReplySelectType !== null && threadReplySelectType !== void 0 ? threadReplySelectType : ThreadReplySelectType.PARENT,\n    nicknamesMap: nicknamesMap,\n    renderUserMentionItem: renderUserMentionItem,\n    scrollToMessage: scrollToMessage,\n    toggleReaction: toggleReaction,\n    setQuoteMessage: setQuoteMessage,\n    onQuoteMessageClick: onQuoteMessageClick,\n    onReplyInThreadClick: onReplyInThreadClick,\n    sendUserMessage: sendUserMessage,\n    updateUserMessage: updateUserMessage,\n    resendMessage: resendMessage,\n    deleteMessage: deleteMessage,\n    animatedMessageId: animatedMessageId,\n    setAnimatedMessageId: setAnimatedMessageId,\n    onMessageAnimated: onMessageAnimated,\n    renderFileViewer: function (props) {\n      return React__default.createElement(FileViewer, __assign({}, props));\n    },\n    renderRemoveMessageModal: function (props) {\n      return React__default.createElement(RemoveMessageModal, __assign({}, props));\n    },\n    usedInLegacy: false,\n    onBeforeDownloadFileMessage: onBeforeDownloadFileMessage\n  }));\n};\nexport { Message, Message as default };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import { _ as __assign } from '../../chunks/bundle-BQi9-O76.js';\nimport React__default from 'react';\nimport { useIIFE } from '@sendbird/uikit-tools';\nimport { useSendbirdStateContext } from '../../useSendbirdStateContext.js';\nimport { k as isSendableMessage, g as getSuggestedReplies } from '../../chunks/bundle-DxTN4_0p.js';\nimport { i as isDisabledBecauseFrozen, a as isDisabledBecauseMuted } from '../../chunks/bundle-C3ktHDOc.js';\nimport { useGroupChannelContext } from '../context.js';\nimport { M as MessageView } from '../../chunks/bundle-Dnj0fmAf.js';\nimport { FileViewer } from './FileViewer.js';\nimport { RemoveMessageModal } from './RemoveMessageModal.js';\nimport { T as ThreadReplySelectType } from '../../chunks/bundle-CveCFQYP.js';\nimport '../../withSendbird.js';\nimport '@sendbird/chat/groupChannel';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../chunks/bundle-CNWAfTVw.js';\nimport '../../chunks/bundle-CA85nVxp.js';\nimport '@sendbird/chat/message';\nimport '../../chunks/bundle-BrTJ5Zbd.js';\nimport '../../chunks/bundle-y29vL7zu.js';\nimport '../../chunks/bundle-fHeMHhND.js';\nimport '../../chunks/bundle-Df65wuUZ.js';\nimport '../../chunks/bundle-b6TpX_JP.js';\nimport '../../chunks/bundle-DCMGp6rH.js';\nimport '../../chunks/bundle-BNDaXsLn.js';\nimport '../../chunks/bundle-CAdqcqOm.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\nimport '../../chunks/bundle-cQZ3UZoG.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../Message/hooks/useDirtyGetMentions.js';\nimport '../../ui/DateSeparator.js';\nimport '../../chunks/bundle-rA4afvKU.js';\nimport '../../chunks/bundle-DhKQeIfP.js';\nimport '../../ui/MessageInput.js';\nimport '../../chunks/bundle-0qSTzMXb.js';\nimport '../../ui/IconButton.js';\nimport '../../ui/Button.js';\nimport '../../chunks/bundle-TZQ6dJCG.js';\nimport 'dompurify';\nimport '../../chunks/bundle-0nQK2G2O.js';\nimport '../../chunks/bundle-B6edg1g0.js';\nimport '../../chunks/bundle-DhGZA5UP.js';\nimport '../../ui/Icon.js';\nimport '../../chunks/bundle-BgwzpLeQ.js';\nimport '../../chunks/bundle-GUbI4JcD.js';\nimport '../../ui/MessageContent.js';\nimport '../../chunks/bundle-vuBlPTsL.js';\nimport '../../ui/Loader.js';\nimport '../../chunks/bundle-BHK1eF5R.js';\nimport '../../chunks/bundle-F5koPk19.js';\nimport '../../chunks/bundle-DkBecO3w.js';\nimport '../../chunks/bundle-CwKZj-B6.js';\nimport 'react-dom';\nimport '@sendbird/chat';\nimport '@sendbird/chat/openChannel';\nimport '../../ui/SortByRow.js';\nimport '../../chunks/bundle-etuaqevl.js';\nimport '../../ui/MessageItemReactionMenu.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../ui/ReactionButton.js';\nimport '../../chunks/bundle-AfQS5DGf.js';\nimport '../../chunks/bundle-f-SpnOx2.js';\nimport '../../ui/EmojiReactions.js';\nimport '../../ui/ReactionBadge.js';\nimport '../../ui/BottomSheet.js';\nimport '../../chunks/bundle-CXdo2kR_.js';\nimport 'css-vars-ponyfill';\nimport '../../chunks/bundle-DDeWOERD.js';\nimport '../../ui/UserListItem.js';\nimport '../../chunks/bundle-CFosTNce.js';\nimport '../../chunks/bundle-DXRRGizV.js';\nimport '../../ui/MutedAvatarOverlay.js';\nimport '../../ui/Checkbox.js';\nimport '../../ui/UserProfile.js';\nimport '../../sendbirdSelectors.js';\nimport '../../ui/Tooltip.js';\nimport '../../ui/TooltipWrapper.js';\nimport '../../Message/context.js';\nimport '../../ui/AdminMessage.js';\nimport '../../ui/QuoteMessage.js';\nimport '../../chunks/bundle-BqMHiKkl.js';\nimport '../../ui/MobileMenu.js';\nimport '../../ui/ThreadReplies.js';\nimport '../../ui/OGMessageItemBody.js';\nimport '../../chunks/bundle-DofK8ySe.js';\nimport '../../ui/MentionLabel.js';\nimport '../../ui/LinkLabel.js';\nimport '../../ui/TextMessageItemBody.js';\nimport '../../ui/FileMessageItemBody.js';\nimport '../../ui/TextButton.js';\nimport '../../chunks/bundle-ZVq6xGXk.js';\nimport '../../ui/FileViewer.js';\nimport '../../chunks/bundle-Gdl-rzQC.js';\nimport '../../ui/VoiceMessageItemBody.js';\nimport '../../ui/ProgressBar.js';\nimport '../../VoicePlayer/useVoicePlayer.js';\nimport '../../ui/PlaybackTime.js';\nimport '../../ui/ThumbnailMessageItemBody.js';\nimport '../../ui/UnknownMessageItemBody.js';\nimport '../../ui/TemplateMessageItemBody.js';\nimport '../../chunks/bundle-uLjwqZrR.js';\nimport '../../ui/FallbackTemplateMessageItemBody.tsx.js';\nimport '../../ui/LoadingTemplateMessageItemBody.tsx.js';\nimport '../../ui/FeedbackIconButton.js';\nimport '../../ui/MobileFeedbackMenu.js';\nimport '../../ui/MessageFeedbackModal.js';\nimport '../../ui/Input.js';\nimport '../../ui/MessageFeedbackFailedModal.js';\nimport '../../chunks/bundle-Cf0UgZwi.js';\nimport './SuggestedReplies.js';\nimport '../../chunks/bundle-Due9yzp6.js';\nimport '../../chunks/bundle-CqpGyIDR.js';\nimport '../../chunks/bundle-D0TYbkjN.js';\nimport '../../chunks/bundle-Zvm5CMGT.js';\n\nvar Message = function (props) {\n    var _a = useSendbirdStateContext(), config = _a.config, emojiManager = _a.emojiManager;\n    var _b = useGroupChannelContext(), loading = _b.loading, currentChannel = _b.currentChannel, animatedMessageId = _b.animatedMessageId, setAnimatedMessageId = _b.setAnimatedMessageId, scrollToMessage = _b.scrollToMessage, replyType = _b.replyType, threadReplySelectType = _b.threadReplySelectType, isReactionEnabled = _b.isReactionEnabled, toggleReaction = _b.toggleReaction, nicknamesMap = _b.nicknamesMap, setQuoteMessage = _b.setQuoteMessage, renderUserMentionItem = _b.renderUserMentionItem, onQuoteMessageClick = _b.onQuoteMessageClick, onReplyInThreadClick = _b.onReplyInThreadClick, onMessageAnimated = _b.onMessageAnimated, onBeforeDownloadFileMessage = _b.onBeforeDownloadFileMessage, messages = _b.messages, updateUserMessage = _b.updateUserMessage, sendUserMessage = _b.sendUserMessage, resendMessage = _b.resendMessage, deleteMessage = _b.deleteMessage;\n    var message = props.message;\n    var initialized = !loading && Boolean(currentChannel);\n    var shouldRenderSuggestedReplies = useIIFE(function () {\n        var _a;\n        var _b = config.groupChannel, enableSuggestedReplies = _b.enableSuggestedReplies, showSuggestedRepliesFor = _b.showSuggestedRepliesFor;\n        var lastMessageInView = messages[messages.length - 1];\n        var hasUnsentMessage = isSendableMessage(lastMessageInView) && lastMessageInView.sendingStatus !== 'succeeded';\n        var showSuggestedReplies = showSuggestedRepliesFor === 'all_messages' ? true : message.messageId === ((_a = currentChannel === null || currentChannel === void 0 ? void 0 : currentChannel.lastMessage) === null || _a === void 0 ? void 0 : _a.messageId);\n        return enableSuggestedReplies && getSuggestedReplies(message).length > 0 && !hasUnsentMessage && showSuggestedReplies;\n    });\n    return (React__default.createElement(MessageView, __assign({}, props, { channel: currentChannel, emojiContainer: emojiManager.emojiContainer, editInputDisabled: !initialized\n            || isDisabledBecauseFrozen(currentChannel !== null && currentChannel !== void 0 ? currentChannel : undefined)\n            || isDisabledBecauseMuted(currentChannel !== null && currentChannel !== void 0 ? currentChannel : undefined)\n            || !config.isOnline, shouldRenderSuggestedReplies: shouldRenderSuggestedReplies, isReactionEnabled: isReactionEnabled !== null && isReactionEnabled !== void 0 ? isReactionEnabled : false, replyType: replyType !== null && replyType !== void 0 ? replyType : 'NONE', threadReplySelectType: threadReplySelectType !== null && threadReplySelectType !== void 0 ? threadReplySelectType : ThreadReplySelectType.PARENT, nicknamesMap: nicknamesMap, renderUserMentionItem: renderUserMentionItem, scrollToMessage: scrollToMessage, toggleReaction: toggleReaction, setQuoteMessage: setQuoteMessage, onQuoteMessageClick: onQuoteMessageClick, onReplyInThreadClick: onReplyInThreadClick, sendUserMessage: sendUserMessage, updateUserMessage: updateUserMessage, resendMessage: resendMessage, deleteMessage: deleteMessage, animatedMessageId: animatedMessageId, setAnimatedMessageId: setAnimatedMessageId, onMessageAnimated: onMessageAnimated, renderFileViewer: function (props) { return React__default.createElement(FileViewer, __assign({}, props)); }, renderRemoveMessageModal: function (props) { return React__default.createElement(RemoveMessageModal, __assign({}, props)); }, usedInLegacy: false, onBeforeDownloadFileMessage: onBeforeDownloadFileMessage })));\n};\n\nexport { Message, Message as default };\n//# sourceMappingURL=Message.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}