{"ast":null,"code":"import React__default, { useRef } from 'react';\nimport { C as ContextMenu, f as EmojiListItems, g as getObservingId } from '../chunks/bundle-CwKZj-B6.js';\nimport Icon, { IconTypes, IconColors } from './Icon.js';\nimport IconButton from './IconButton.js';\nimport ImageRenderer from './ImageRenderer.js';\nimport ReactionButton from './ReactionButton.js';\nimport { u as isPendingMessage, v as isFailedMessage, w as getClassName, x as getEmojiListAll } from '../chunks/bundle-DxTN4_0p.js';\nimport '../chunks/bundle-BQi9-O76.js';\nimport 'react-dom';\nimport '../chunks/bundle-BgwzpLeQ.js';\nimport '@sendbird/chat';\nimport '@sendbird/chat/openChannel';\nimport './SortByRow.js';\nimport '../chunks/bundle-etuaqevl.js';\nimport '../withSendbird.js';\nimport '../chunks/bundle-cQZ3UZoG.js';\nimport '../chunks/bundle-Bwk5KPwK.js';\nimport '../chunks/bundle-bdDHjHH6.js';\nimport '../chunks/bundle-DhKQeIfP.js';\nimport '../chunks/bundle-AfQS5DGf.js';\nimport '../chunks/bundle-f-SpnOx2.js';\nimport '@sendbird/chat/groupChannel';\nimport '../utils/message/getOutgoingMessageState.js';\nimport '../chunks/bundle-CNWAfTVw.js';\nimport '../chunks/bundle-CA85nVxp.js';\nfunction MessageEmojiMenu(_a) {\n  var className = _a.className,\n    message = _a.message,\n    userId = _a.userId,\n    _b = _a.spaceFromTrigger,\n    spaceFromTrigger = _b === void 0 ? {\n      x: 0,\n      y: 0\n    } : _b,\n    emojiContainer = _a.emojiContainer,\n    toggleReaction = _a.toggleReaction;\n  var triggerRef = useRef(null);\n  var containerRef = useRef(null);\n  if (isPendingMessage(message) || isFailedMessage(message)) {\n    return null;\n  }\n  return React__default.createElement(\"div\", {\n    className: getClassName([className !== null && className !== void 0 ? className : '', 'sendbird-message-item-reaction-menu']),\n    ref: containerRef\n  }, React__default.createElement(ContextMenu, {\n    menuTrigger: function (toggleDropdown) {\n      return React__default.createElement(IconButton, {\n        className: \"sendbird-message-item-reaction-menu__trigger\",\n        ref: triggerRef,\n        width: \"32px\",\n        height: \"32px\",\n        onClick: function () {\n          toggleDropdown();\n        }\n      }, React__default.createElement(Icon, {\n        className: \"sendbird-message-item-reaction-menu__trigger__icon\",\n        testID: \"sendbird-message-item-reaction-menu__trigger__icon\",\n        type: IconTypes.EMOJI_MORE,\n        fillColor: IconColors.CONTENT_INVERSE,\n        width: \"24px\",\n        height: \"24px\"\n      }));\n    },\n    menuItems: function (closeDropdown) {\n      return React__default.createElement(EmojiListItems, {\n        id: getObservingId(message.messageId),\n        parentRef: triggerRef,\n        parentContainRef: containerRef,\n        closeDropdown: closeDropdown,\n        spaceFromTrigger: spaceFromTrigger\n      }, emojiContainer && getEmojiListAll(emojiContainer).map(function (emoji) {\n        var _a, _b, _c;\n        var isReacted = ((_c = (_b = (_a = message === null || message === void 0 ? void 0 : message.reactions) === null || _a === void 0 ? void 0 : _a.find(function (reaction) {\n          return reaction.key === emoji.key;\n        })) === null || _b === void 0 ? void 0 : _b.userIds) === null || _c === void 0 ? void 0 : _c.some(function (reactorId) {\n          return reactorId === userId;\n        })) || false;\n        return React__default.createElement(ReactionButton, {\n          key: emoji.key,\n          width: \"36px\",\n          height: \"36px\",\n          selected: isReacted,\n          onClick: function () {\n            closeDropdown();\n            toggleReaction === null || toggleReaction === void 0 ? void 0 : toggleReaction(message, emoji.key, isReacted);\n          },\n          testID: \"ui_emoji_reactions_menu_\".concat(emoji.key)\n        }, React__default.createElement(ImageRenderer, {\n          url: emoji.url,\n          width: \"28px\",\n          height: \"28px\",\n          placeHolder: function (_a) {\n            var style = _a.style;\n            return React__default.createElement(\"div\", {\n              style: style\n            }, React__default.createElement(Icon, {\n              type: IconTypes.QUESTION,\n              fillColor: IconColors.ON_BACKGROUND_3,\n              width: \"28px\",\n              height: \"28px\"\n            }));\n          }\n        }));\n      }));\n    }\n  }));\n}\nexport { MessageEmojiMenu, MessageEmojiMenu as default };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import React__default, { useRef } from 'react';\nimport { C as ContextMenu, f as EmojiListItems, g as getObservingId } from '../chunks/bundle-CwKZj-B6.js';\nimport Icon, { IconTypes, IconColors } from './Icon.js';\nimport IconButton from './IconButton.js';\nimport ImageRenderer from './ImageRenderer.js';\nimport ReactionButton from './ReactionButton.js';\nimport { u as isPendingMessage, v as isFailedMessage, w as getClassName, x as getEmojiListAll } from '../chunks/bundle-DxTN4_0p.js';\nimport '../chunks/bundle-BQi9-O76.js';\nimport 'react-dom';\nimport '../chunks/bundle-BgwzpLeQ.js';\nimport '@sendbird/chat';\nimport '@sendbird/chat/openChannel';\nimport './SortByRow.js';\nimport '../chunks/bundle-etuaqevl.js';\nimport '../withSendbird.js';\nimport '../chunks/bundle-cQZ3UZoG.js';\nimport '../chunks/bundle-Bwk5KPwK.js';\nimport '../chunks/bundle-bdDHjHH6.js';\nimport '../chunks/bundle-DhKQeIfP.js';\nimport '../chunks/bundle-AfQS5DGf.js';\nimport '../chunks/bundle-f-SpnOx2.js';\nimport '@sendbird/chat/groupChannel';\nimport '../utils/message/getOutgoingMessageState.js';\nimport '../chunks/bundle-CNWAfTVw.js';\nimport '../chunks/bundle-CA85nVxp.js';\n\nfunction MessageEmojiMenu(_a) {\n    var className = _a.className, message = _a.message, userId = _a.userId, _b = _a.spaceFromTrigger, spaceFromTrigger = _b === void 0 ? { x: 0, y: 0 } : _b, emojiContainer = _a.emojiContainer, toggleReaction = _a.toggleReaction;\n    var triggerRef = useRef(null);\n    var containerRef = useRef(null);\n    if (isPendingMessage(message) || isFailedMessage(message)) {\n        return null;\n    }\n    return (React__default.createElement(\"div\", { className: getClassName([className !== null && className !== void 0 ? className : '', 'sendbird-message-item-reaction-menu']), ref: containerRef },\n        React__default.createElement(ContextMenu, { menuTrigger: function (toggleDropdown) { return (React__default.createElement(IconButton, { className: \"sendbird-message-item-reaction-menu__trigger\", ref: triggerRef, width: \"32px\", height: \"32px\", onClick: function () {\n                    toggleDropdown();\n                } },\n                React__default.createElement(Icon, { className: \"sendbird-message-item-reaction-menu__trigger__icon\", testID: \"sendbird-message-item-reaction-menu__trigger__icon\", type: IconTypes.EMOJI_MORE, fillColor: IconColors.CONTENT_INVERSE, width: \"24px\", height: \"24px\" }))); }, menuItems: function (closeDropdown) {\n                return (React__default.createElement(EmojiListItems, { id: getObservingId(message.messageId), parentRef: triggerRef, parentContainRef: containerRef, closeDropdown: closeDropdown, spaceFromTrigger: spaceFromTrigger }, emojiContainer && getEmojiListAll(emojiContainer).map(function (emoji) {\n                    var _a, _b, _c;\n                    var isReacted = ((_c = (_b = (_a = message === null || message === void 0 ? void 0 : message.reactions) === null || _a === void 0 ? void 0 : _a.find(function (reaction) { return reaction.key === emoji.key; })) === null || _b === void 0 ? void 0 : _b.userIds) === null || _c === void 0 ? void 0 : _c.some(function (reactorId) { return reactorId === userId; })) || false;\n                    return (React__default.createElement(ReactionButton, { key: emoji.key, width: \"36px\", height: \"36px\", selected: isReacted, onClick: function () {\n                            closeDropdown();\n                            toggleReaction === null || toggleReaction === void 0 ? void 0 : toggleReaction(message, emoji.key, isReacted);\n                        }, testID: \"ui_emoji_reactions_menu_\".concat(emoji.key) },\n                        React__default.createElement(ImageRenderer, { url: emoji.url, width: \"28px\", height: \"28px\", placeHolder: function (_a) {\n                                var style = _a.style;\n                                return (React__default.createElement(\"div\", { style: style },\n                                    React__default.createElement(Icon, { type: IconTypes.QUESTION, fillColor: IconColors.ON_BACKGROUND_3, width: \"28px\", height: \"28px\" })));\n                            } })));\n                })));\n            } })));\n}\n\nexport { MessageEmojiMenu, MessageEmojiMenu as default };\n//# sourceMappingURL=MessageItemReactionMenu.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}