{"ast":null,"code":"import React__default, { useState } from 'react';\nimport { getCreateGroupChannel } from '../sendbirdSelectors.js';\nimport { useSendbirdStateContext } from '../useSendbirdStateContext.js';\nvar CHANNEL_TYPE;\n(function (CHANNEL_TYPE) {\n  CHANNEL_TYPE[\"GROUP\"] = \"group\";\n  CHANNEL_TYPE[\"SUPERGROUP\"] = \"supergroup\";\n  CHANNEL_TYPE[\"BROADCAST\"] = \"broadcast\";\n})(CHANNEL_TYPE || (CHANNEL_TYPE = {}));\nvar CreateChannelContext = React__default.createContext(null);\nvar CreateChannelProvider = function (props) {\n  var _a;\n  var children = props.children,\n    onCreateChannelClick = props.onCreateChannelClick,\n    onBeforeCreateChannel = props.onBeforeCreateChannel,\n    onChannelCreated = props.onChannelCreated,\n    userListQuery = props.userListQuery,\n    onCreateChannel = props.onCreateChannel,\n    overrideInviteUser = props.overrideInviteUser;\n  var store = useSendbirdStateContext();\n  var _userListQuery = userListQuery !== null && userListQuery !== void 0 ? userListQuery : (_a = store === null || store === void 0 ? void 0 : store.config) === null || _a === void 0 ? void 0 : _a.userListQuery;\n  var _b = useState(0),\n    step = _b[0],\n    setStep = _b[1];\n  var _c = useState(CHANNEL_TYPE.GROUP),\n    type = _c[0],\n    setType = _c[1];\n  return React__default.createElement(CreateChannelContext.Provider, {\n    value: {\n      sdk: store.stores.sdkStore.sdk,\n      createChannel: getCreateGroupChannel(store),\n      onCreateChannelClick: onCreateChannelClick,\n      onBeforeCreateChannel: onBeforeCreateChannel,\n      onChannelCreated: onChannelCreated,\n      userListQuery: _userListQuery,\n      step: step,\n      setStep: setStep,\n      type: type,\n      setType: setType,\n      onCreateChannel: onCreateChannel,\n      overrideInviteUser: overrideInviteUser\n    }\n  }, children);\n};\nvar useCreateChannelContext = function () {\n  var context = React__default.useContext(CreateChannelContext);\n  if (!context) throw new Error('CreateChannelContext not found. Use within the CreateChannel module.');\n  return context;\n};\nexport { CreateChannelProvider as C, CHANNEL_TYPE as a, useCreateChannelContext as u };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import React__default, { useState } from 'react';\nimport { getCreateGroupChannel } from '../sendbirdSelectors.js';\nimport { useSendbirdStateContext } from '../useSendbirdStateContext.js';\n\nvar CHANNEL_TYPE;\n(function (CHANNEL_TYPE) {\n    CHANNEL_TYPE[\"GROUP\"] = \"group\";\n    CHANNEL_TYPE[\"SUPERGROUP\"] = \"supergroup\";\n    CHANNEL_TYPE[\"BROADCAST\"] = \"broadcast\";\n})(CHANNEL_TYPE || (CHANNEL_TYPE = {}));\n\nvar CreateChannelContext = React__default.createContext(null);\nvar CreateChannelProvider = function (props) {\n    var _a;\n    var children = props.children, onCreateChannelClick = props.onCreateChannelClick, onBeforeCreateChannel = props.onBeforeCreateChannel, onChannelCreated = props.onChannelCreated, userListQuery = props.userListQuery, onCreateChannel = props.onCreateChannel, overrideInviteUser = props.overrideInviteUser;\n    var store = useSendbirdStateContext();\n    var _userListQuery = userListQuery !== null && userListQuery !== void 0 ? userListQuery : (_a = store === null || store === void 0 ? void 0 : store.config) === null || _a === void 0 ? void 0 : _a.userListQuery;\n    var _b = useState(0), step = _b[0], setStep = _b[1];\n    var _c = useState(CHANNEL_TYPE.GROUP), type = _c[0], setType = _c[1];\n    return (React__default.createElement(CreateChannelContext.Provider, { value: {\n            sdk: store.stores.sdkStore.sdk,\n            createChannel: getCreateGroupChannel(store),\n            onCreateChannelClick: onCreateChannelClick,\n            onBeforeCreateChannel: onBeforeCreateChannel,\n            onChannelCreated: onChannelCreated,\n            userListQuery: _userListQuery,\n            step: step,\n            setStep: setStep,\n            type: type,\n            setType: setType,\n            onCreateChannel: onCreateChannel,\n            overrideInviteUser: overrideInviteUser,\n        } }, children));\n};\nvar useCreateChannelContext = function () {\n    var context = React__default.useContext(CreateChannelContext);\n    if (!context)\n        throw new Error('CreateChannelContext not found. Use within the CreateChannel module.');\n    return context;\n};\n\nexport { CreateChannelProvider as C, CHANNEL_TYPE as a, useCreateChannelContext as u };\n//# sourceMappingURL=bundle-CBUfFuFR.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}