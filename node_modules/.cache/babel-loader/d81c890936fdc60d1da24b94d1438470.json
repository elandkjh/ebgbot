{"ast":null,"code":"import React__default, { useContext } from 'react';\nimport { b as isFileMessage, c as isMultipleFilesMessage, i as isVoiceMessage, I as isImageMessage, r as isVideoMessage, J as isImageFileInfo, p as isThumbnailMessage, L as isAudioMessage, w as getClassName, s as isGifMessage, l as isUserMessage, m as getUIKitMessageType, U as UIKitMessageTypes } from '../chunks/bundle-DxTN4_0p.js';\nimport Icon, { IconTypes, IconColors } from './Icon.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../chunks/bundle-DhKQeIfP.js';\nimport { L as LocalizationContext } from '../chunks/bundle-cQZ3UZoG.js';\nimport ImageRenderer from './ImageRenderer.js';\nimport { c as getMessageFirstFileThumbnailUrl, g as getMessageFirstFileUrl, a as getMessageFirstFileType, b as getMessageFirstFileName } from '../chunks/bundle-BqMHiKkl.js';\nimport '../chunks/bundle-BQi9-O76.js';\nimport '@sendbird/chat/groupChannel';\nimport '../utils/message/getOutgoingMessageState.js';\nimport '../chunks/bundle-CNWAfTVw.js';\nimport '../chunks/bundle-CA85nVxp.js';\nimport '../chunks/bundle-BgwzpLeQ.js';\nimport '../chunks/bundle-Bwk5KPwK.js';\nimport '../chunks/bundle-bdDHjHH6.js';\nvar componentClassname = 'sendbird-quote_message_input__avatar';\nfunction QuoteMessageThumbnail(_a) {\n  var _b;\n  var message = _a.message;\n  if (!isFileMessage(message) && !isMultipleFilesMessage(message) || isVoiceMessage(message)) {\n    return React__default.createElement(React__default.Fragment, null);\n  }\n  var thumbnailUrl = getMessageFirstFileThumbnailUrl(message);\n  if (!thumbnailUrl) {\n    if (isImageMessage(message) || isVideoMessage(message)) {\n      thumbnailUrl = getMessageFirstFileUrl(message);\n    } else if (isMultipleFilesMessage(message) && isImageFileInfo((_b = message.fileInfoList) === null || _b === void 0 ? void 0 : _b[0])) {\n      thumbnailUrl = message.fileInfoList[0].url;\n    }\n  }\n  if (isVideoMessage(message) && thumbnailUrl) {\n    return React__default.createElement(\"div\", {\n      className: componentClassname\n    }, React__default.createElement(\"video\", {\n      style: {\n        width: '44px',\n        height: '44px'\n      },\n      src: thumbnailUrl\n    }));\n  } else if ((isThumbnailMessage(message) || isMultipleFilesMessage(message)) && thumbnailUrl) {\n    return React__default.createElement(ImageRenderer, {\n      className: componentClassname,\n      url: thumbnailUrl,\n      alt: getMessageFirstFileType(message),\n      width: \"44px\",\n      height: \"44px\",\n      fixedSize: true\n    });\n  } else if (isAudioMessage(message)) {\n    return React__default.createElement(\"div\", {\n      className: componentClassname\n    }, React__default.createElement(Icon, {\n      type: IconTypes.FILE_AUDIO,\n      fillColor: IconColors.ON_BACKGROUND_2,\n      width: \"24px\",\n      height: \"24px\"\n    }));\n  } else {\n    return React__default.createElement(\"div\", {\n      className: componentClassname\n    }, React__default.createElement(Icon, {\n      type: IconTypes.FILE_DOCUMENT,\n      fillColor: IconColors.ON_BACKGROUND_2,\n      width: \"24px\",\n      height: \"24px\"\n    }));\n  }\n}\nfunction QuoteMessageInput(_a) {\n  var className = _a.className,\n    replyingMessage = _a.replyingMessage,\n    onClose = _a.onClose;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var fileMessage = replyingMessage;\n  var sender = replyingMessage === null || replyingMessage === void 0 ? void 0 : replyingMessage.sender;\n  var displayFileIcon = (isFileMessage(replyingMessage) || isMultipleFilesMessage(replyingMessage)) && !isVoiceMessage(replyingMessage);\n  return React__default.createElement(\"div\", {\n    className: getClassName(['sendbird-quote_message_input', className !== null && className !== void 0 ? className : ''])\n  }, displayFileIcon && React__default.createElement(QuoteMessageThumbnail, {\n    message: fileMessage\n  }), React__default.createElement(\"div\", {\n    className: \"sendbird-quote_message_input__body\",\n    style: {\n      width: \"calc(100% - \".concat(displayFileIcon ? '164px' : '120px', \")\"),\n      left: displayFileIcon ? '92px' : '40px'\n    }\n  }, React__default.createElement(Label, {\n    className: \"sendbird-quote_message_input__body__sender-name\",\n    type: LabelTypography.CAPTION_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, \"\".concat(stringSet.QUOTE_MESSAGE_INPUT__REPLY_TO, \" \").concat(sender && sender.nickname ? sender.nickname : stringSet.NO_NAME)), React__default.createElement(Label, {\n    className: \"sendbird-quote_message_input__body__message-content\",\n    type: LabelTypography.BODY_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, isImageMessage(fileMessage) && !isGifMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE_IMAGE, isVideoMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE__VIDEO, isGifMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE_GIF, isUserMessage(replyingMessage) && replyingMessage.message, getUIKitMessageType(replyingMessage) === UIKitMessageTypes.FILE && getMessageFirstFileName(fileMessage), isMultipleFilesMessage(replyingMessage) && \"\".concat(fileMessage.fileInfoList.length, \" Photos\"), isVoiceMessage(replyingMessage) && stringSet.VOICE_MESSAGE)), React__default.createElement(Icon, {\n    className: \"sendbird-quote_message_input__close-button\",\n    type: IconTypes.CLOSE,\n    fillColor: IconColors.ON_BACKGROUND_2,\n    width: \"24px\",\n    height: \"24px\",\n    onClick: function () {\n      return onClose === null || onClose === void 0 ? void 0 : onClose(replyingMessage);\n    }\n  }));\n}\nexport { QuoteMessageInput as default };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import React__default, { useContext } from 'react';\nimport { b as isFileMessage, c as isMultipleFilesMessage, i as isVoiceMessage, I as isImageMessage, r as isVideoMessage, J as isImageFileInfo, p as isThumbnailMessage, L as isAudioMessage, w as getClassName, s as isGifMessage, l as isUserMessage, m as getUIKitMessageType, U as UIKitMessageTypes } from '../chunks/bundle-DxTN4_0p.js';\nimport Icon, { IconTypes, IconColors } from './Icon.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../chunks/bundle-DhKQeIfP.js';\nimport { L as LocalizationContext } from '../chunks/bundle-cQZ3UZoG.js';\nimport ImageRenderer from './ImageRenderer.js';\nimport { c as getMessageFirstFileThumbnailUrl, g as getMessageFirstFileUrl, a as getMessageFirstFileType, b as getMessageFirstFileName } from '../chunks/bundle-BqMHiKkl.js';\nimport '../chunks/bundle-BQi9-O76.js';\nimport '@sendbird/chat/groupChannel';\nimport '../utils/message/getOutgoingMessageState.js';\nimport '../chunks/bundle-CNWAfTVw.js';\nimport '../chunks/bundle-CA85nVxp.js';\nimport '../chunks/bundle-BgwzpLeQ.js';\nimport '../chunks/bundle-Bwk5KPwK.js';\nimport '../chunks/bundle-bdDHjHH6.js';\n\nvar componentClassname = 'sendbird-quote_message_input__avatar';\nfunction QuoteMessageThumbnail(_a) {\n    var _b;\n    var message = _a.message;\n    if (!isFileMessage(message) && !isMultipleFilesMessage(message) || isVoiceMessage(message)) {\n        return React__default.createElement(React__default.Fragment, null);\n    }\n    var thumbnailUrl = getMessageFirstFileThumbnailUrl(message);\n    if (!thumbnailUrl) {\n        if (isImageMessage(message) || isVideoMessage(message)) {\n            thumbnailUrl = getMessageFirstFileUrl(message);\n        }\n        else if (isMultipleFilesMessage(message) && isImageFileInfo((_b = message.fileInfoList) === null || _b === void 0 ? void 0 : _b[0])) {\n            thumbnailUrl = message.fileInfoList[0].url;\n        }\n    }\n    if (isVideoMessage(message) && thumbnailUrl) {\n        return (React__default.createElement(\"div\", { className: componentClassname },\n            React__default.createElement(\"video\", { style: {\n                    width: '44px',\n                    height: '44px',\n                }, src: thumbnailUrl })));\n    }\n    else if ((isThumbnailMessage(message) || isMultipleFilesMessage(message)) && thumbnailUrl) {\n        return (React__default.createElement(ImageRenderer, { className: componentClassname, url: thumbnailUrl, alt: getMessageFirstFileType(message), width: \"44px\", height: \"44px\", fixedSize: true }));\n    }\n    else if (isAudioMessage(message)) {\n        return (React__default.createElement(\"div\", { className: componentClassname },\n            React__default.createElement(Icon, { type: IconTypes.FILE_AUDIO, fillColor: IconColors.ON_BACKGROUND_2, width: \"24px\", height: \"24px\" })));\n    }\n    else {\n        return (React__default.createElement(\"div\", { className: componentClassname },\n            React__default.createElement(Icon, { type: IconTypes.FILE_DOCUMENT, fillColor: IconColors.ON_BACKGROUND_2, width: \"24px\", height: \"24px\" })));\n    }\n}\n\nfunction QuoteMessageInput(_a) {\n    var className = _a.className, replyingMessage = _a.replyingMessage, onClose = _a.onClose;\n    var stringSet = useContext(LocalizationContext).stringSet;\n    var fileMessage = replyingMessage;\n    var sender = replyingMessage === null || replyingMessage === void 0 ? void 0 : replyingMessage.sender;\n    var displayFileIcon = (isFileMessage(replyingMessage) || isMultipleFilesMessage(replyingMessage))\n        && !isVoiceMessage(replyingMessage);\n    return (React__default.createElement(\"div\", { className: getClassName(['sendbird-quote_message_input', className !== null && className !== void 0 ? className : '']) },\n        displayFileIcon && (React__default.createElement(QuoteMessageThumbnail, { message: fileMessage })),\n        React__default.createElement(\"div\", { className: \"sendbird-quote_message_input__body\", style: {\n                width: \"calc(100% - \".concat(displayFileIcon ? '164px' : '120px', \")\"),\n                left: displayFileIcon ? '92px' : '40px',\n            } },\n            React__default.createElement(Label, { className: \"sendbird-quote_message_input__body__sender-name\", type: LabelTypography.CAPTION_1, color: LabelColors.ONBACKGROUND_1 }, \"\".concat(stringSet.QUOTE_MESSAGE_INPUT__REPLY_TO, \" \").concat((sender && sender.nickname) ? sender.nickname : stringSet.NO_NAME)),\n            React__default.createElement(Label, { className: \"sendbird-quote_message_input__body__message-content\", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_3 },\n                isImageMessage(fileMessage) && !isGifMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE_IMAGE,\n                isVideoMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE__VIDEO,\n                isGifMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE_GIF,\n                isUserMessage(replyingMessage) && replyingMessage.message,\n                getUIKitMessageType(replyingMessage) === UIKitMessageTypes.FILE && getMessageFirstFileName(fileMessage),\n                isMultipleFilesMessage(replyingMessage)\n                    && \"\".concat(fileMessage.fileInfoList.length, \" Photos\"),\n                isVoiceMessage(replyingMessage) && stringSet.VOICE_MESSAGE)),\n        React__default.createElement(Icon, { className: \"sendbird-quote_message_input__close-button\", type: IconTypes.CLOSE, fillColor: IconColors.ON_BACKGROUND_2, width: \"24px\", height: \"24px\", onClick: function () { return onClose === null || onClose === void 0 ? void 0 : onClose(replyingMessage); } })));\n}\n\nexport { QuoteMessageInput as default };\n//# sourceMappingURL=QuoteMessageInput.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}