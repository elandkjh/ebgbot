{"ast":null,"code":"var _jsxFileName = \"D:\\\\ebgbot\\\\src\\\\ChatComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SendBird from 'sendbird';\nimport './ChatComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sb = new SendBird({\n  appId: '255A6E1D-2863-492B-AEAC-C7351A429D95'\n});\nfunction ChatComponent() {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [response, setResponse] = useState('');\n  const [channel, setChannel] = useState(null);\n  useEffect(() => {\n    // 사용자 로그인 및 채널 입장\n    sb.connect('guest_user', 'GUEST_USER_ACCESS_TOKEN', (user, error) => {\n      if (error) {\n        console.error('연결 오류:', error);\n        return;\n      }\n\n      // 공개 채널 생성 또는 입장\n      sb.OpenChannel.getChannel('CHANNEL_URL', (openChannel, error) => {\n        if (error) {\n          console.error('채널 입장 오류:', error);\n          return;\n        }\n        openChannel.enter((response, error) => {\n          if (error) {\n            console.error('채널 입장 오류:', error);\n            return;\n          }\n          setChannel(openChannel);\n        });\n      });\n    });\n  }, []);\n  const handleSend = async () => {\n    if (question.trim() === '' || !channel) return; // 빈 질문 방지 및 채널 존재 확인\n\n    // 메시지 전송\n    channel.sendUserMessage(question, (message, error) => {\n      if (error) {\n        console.error('메시지 전송 오류:', error);\n        return;\n      }\n      setResponse(message.message);\n      setQuestion(''); // 질문 입력란 비우기\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC9C8\\uBB38\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n        value: question,\n        onChange: e => setQuestion(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"\\uC804\\uC1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-response\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC751\\uB2F5:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatComponent, \"5o8lwZXxf4xvrB025ug+F3dljek=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","SendBird","jsxDEV","_jsxDEV","sb","appId","ChatComponent","_s","question","setQuestion","response","setResponse","channel","setChannel","connect","user","error","console","OpenChannel","getChannel","openChannel","enter","handleSend","trim","sendUserMessage","message","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/ebgbot/src/ChatComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SendBird from 'sendbird';\r\nimport './ChatComponent.css';\r\n\r\nconst sb = new SendBird({ appId: '255A6E1D-2863-492B-AEAC-C7351A429D95' });\r\n\r\nfunction ChatComponent() {\r\n  const [question, setQuestion] = useState('');\r\n  const [response, setResponse] = useState('');\r\n  const [channel, setChannel] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // 사용자 로그인 및 채널 입장\r\n    sb.connect('guest_user', 'GUEST_USER_ACCESS_TOKEN', (user, error) => {\r\n      if (error) {\r\n        console.error('연결 오류:', error);\r\n        return;\r\n      }\r\n      \r\n      // 공개 채널 생성 또는 입장\r\n      sb.OpenChannel.getChannel('CHANNEL_URL', (openChannel, error) => {\r\n        if (error) {\r\n          console.error('채널 입장 오류:', error);\r\n          return;\r\n        }\r\n        \r\n        openChannel.enter((response, error) => {\r\n          if (error) {\r\n            console.error('채널 입장 오류:', error);\r\n            return;\r\n          }\r\n          \r\n          setChannel(openChannel);\r\n        });\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const handleSend = async () => {\r\n    if (question.trim() === '' || !channel) return;  // 빈 질문 방지 및 채널 존재 확인\r\n    \r\n    // 메시지 전송\r\n    channel.sendUserMessage(question, (message, error) => {\r\n      if (error) {\r\n        console.error('메시지 전송 오류:', error);\r\n        return;\r\n      }\r\n\r\n      setResponse(message.message);\r\n      setQuestion(''); // 질문 입력란 비우기\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"질문을 입력하세요...\"\r\n          value={question}\r\n          onChange={(e) => setQuestion(e.target.value)}\r\n        />\r\n        <button onClick={handleSend}>전송</button>\r\n      </div>\r\n      {response && (\r\n        <div className=\"chat-response\">\r\n          <h3>응답:</h3>\r\n          <p>{response}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}