{"ast":null,"code":"import { _ as __assign } from '../../chunks/bundle-BQi9-O76.js';\nimport React__default, { useState, useContext } from 'react';\nimport { useSendbirdStateContext } from '../../useSendbirdStateContext.js';\nimport { useChannelSettingsContext } from '../context.js';\nimport { ChannelSettingsHeader } from './ChannelSettingsHeader.js';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../../chunks/bundle-DhKQeIfP.js';\nimport { L as LocalizationContext } from '../../chunks/bundle-cQZ3UZoG.js';\nimport Icon, { IconTypes, IconColors } from '../../ui/Icon.js';\nimport ChannelProfile from './ChannelProfile.js';\nimport LeaveChannel from './LeaveChannel.js';\nimport { d as deleteNullish, c as classnames } from '../../chunks/bundle-BgwzpLeQ.js';\nimport { MenuItem } from './ChannelSettingsMenuItem.js';\nimport { MenuListByRole } from './ChannelSettingMenuList.js';\nimport { useMenuItems } from '../hooks/useMenuList.js';\nexport { B as BannedUserList, M as MutedMemberList, O as OperatorList } from '../../chunks/bundle-DHpCLtwn.js';\nexport { M as MemberList } from '../../chunks/bundle-DQk06wFZ.js';\nimport '../../withSendbird.js';\nimport '../../chunks/bundle-BrTJ5Zbd.js';\nimport '../../chunks/bundle-etuaqevl.js';\nimport '../../ui/Header.js';\nimport '../../chunks/bundle-f-SpnOx2.js';\nimport '../../ui/TextButton.js';\nimport '../../chunks/bundle-rA4afvKU.js';\nimport '../../ui/IconButton.js';\nimport '../../ui/Loader.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\nimport '../../ui/ChannelAvatar.js';\nimport '../../chunks/bundle-CFosTNce.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../chunks/bundle-DXRRGizV.js';\nimport '../../chunks/bundle-GMlM2rlV.js';\nimport './EditDetailsModal.js';\nimport '../../chunks/bundle-CXdo2kR_.js';\nimport '../../chunks/bundle-DxTN4_0p.js';\nimport '@sendbird/chat/groupChannel';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../chunks/bundle-CNWAfTVw.js';\nimport '../../chunks/bundle-CA85nVxp.js';\nimport 'react-dom';\nimport '../../ui/Button.js';\nimport '@sendbird/uikit-tools';\nimport 'css-vars-ponyfill';\nimport '@sendbird/chat';\nimport '@sendbird/chat/openChannel';\nimport '../../chunks/bundle-DDeWOERD.js';\nimport '../../chunks/bundle-DCMGp6rH.js';\nimport '../../chunks/bundle-CwKZj-B6.js';\nimport '../../ui/SortByRow.js';\nimport '../../ui/Input.js';\nimport '../../chunks/bundle-CMLImr6T.js';\nimport '@sendbird/chat/message';\nimport '../../ui/Badge.js';\nimport '../../ui/Toggle.js';\nimport '../../chunks/bundle-BjjAXlnY.js';\nimport '../../ui/UserListItem.js';\nimport '../../ui/MutedAvatarOverlay.js';\nimport '../../ui/Checkbox.js';\nimport '../../ui/UserProfile.js';\nimport '../../sendbirdSelectors.js';\nimport '../../chunks/bundle-b6TpX_JP.js';\nimport '../../chunks/bundle-DvsVgg5f.js';\nimport '../../chunks/bundle-DSn10d8F.js';\nvar ChannelSettingsUI = function (props) {\n  var _a;\n  var _b = useChannelSettingsContext(),\n    channel = _b.channel,\n    invalidChannel = _b.invalidChannel,\n    onCloseClick = _b.onCloseClick,\n    loading = _b.loading;\n  var _c = deleteNullish(props),\n    _d = _c.renderHeader,\n    renderHeader = _d === void 0 ? function (props) {\n      return React__default.createElement(ChannelSettingsHeader, __assign({}, props));\n    } : _d,\n    renderLeaveChannel = _c.renderLeaveChannel,\n    renderChannelProfile = _c.renderChannelProfile,\n    _e = _c.renderModerationPanel,\n    renderModerationPanel = _e === void 0 ? function (props) {\n      return React__default.createElement(MenuListByRole, __assign({}, props));\n    } : _e,\n    renderPlaceholderError = _c.renderPlaceholderError,\n    renderPlaceholderLoading = _c.renderPlaceholderLoading;\n  var menuItems = useMenuItems();\n  var state = useSendbirdStateContext();\n  var _f = useState(false),\n    showLeaveChannelModal = _f[0],\n    setShowLeaveChannelModal = _f[1];\n  var isOnline = (_a = state === null || state === void 0 ? void 0 : state.config) === null || _a === void 0 ? void 0 : _a.isOnline;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  if (loading) {\n    if (renderPlaceholderLoading) return renderPlaceholderLoading();\n    return React__default.createElement(PlaceHolder, {\n      type: PlaceHolderTypes.LOADING\n    });\n  }\n  var headerProps = {\n    onCloseClick: onCloseClick\n  };\n  if (invalidChannel || !channel) {\n    return React__default.createElement(\"div\", null, renderHeader(headerProps), React__default.createElement(\"div\", null, renderPlaceholderError ? renderPlaceholderError() : React__default.createElement(PlaceHolder, {\n      type: PlaceHolderTypes.WRONG\n    })));\n  }\n  return React__default.createElement(React__default.Fragment, null, renderHeader(headerProps), React__default.createElement(\"div\", {\n    className: \"sendbird-channel-settings__scroll-area\"\n  }, (renderChannelProfile === null || renderChannelProfile === void 0 ? void 0 : renderChannelProfile()) || React__default.createElement(ChannelProfile, null), renderModerationPanel === null || renderModerationPanel === void 0 ? void 0 : renderModerationPanel({\n    menuItems: menuItems\n  }), (renderLeaveChannel === null || renderLeaveChannel === void 0 ? void 0 : renderLeaveChannel()) || React__default.createElement(MenuItem, {\n    className: classnames(!isOnline ? 'sendbird-channel-settings__panel-item__disabled' : '', 'sendbird-channel-settings__panel-item__leave-channel'),\n    onKeyDown: function () {\n      if (!isOnline) return;\n      setShowLeaveChannelModal(true);\n    },\n    onClick: function () {\n      if (!isOnline) return;\n      setShowLeaveChannelModal(true);\n    },\n    renderLeft: function () {\n      return React__default.createElement(Icon, {\n        className: ['sendbird-channel-settings__panel-icon-left', 'sendbird-channel-settings__panel-icon__leave'].join(' '),\n        type: IconTypes.LEAVE,\n        fillColor: IconColors.ERROR,\n        height: \"24px\",\n        width: \"24px\"\n      });\n    },\n    renderMiddle: function () {\n      return React__default.createElement(Label, {\n        type: LabelTypography.SUBTITLE_1,\n        color: LabelColors.ONBACKGROUND_1\n      }, stringSet.CHANNEL_SETTING__LEAVE_CHANNEL__TITLE);\n    }\n  }), showLeaveChannelModal && React__default.createElement(LeaveChannel, {\n    onCancel: function () {\n      setShowLeaveChannelModal(false);\n    },\n    onSubmit: function () {\n      setShowLeaveChannelModal(false);\n      onCloseClick === null || onCloseClick === void 0 ? void 0 : onCloseClick();\n    }\n  })));\n};\nexport { ChannelSettingsUI as default };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import { _ as __assign } from '../../chunks/bundle-BQi9-O76.js';\nimport React__default, { useState, useContext } from 'react';\nimport { useSendbirdStateContext } from '../../useSendbirdStateContext.js';\nimport { useChannelSettingsContext } from '../context.js';\nimport { ChannelSettingsHeader } from './ChannelSettingsHeader.js';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../../chunks/bundle-DhKQeIfP.js';\nimport { L as LocalizationContext } from '../../chunks/bundle-cQZ3UZoG.js';\nimport Icon, { IconTypes, IconColors } from '../../ui/Icon.js';\nimport ChannelProfile from './ChannelProfile.js';\nimport LeaveChannel from './LeaveChannel.js';\nimport { d as deleteNullish, c as classnames } from '../../chunks/bundle-BgwzpLeQ.js';\nimport { MenuItem } from './ChannelSettingsMenuItem.js';\nimport { MenuListByRole } from './ChannelSettingMenuList.js';\nimport { useMenuItems } from '../hooks/useMenuList.js';\nexport { B as BannedUserList, M as MutedMemberList, O as OperatorList } from '../../chunks/bundle-DHpCLtwn.js';\nexport { M as MemberList } from '../../chunks/bundle-DQk06wFZ.js';\nimport '../../withSendbird.js';\nimport '../../chunks/bundle-BrTJ5Zbd.js';\nimport '../../chunks/bundle-etuaqevl.js';\nimport '../../ui/Header.js';\nimport '../../chunks/bundle-f-SpnOx2.js';\nimport '../../ui/TextButton.js';\nimport '../../chunks/bundle-rA4afvKU.js';\nimport '../../ui/IconButton.js';\nimport '../../ui/Loader.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\nimport '../../ui/ChannelAvatar.js';\nimport '../../chunks/bundle-CFosTNce.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../chunks/bundle-DXRRGizV.js';\nimport '../../chunks/bundle-GMlM2rlV.js';\nimport './EditDetailsModal.js';\nimport '../../chunks/bundle-CXdo2kR_.js';\nimport '../../chunks/bundle-DxTN4_0p.js';\nimport '@sendbird/chat/groupChannel';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../chunks/bundle-CNWAfTVw.js';\nimport '../../chunks/bundle-CA85nVxp.js';\nimport 'react-dom';\nimport '../../ui/Button.js';\nimport '@sendbird/uikit-tools';\nimport 'css-vars-ponyfill';\nimport '@sendbird/chat';\nimport '@sendbird/chat/openChannel';\nimport '../../chunks/bundle-DDeWOERD.js';\nimport '../../chunks/bundle-DCMGp6rH.js';\nimport '../../chunks/bundle-CwKZj-B6.js';\nimport '../../ui/SortByRow.js';\nimport '../../ui/Input.js';\nimport '../../chunks/bundle-CMLImr6T.js';\nimport '@sendbird/chat/message';\nimport '../../ui/Badge.js';\nimport '../../ui/Toggle.js';\nimport '../../chunks/bundle-BjjAXlnY.js';\nimport '../../ui/UserListItem.js';\nimport '../../ui/MutedAvatarOverlay.js';\nimport '../../ui/Checkbox.js';\nimport '../../ui/UserProfile.js';\nimport '../../sendbirdSelectors.js';\nimport '../../chunks/bundle-b6TpX_JP.js';\nimport '../../chunks/bundle-DvsVgg5f.js';\nimport '../../chunks/bundle-DSn10d8F.js';\n\nvar ChannelSettingsUI = function (props) {\n    var _a;\n    var _b = useChannelSettingsContext(), channel = _b.channel, invalidChannel = _b.invalidChannel, onCloseClick = _b.onCloseClick, loading = _b.loading;\n    var _c = deleteNullish(props), _d = _c.renderHeader, renderHeader = _d === void 0 ? function (props) { return React__default.createElement(ChannelSettingsHeader, __assign({}, props)); } : _d, renderLeaveChannel = _c.renderLeaveChannel, renderChannelProfile = _c.renderChannelProfile, _e = _c.renderModerationPanel, renderModerationPanel = _e === void 0 ? function (props) { return React__default.createElement(MenuListByRole, __assign({}, props)); } : _e, renderPlaceholderError = _c.renderPlaceholderError, renderPlaceholderLoading = _c.renderPlaceholderLoading;\n    var menuItems = useMenuItems();\n    var state = useSendbirdStateContext();\n    var _f = useState(false), showLeaveChannelModal = _f[0], setShowLeaveChannelModal = _f[1];\n    var isOnline = (_a = state === null || state === void 0 ? void 0 : state.config) === null || _a === void 0 ? void 0 : _a.isOnline;\n    var stringSet = useContext(LocalizationContext).stringSet;\n    if (loading) {\n        if (renderPlaceholderLoading)\n            return renderPlaceholderLoading();\n        return React__default.createElement(PlaceHolder, { type: PlaceHolderTypes.LOADING });\n    }\n    var headerProps = { onCloseClick: onCloseClick };\n    if (invalidChannel || !channel) {\n        return (React__default.createElement(\"div\", null,\n            renderHeader(headerProps),\n            React__default.createElement(\"div\", null, renderPlaceholderError ? renderPlaceholderError() : React__default.createElement(PlaceHolder, { type: PlaceHolderTypes.WRONG }))));\n    }\n    return (React__default.createElement(React__default.Fragment, null,\n        renderHeader(headerProps),\n        React__default.createElement(\"div\", { className: \"sendbird-channel-settings__scroll-area\" },\n            (renderChannelProfile === null || renderChannelProfile === void 0 ? void 0 : renderChannelProfile()) || React__default.createElement(ChannelProfile, null), renderModerationPanel === null || renderModerationPanel === void 0 ? void 0 :\n            renderModerationPanel({ menuItems: menuItems }),\n            (renderLeaveChannel === null || renderLeaveChannel === void 0 ? void 0 : renderLeaveChannel()) || (React__default.createElement(MenuItem, { className: classnames(!isOnline ? 'sendbird-channel-settings__panel-item__disabled' : '', 'sendbird-channel-settings__panel-item__leave-channel'), onKeyDown: function () {\n                    if (!isOnline)\n                        return;\n                    setShowLeaveChannelModal(true);\n                }, onClick: function () {\n                    if (!isOnline)\n                        return;\n                    setShowLeaveChannelModal(true);\n                }, renderLeft: function () { return (React__default.createElement(Icon, { className: ['sendbird-channel-settings__panel-icon-left', 'sendbird-channel-settings__panel-icon__leave'].join(' '), type: IconTypes.LEAVE, fillColor: IconColors.ERROR, height: \"24px\", width: \"24px\" })); }, renderMiddle: function () { return (React__default.createElement(Label, { type: LabelTypography.SUBTITLE_1, color: LabelColors.ONBACKGROUND_1 }, stringSet.CHANNEL_SETTING__LEAVE_CHANNEL__TITLE)); } })),\n            showLeaveChannelModal && (React__default.createElement(LeaveChannel, { onCancel: function () {\n                    setShowLeaveChannelModal(false);\n                }, onSubmit: function () {\n                    setShowLeaveChannelModal(false);\n                    onCloseClick === null || onCloseClick === void 0 ? void 0 : onCloseClick();\n                } })))));\n};\n\nexport { ChannelSettingsUI as default };\n//# sourceMappingURL=ChannelSettingsUI.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}