{"ast":null,"code":"import React__default, { useContext, useState } from 'react';\nimport Icon, { IconTypes, IconColors } from './Icon.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../chunks/bundle-DhKQeIfP.js';\nimport ImageRenderer from './ImageRenderer.js';\nimport { L as LocalizationContext } from '../chunks/bundle-cQZ3UZoG.js';\nimport { y as getUIKitFileTypes, w as getClassName, l as isUserMessage, i as isVoiceMessage, p as isThumbnailMessage, c as isMultipleFilesMessage, h as isVideo, z as isGif, m as getUIKitMessageType, U as UIKitMessageTypes, o as getUIKitFileType, t as truncateString } from '../chunks/bundle-DxTN4_0p.js';\nimport { g as getMessageFirstFileUrl, a as getMessageFirstFileType, b as getMessageFirstFileName } from '../chunks/bundle-BqMHiKkl.js';\nimport '../chunks/bundle-BQi9-O76.js';\nimport '../chunks/bundle-BgwzpLeQ.js';\nimport '../chunks/bundle-Bwk5KPwK.js';\nimport '../chunks/bundle-bdDHjHH6.js';\nimport '@sendbird/chat/groupChannel';\nimport '../utils/message/getOutgoingMessageState.js';\nimport '../chunks/bundle-CNWAfTVw.js';\nimport '../chunks/bundle-CA85nVxp.js';\nfunction QuoteMessage(_a) {\n  var _b;\n  var _c, _d, _e, _f, _g, _h;\n  var message = _a.message,\n    _j = _a.userId,\n    userId = _j === void 0 ? '' : _j,\n    _k = _a.isByMe,\n    isByMe = _k === void 0 ? false : _k,\n    _l = _a.className,\n    className = _l === void 0 ? '' : _l,\n    _m = _a.isUnavailable,\n    isUnavailable = _m === void 0 ? false : _m,\n    onClick = _a.onClick;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var parentMessage = message.parentMessage;\n  var parentMessageSender = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender;\n  var parentMessageSenderNickname = userId === (parentMessageSender === null || parentMessageSender === void 0 ? void 0 : parentMessageSender.userId) ? stringSet.QUOTED_MESSAGE__CURRENT_USER : parentMessageSender === null || parentMessageSender === void 0 ? void 0 : parentMessageSender.nickname;\n  var parentMessageUrl = getMessageFirstFileUrl(parentMessage);\n  var parentMessageType = getMessageFirstFileType(parentMessage);\n  var currentMessageSenderNickname = userId === ((_c = message === null || message === void 0 ? void 0 : message.sender) === null || _c === void 0 ? void 0 : _c.userId) ? stringSet.QUOTED_MESSAGE__CURRENT_USER : (_d = message === null || message === void 0 ? void 0 : message.sender) === null || _d === void 0 ? void 0 : _d.nickname;\n  var _o = useState(false),\n    isThumbnailLoaded = _o[0],\n    setThumbnailLoaded = _o[1];\n  var uikitFileTypes = getUIKitFileTypes();\n  var splitFileName = (_f = (_e = getMessageFirstFileName(parentMessage)) === null || _e === void 0 ? void 0 : _e.split('/')) !== null && _f !== void 0 ? _f : parentMessageUrl.split('/');\n  return React__default.createElement(\"div\", {\n    className: getClassName([className, 'sendbird-quote-message', isByMe ? 'outgoing' : 'incoming', isUnavailable ? 'unavailable' : '']),\n    key: parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.messageId,\n    onClick: function () {\n      if (!isUnavailable && onClick) {\n        onClick();\n      }\n    },\n    onTouchEnd: function () {\n      if (!isUnavailable && onClick) {\n        onClick();\n      }\n    }\n  }, React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-to\"\n  }, React__default.createElement(Icon, {\n    className: \"sendbird-quote-message__replied-to__icon\",\n    type: IconTypes.REPLY,\n    fillColor: IconColors.ON_BACKGROUND_3,\n    width: \"12px\",\n    height: \"12px\"\n  }), React__default.createElement(Label, {\n    className: \"sendbird-quote-message__replied-to__text\",\n    testID: \"sendbird-quote-message__replied-to__text\",\n    type: LabelTypography.CAPTION_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, React__default.createElement(\"span\", {\n    className: \"sendbird-quote-message__replied-to__text__nickname\"\n  }, currentMessageSenderNickname), React__default.createElement(\"span\", {\n    className: \"sendbird-quote-message__replied-to__text__text\"\n  }, stringSet.QUOTED_MESSAGE__REPLIED_TO), React__default.createElement(\"span\", {\n    className: \"sendbird-quote-message__replied-to__text__nickname\"\n  }, parentMessageSenderNickname))), React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message\"\n  }, isUnavailable && React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__text-message\"\n  }, React__default.createElement(Label, {\n    className: \"sendbird-quote-message__replied-message__text-message__word\",\n    testID: \"sendbird-quote-message__replied-message__text-message__word\",\n    type: LabelTypography.BODY_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.QUOTED_MESSAGE__UNAVAILABLE)), isUserMessage(parentMessage) && ((_g = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.message) === null || _g === void 0 ? void 0 : _g.length) > 0 && !isUnavailable && React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__text-message\"\n  }, React__default.createElement(Label, {\n    className: \"sendbird-quote-message__replied-message__text-message__word\",\n    testID: \"sendbird-quote-message__replied-message__text-message__word\",\n    type: LabelTypography.BODY_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.message)), isVoiceMessage(parentMessage) && parentMessageUrl && !isUnavailable && React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__text-message\"\n  }, React__default.createElement(Label, {\n    className: \"sendbird-quote-message__replied-message__text-message__word\",\n    testID: \"sendbird-quote-message__replied-message__text-message__word\",\n    type: LabelTypography.BODY_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.VOICE_MESSAGE)), (isThumbnailMessage(parentMessage) || isMultipleFilesMessage(parentMessage)) && parentMessageUrl && !isUnavailable && React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message\"\n  }, React__default.createElement(ImageRenderer, {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__image\",\n    url: parentMessageUrl,\n    alt: parentMessageType,\n    width: \"144px\",\n    height: \"108px\",\n    onLoad: function () {\n      return setThumbnailLoaded(true);\n    },\n    defaultComponent: React__default.createElement(\"div\", {\n      className: \"sendbird-quote-message__replied-message__thumbnail-message__placeholder\"\n    }, React__default.createElement(\"div\", {\n      className: \"sendbird-quote-message__replied-message__thumbnail-message__placeholder__icon\"\n    }, React__default.createElement(Icon, {\n      type: isVideo(parentMessageType) ? IconTypes.PLAY : IconTypes.PHOTO,\n      fillColor: IconColors.ON_BACKGROUND_2,\n      width: \"22px\",\n      height: \"22px\"\n    })))\n  }), isVideo(parentMessageType) && !(((_h = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.thumbnails) === null || _h === void 0 ? void 0 : _h.length) > 0) && React__default.createElement(React__default.Fragment, null, React__default.createElement(\"video\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__video\"\n  }, React__default.createElement(\"source\", {\n    src: parentMessageUrl,\n    type: parentMessageType\n  })), React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__cover\"\n  }, React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__cover__icon\"\n  }, React__default.createElement(Icon, {\n    type: IconTypes.PLAY,\n    fillColor: IconColors.ON_BACKGROUND_2,\n    width: \"14px\",\n    height: \"14px\"\n  })))), isThumbnailLoaded && isGif(parentMessageType) && React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__cover\"\n  }, React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__thumbnail-message__cover__icon\"\n  }, React__default.createElement(Icon, {\n    type: IconTypes.GIF,\n    fillColor: IconColors.THUMBNAIL_ICON,\n    width: \"14px\",\n    height: \"14px\"\n  })))), getUIKitMessageType(parentMessage) === UIKitMessageTypes.FILE && parentMessageUrl && !isUnavailable && React__default.createElement(\"div\", {\n    className: \"sendbird-quote-message__replied-message__file-message\"\n  }, React__default.createElement(Icon, {\n    className: \"sendbird-quote-message__replied-message__file-message__type-icon\",\n    type: (_b = {}, _b[uikitFileTypes.IMAGE] = IconTypes.PHOTO, _b[uikitFileTypes.VIDEO] = IconTypes.PLAY, _b[uikitFileTypes.AUDIO] = IconTypes.FILE_AUDIO, _b[uikitFileTypes.GIF] = IconTypes.GIF, _b[uikitFileTypes.OTHERS] = IconTypes.FILE_DOCUMENT, _b)[getUIKitFileType(parentMessageType)],\n    fillColor: IconColors.ON_BACKGROUND_3,\n    width: \"16px\",\n    height: \"16px\"\n  }), React__default.createElement(Label, {\n    className: \"sendbird-quote-message__replied-message__file-message__file-name\",\n    type: LabelTypography.BODY_2,\n    color: LabelColors.ONBACKGROUND_3\n  }, truncateString(splitFileName[splitFileName.length - 1])))));\n}\nexport { QuoteMessage as default };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import React__default, { useContext, useState } from 'react';\nimport Icon, { IconTypes, IconColors } from './Icon.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../chunks/bundle-DhKQeIfP.js';\nimport ImageRenderer from './ImageRenderer.js';\nimport { L as LocalizationContext } from '../chunks/bundle-cQZ3UZoG.js';\nimport { y as getUIKitFileTypes, w as getClassName, l as isUserMessage, i as isVoiceMessage, p as isThumbnailMessage, c as isMultipleFilesMessage, h as isVideo, z as isGif, m as getUIKitMessageType, U as UIKitMessageTypes, o as getUIKitFileType, t as truncateString } from '../chunks/bundle-DxTN4_0p.js';\nimport { g as getMessageFirstFileUrl, a as getMessageFirstFileType, b as getMessageFirstFileName } from '../chunks/bundle-BqMHiKkl.js';\nimport '../chunks/bundle-BQi9-O76.js';\nimport '../chunks/bundle-BgwzpLeQ.js';\nimport '../chunks/bundle-Bwk5KPwK.js';\nimport '../chunks/bundle-bdDHjHH6.js';\nimport '@sendbird/chat/groupChannel';\nimport '../utils/message/getOutgoingMessageState.js';\nimport '../chunks/bundle-CNWAfTVw.js';\nimport '../chunks/bundle-CA85nVxp.js';\n\nfunction QuoteMessage(_a) {\n    var _b;\n    var _c, _d, _e, _f, _g, _h;\n    var message = _a.message, _j = _a.userId, userId = _j === void 0 ? '' : _j, _k = _a.isByMe, isByMe = _k === void 0 ? false : _k, _l = _a.className, className = _l === void 0 ? '' : _l, _m = _a.isUnavailable, isUnavailable = _m === void 0 ? false : _m, onClick = _a.onClick;\n    var stringSet = useContext(LocalizationContext).stringSet;\n    var parentMessage = message.parentMessage;\n    var parentMessageSender = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.sender;\n    var parentMessageSenderNickname = (userId === (parentMessageSender === null || parentMessageSender === void 0 ? void 0 : parentMessageSender.userId)) ? stringSet.QUOTED_MESSAGE__CURRENT_USER : parentMessageSender === null || parentMessageSender === void 0 ? void 0 : parentMessageSender.nickname;\n    var parentMessageUrl = getMessageFirstFileUrl(parentMessage);\n    var parentMessageType = getMessageFirstFileType(parentMessage);\n    var currentMessageSenderNickname = (userId === ((_c = message === null || message === void 0 ? void 0 : message.sender) === null || _c === void 0 ? void 0 : _c.userId)) ? stringSet.QUOTED_MESSAGE__CURRENT_USER : (_d = message === null || message === void 0 ? void 0 : message.sender) === null || _d === void 0 ? void 0 : _d.nickname;\n    var _o = useState(false), isThumbnailLoaded = _o[0], setThumbnailLoaded = _o[1];\n    var uikitFileTypes = getUIKitFileTypes();\n    var splitFileName = (_f = (_e = getMessageFirstFileName(parentMessage)) === null || _e === void 0 ? void 0 : _e.split('/')) !== null && _f !== void 0 ? _f : parentMessageUrl.split('/');\n    return (React__default.createElement(\"div\", { className: getClassName([className, 'sendbird-quote-message', isByMe ? 'outgoing' : 'incoming', isUnavailable ? 'unavailable' : '']), key: parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.messageId, onClick: function () {\n            if (!isUnavailable && onClick) {\n                onClick();\n            }\n        }, onTouchEnd: function () {\n            if (!isUnavailable && onClick) {\n                onClick();\n            }\n        } },\n        React__default.createElement(\"div\", { className: \"sendbird-quote-message__replied-to\" },\n            React__default.createElement(Icon, { className: \"sendbird-quote-message__replied-to__icon\", type: IconTypes.REPLY, fillColor: IconColors.ON_BACKGROUND_3, width: \"12px\", height: \"12px\" }),\n            React__default.createElement(Label, { className: \"sendbird-quote-message__replied-to__text\", testID: \"sendbird-quote-message__replied-to__text\", type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_3 },\n                React__default.createElement(\"span\", { className: \"sendbird-quote-message__replied-to__text__nickname\" }, currentMessageSenderNickname),\n                React__default.createElement(\"span\", { className: \"sendbird-quote-message__replied-to__text__text\" }, stringSet.QUOTED_MESSAGE__REPLIED_TO),\n                React__default.createElement(\"span\", { className: \"sendbird-quote-message__replied-to__text__nickname\" }, parentMessageSenderNickname))),\n        React__default.createElement(\"div\", { className: \"sendbird-quote-message__replied-message\" },\n            isUnavailable && (React__default.createElement(\"div\", { className: \"sendbird-quote-message__replied-message__text-message\" },\n                React__default.createElement(Label, { className: \"sendbird-quote-message__replied-message__text-message__word\", testID: \"sendbird-quote-message__replied-message__text-message__word\", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_1 }, stringSet.QUOTED_MESSAGE__UNAVAILABLE))),\n            ((isUserMessage(parentMessage) && ((_g = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.message) === null || _g === void 0 ? void 0 : _g.length) > 0) && !isUnavailable) && (React__default.createElement(\"div\", { className: \"sendbird-quote-message__replied-message__text-message\" },\n                React__default.createElement(Label, { className: \"sendbird-quote-message__replied-message__text-message__word\", testID: \"sendbird-quote-message__replied-message__text-message__word\", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_1 }, parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.message))),\n            (isVoiceMessage(parentMessage) && parentMessageUrl && !isUnavailable) && (React__default.createElement(\"div\", { className: \"sendbird-quote-message__replied-message__text-message\" },\n                React__default.createElement(Label, { className: \"sendbird-quote-message__replied-message__text-message__word\", testID: \"sendbird-quote-message__replied-message__text-message__word\", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_1 }, stringSet.VOICE_MESSAGE))),\n            ((isThumbnailMessage(parentMessage)\n                || isMultipleFilesMessage(parentMessage))\n                && parentMessageUrl\n                && !isUnavailable) && (React__default.createElement(\"div\", { className: \"sendbird-quote-message__replied-message__thumbnail-message\" },\n                React__default.createElement(ImageRenderer, { className: \"sendbird-quote-message__replied-message__thumbnail-message__image\", url: parentMessageUrl, alt: parentMessageType, width: \"144px\", height: \"108px\", onLoad: function () { return setThumbnailLoaded(true); }, defaultComponent: (React__default.createElement(\"div\", { className: \"sendbird-quote-message__replied-message__thumbnail-message__placeholder\" },\n                        React__default.createElement(\"div\", { className: \"sendbird-quote-message__replied-message__thumbnail-message__placeholder__icon\" },\n                            React__default.createElement(Icon, { type: isVideo(parentMessageType) ? IconTypes.PLAY : IconTypes.PHOTO, fillColor: IconColors.ON_BACKGROUND_2, width: \"22px\", height: \"22px\" })))) }),\n                (isVideo(parentMessageType) && !(((_h = parentMessage === null || parentMessage === void 0 ? void 0 : parentMessage.thumbnails) === null || _h === void 0 ? void 0 : _h.length) > 0)) && (React__default.createElement(React__default.Fragment, null,\n                    React__default.createElement(\"video\", { className: \"sendbird-quote-message__replied-message__thumbnail-message__video\" },\n                        React__default.createElement(\"source\", { src: parentMessageUrl, type: parentMessageType })),\n                    React__default.createElement(\"div\", { className: \"sendbird-quote-message__replied-message__thumbnail-message__cover\" },\n                        React__default.createElement(\"div\", { className: \"sendbird-quote-message__replied-message__thumbnail-message__cover__icon\" },\n                            React__default.createElement(Icon, { type: IconTypes.PLAY, fillColor: IconColors.ON_BACKGROUND_2, width: \"14px\", height: \"14px\" }))))),\n                (isThumbnailLoaded && isGif(parentMessageType)) && (React__default.createElement(\"div\", { className: \"sendbird-quote-message__replied-message__thumbnail-message__cover\" },\n                    React__default.createElement(\"div\", { className: \"sendbird-quote-message__replied-message__thumbnail-message__cover__icon\" },\n                        React__default.createElement(Icon, { type: IconTypes.GIF, fillColor: IconColors.THUMBNAIL_ICON, width: \"14px\", height: \"14px\" })))))),\n            (getUIKitMessageType(parentMessage) === UIKitMessageTypes.FILE && parentMessageUrl && !isUnavailable) && (React__default.createElement(\"div\", { className: \"sendbird-quote-message__replied-message__file-message\" },\n                React__default.createElement(Icon, { className: \"sendbird-quote-message__replied-message__file-message__type-icon\", type: (_b = {},\n                        _b[uikitFileTypes.IMAGE] = IconTypes.PHOTO,\n                        _b[uikitFileTypes.VIDEO] = IconTypes.PLAY,\n                        _b[uikitFileTypes.AUDIO] = IconTypes.FILE_AUDIO,\n                        _b[uikitFileTypes.GIF] = IconTypes.GIF,\n                        _b[uikitFileTypes.OTHERS] = IconTypes.FILE_DOCUMENT,\n                        _b)[getUIKitFileType(parentMessageType)], fillColor: IconColors.ON_BACKGROUND_3, width: \"16px\", height: \"16px\" }),\n                React__default.createElement(Label, { className: \"sendbird-quote-message__replied-message__file-message__file-name\", type: LabelTypography.BODY_2, color: LabelColors.ONBACKGROUND_3 }, truncateString(splitFileName[splitFileName.length - 1])))))));\n}\n\nexport { QuoteMessage as default };\n//# sourceMappingURL=QuoteMessage.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}