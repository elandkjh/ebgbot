{"ast":null,"code":"var _jsxFileName = \"D:\\\\ebgbot\\\\src\\\\ChatComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatComponent() {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [response, setResponse] = useState('');\n  const handleSend = async () => {\n    const res = await fetch('http://localhost:5000/chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        prompt: question\n      })\n    });\n    const data = await res.json();\n    setResponse(data.response);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uC9C8\\uBB38\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n      value: question,\n      onChange: e => setQuestion(e.target.value),\n      style: {\n        width: '300px',\n        padding: '10px',\n        borderRadius: '4px',\n        border: '1px solid #ccc'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      style: {\n        padding: '10px 20px',\n        marginLeft: '10px',\n        borderRadius: '4px',\n        backgroundColor: '#007bff',\n        color: 'white',\n        border: 'none'\n      },\n      children: \"\\uC804\\uC1A1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC751\\uB2F5:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatComponent, \"zkoMqXIfZFIynyXw/mbLGqqlFmI=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatComponent","_s","question","setQuestion","response","setResponse","handleSend","res","fetch","method","headers","body","JSON","stringify","prompt","data","json","style","marginLeft","children","type","placeholder","value","onChange","e","target","width","padding","borderRadius","border","fileName","_jsxFileName","lineNumber","columnNumber","onClick","backgroundColor","color","_c","$RefreshReg$"],"sources":["D:/ebgbot/src/ChatComponent.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction ChatComponent() {\r\n  const [question, setQuestion] = useState('');\r\n  const [response, setResponse] = useState('');\r\n\r\n  const handleSend = async () => {\r\n    const res = await fetch('http://localhost:5000/chat', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ prompt: question })\r\n    });\r\n\r\n    const data = await res.json();\r\n    setResponse(data.response);\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginLeft: '20px' }}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"질문을 입력하세요...\"\r\n        value={question}\r\n        onChange={(e) => setQuestion(e.target.value)}\r\n        style={{ width: '300px', padding: '10px', borderRadius: '4px', border: '1px solid #ccc' }}\r\n      />\r\n      <button onClick={handleSend} style={{ padding: '10px 20px', marginLeft: '10px', borderRadius: '4px', backgroundColor: '#007bff', color: 'white', border: 'none' }}>전송</button>\r\n      <div>\r\n        <h3>응답:</h3>\r\n        <p>{response}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;MACpDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,MAAM,EAAEZ;MAAS,CAAC;IAC3C,CAAC,CAAC;IAEF,MAAMa,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAC7BX,WAAW,CAACU,IAAI,CAACX,QAAQ,CAAC;EAC5B,CAAC;EAED,oBACEL,OAAA;IAAKkB,KAAK,EAAE;MAAEC,UAAU,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACjCpB,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,sDAAc;MAC1BC,KAAK,EAAEpB,QAAS;MAChBqB,QAAQ,EAAGC,CAAC,IAAKrB,WAAW,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CL,KAAK,EAAE;QAAES,KAAK,EAAE,OAAO;QAAEC,OAAO,EAAE,MAAM;QAAEC,YAAY,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAiB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3F,CAAC,eACFlC,OAAA;MAAQmC,OAAO,EAAE5B,UAAW;MAACW,KAAK,EAAE;QAAEU,OAAO,EAAE,WAAW;QAAET,UAAU,EAAE,MAAM;QAAEU,YAAY,EAAE,KAAK;QAAEO,eAAe,EAAE,SAAS;QAAEC,KAAK,EAAE,OAAO;QAAEP,MAAM,EAAE;MAAO,CAAE;MAAAV,QAAA,EAAC;IAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9KlC,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,EAAI;MAAG;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACZlC,OAAA;QAAAoB,QAAA,EAAIf;MAAQ;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChC,EAAA,CAjCQD,aAAa;AAAAqC,EAAA,GAAbrC,aAAa;AAmCtB,eAAeA,aAAa;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}