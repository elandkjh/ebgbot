{"ast":null,"code":"import { _ as __assign, a as __awaiter, b as __generator } from '../chunks/bundle-BQi9-O76.js';\nimport React__default, { useRef, useContext, useState, useMemo } from 'react';\nimport { f as format } from '../chunks/bundle-CAdqcqOm.js';\nimport { M as MessageStatus } from '../chunks/bundle-vuBlPTsL.js';\nimport { M as MessageMenu } from '../chunks/bundle-DkBecO3w.js';\nimport { C as ContextMenu, b as MenuItems, d as MENU_ROOT_ID, E as EMOJI_MENU_ROOT_ID, g as getObservingId, e as MENU_OBSERVING_CLASS_NAME } from '../chunks/bundle-CwKZj-B6.js';\nimport { c as classnames, d as deleteNullish, n as noop } from '../chunks/bundle-BgwzpLeQ.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../chunks/bundle-DhKQeIfP.js';\nimport { MessageEmojiMenu } from './MessageItemReactionMenu.js';\nimport EmojiReactions from './EmojiReactions.js';\nimport AdminMessage from './AdminMessage.js';\nimport QuoteMessage from './QuoteMessage.js';\nimport { k as isSendableMessage, n as getUIKitMessageTypes, K, C as isTemplateMessage, M as isOGMessage, N as isTextMessage, m as getUIKitMessageType, c as isMultipleFilesMessage, i as isVoiceMessage, p as isThumbnailMessage, e as getSenderName, O as getMessageContentMiddleClassNameByContainerType, P as isAdminMessage, w as getClassName, Q as UI_CONTAINER_TYPES } from '../chunks/bundle-DxTN4_0p.js';\nimport { u as useLocalization, L as LocalizationContext } from '../chunks/bundle-cQZ3UZoG.js';\nimport { useSendbirdStateContext } from '../useSendbirdStateContext.js';\nimport { EmojiContainer } from '@sendbird/chat';\nimport { FeedbackRating, Feedback } from '@sendbird/chat/message';\nimport { u as useLongPress } from '../chunks/bundle-AfQS5DGf.js';\nimport { MobileMenu } from './MobileMenu.js';\nimport { u as useMediaQueryContext } from '../chunks/bundle-f-SpnOx2.js';\nimport ThreadReplies from './ThreadReplies.js';\nimport { T as ThreadReplySelectType } from '../chunks/bundle-CveCFQYP.js';\nimport { A as Avatar } from '../chunks/bundle-CFosTNce.js';\nimport UserProfile from './UserProfile.js';\nimport { a as UserProfileContext } from '../chunks/bundle-BrTJ5Zbd.js';\nimport OGMessageItemBody from './OGMessageItemBody.js';\nimport TextMessageItemBody from './TextMessageItemBody.js';\nimport FileMessageItemBody from './FileMessageItemBody.js';\nimport { u as useThreadMessageKindKeySelector, a as useFileInfoListWithUploaded, M as MultipleFilesMessageItemBody } from '../chunks/bundle-ZVq6xGXk.js';\nimport { VoiceMessageItemBody } from './VoiceMessageItemBody.js';\nimport ThumbnailMessageItemBody from './ThumbnailMessageItemBody.js';\nimport UnknownMessageItemBody from './UnknownMessageItemBody.js';\nimport { TemplateMessageItemBody } from './TemplateMessageItemBody.js';\nimport Icon, { IconTypes } from './Icon.js';\nimport FeedbackIconButton from './FeedbackIconButton.js';\nimport MobileFeedbackMenu from './MobileFeedbackMenu.js';\nimport MessageFeedbackModal from './MessageFeedbackModal.js';\nimport MessageFeedbackFailedModal from './MessageFeedbackFailedModal.js';\nimport { u as useElementObserver } from '../chunks/bundle-Cf0UgZwi.js';\nimport '../chunks/bundle-CA85nVxp.js';\nimport '../chunks/bundle-bdDHjHH6.js';\nimport './Loader.js';\nimport '../utils/message/getOutgoingMessageState.js';\nimport '../chunks/bundle-BHK1eF5R.js';\nimport '../chunks/bundle-F5koPk19.js';\nimport './IconButton.js';\nimport 'react-dom';\nimport '@sendbird/chat/openChannel';\nimport './SortByRow.js';\nimport '../chunks/bundle-etuaqevl.js';\nimport '../withSendbird.js';\nimport '../chunks/bundle-Bwk5KPwK.js';\nimport './ImageRenderer.js';\nimport './ReactionButton.js';\nimport '@sendbird/chat/groupChannel';\nimport '../chunks/bundle-CNWAfTVw.js';\nimport './ReactionBadge.js';\nimport './BottomSheet.js';\nimport '../chunks/bundle-CXdo2kR_.js';\nimport './Button.js';\nimport '@sendbird/uikit-tools';\nimport 'css-vars-ponyfill';\nimport '../chunks/bundle-DDeWOERD.js';\nimport '../chunks/bundle-DCMGp6rH.js';\nimport './UserListItem.js';\nimport './MutedAvatarOverlay.js';\nimport './Checkbox.js';\nimport '../chunks/bundle-DXRRGizV.js';\nimport '../sendbirdSelectors.js';\nimport '../chunks/bundle-b6TpX_JP.js';\nimport './Tooltip.js';\nimport './TooltipWrapper.js';\nimport '../Message/context.js';\nimport '../chunks/bundle-BNDaXsLn.js';\nimport '../chunks/bundle-BqMHiKkl.js';\nimport '../chunks/bundle-DofK8ySe.js';\nimport '../chunks/bundle-GUbI4JcD.js';\nimport './MentionLabel.js';\nimport './LinkLabel.js';\nimport '../chunks/bundle-DhGZA5UP.js';\nimport '../chunks/bundle-B6edg1g0.js';\nimport './TextButton.js';\nimport '../chunks/bundle-rA4afvKU.js';\nimport './FileViewer.js';\nimport '../chunks/bundle-Gdl-rzQC.js';\nimport './ProgressBar.js';\nimport '../VoicePlayer/useVoicePlayer.js';\nimport './PlaybackTime.js';\nimport '../chunks/bundle-uLjwqZrR.js';\nimport './FallbackTemplateMessageItemBody.tsx.js';\nimport './LoadingTemplateMessageItemBody.tsx.js';\nimport './Input.js';\nfunction MessageProfile(props) {\n  var message = props.message,\n    channel = props.channel,\n    userId = props.userId,\n    _a = props.chainBottom,\n    chainBottom = _a === void 0 ? false : _a,\n    isByMe = props.isByMe,\n    displayThreadReplies = props.displayThreadReplies,\n    bottom = props.bottom;\n  var avatarRef = useRef(null);\n  var _b = useContext(UserProfileContext),\n    disableUserProfile = _b.disableUserProfile,\n    renderUserProfile = _b.renderUserProfile;\n  if (isByMe || chainBottom || !isSendableMessage(message)) {\n    return null;\n  }\n  return React__default.createElement(ContextMenu, {\n    menuTrigger: function (toggleDropdown) {\n      var _a, _b;\n      return React__default.createElement(Avatar, {\n        className: classnames('sendbird-message-content__left__avatar', displayThreadReplies && 'use-thread-replies'),\n        src: ((_b = (_a = channel === null || channel === void 0 ? void 0 : channel.members) === null || _a === void 0 ? void 0 : _a.find(function (member) {\n          return (member === null || member === void 0 ? void 0 : member.userId) === message.sender.userId;\n        })) === null || _b === void 0 ? void 0 : _b.profileUrl) || message.sender.profileUrl || '',\n        // TODO: Divide getting profileUrl logic to utils\n        ref: avatarRef,\n        width: \"28px\",\n        height: \"28px\",\n        bottom: bottom,\n        onClick: function () {\n          if (!disableUserProfile) toggleDropdown();\n        }\n      });\n    },\n    menuItems: function (closeDropdown) {\n      return renderUserProfile ? renderUserProfile({\n        user: message.sender,\n        close: closeDropdown,\n        currentUserId: userId,\n        avatarRef: avatarRef\n      }) : React__default.createElement(MenuItems\n      /**\n       * parentRef: For catching location(x, y) of MenuItems\n       * parentContainRef: For toggling more options(menus & reactions)\n      */, {\n        /**\n         * parentRef: For catching location(x, y) of MenuItems\n         * parentContainRef: For toggling more options(menus & reactions)\n        */\n        parentRef: avatarRef,\n        parentContainRef: avatarRef,\n        closeDropdown: closeDropdown,\n        style: {\n          paddingTop: '0px',\n          paddingBottom: '0px'\n        }\n      }, React__default.createElement(UserProfile, {\n        user: message.sender,\n        onSuccess: closeDropdown\n      }));\n    }\n  });\n}\nvar MESSAGE_ITEM_BODY_CLASSNAME = 'sendbird-message-content__middle__message-item-body';\nfunction MessageBody(props) {\n  var message = props.message,\n    channel = props.channel,\n    showFileViewer = props.showFileViewer,\n    onMessageHeightChange = props.onMessageHeightChange,\n    onTemplateMessageRenderedCallback = props.onTemplateMessageRenderedCallback,\n    onBeforeDownloadFileMessage = props.onBeforeDownloadFileMessage,\n    mouseHover = props.mouseHover,\n    isMobile = props.isMobile,\n    config = props.config,\n    isReactionEnabledInChannel = props.isReactionEnabledInChannel,\n    isByMe = props.isByMe;\n  var threadMessageKindKey = useThreadMessageKindKeySelector({\n    isMobile: isMobile\n  });\n  var statefulFileInfoList = useFileInfoListWithUploaded(message); // For MultipleFilesMessage.\n  var messageTypes = getUIKitMessageTypes();\n  var isOgMessageEnabledInGroupChannel = (channel === null || channel === void 0 ? void 0 : channel.isGroupChannel()) && config.groupChannel.enableOgtag;\n  return K(message).when(isTemplateMessage, function () {\n    return React__default.createElement(TemplateMessageItemBody, {\n      className: MESSAGE_ITEM_BODY_CLASSNAME,\n      message: message,\n      isByMe: isByMe,\n      theme: config === null || config === void 0 ? void 0 : config.theme,\n      onTemplateMessageRenderedCallback: onTemplateMessageRenderedCallback\n    });\n  }).when(function (message) {\n    return isOgMessageEnabledInGroupChannel && isSendableMessage(message) && isOGMessage(message);\n  }, function () {\n    var _a;\n    return React__default.createElement(OGMessageItemBody, {\n      className: MESSAGE_ITEM_BODY_CLASSNAME,\n      message: message,\n      isByMe: isByMe,\n      mouseHover: mouseHover,\n      isMentionEnabled: (_a = config.groupChannel.enableMention) !== null && _a !== void 0 ? _a : false,\n      isReactionEnabled: isReactionEnabledInChannel,\n      onMessageHeightChange: onMessageHeightChange,\n      isMarkdownEnabled: config.groupChannel.enableMarkdownForUserMessage\n    });\n  }).when(isTextMessage, function () {\n    var _a;\n    return React__default.createElement(TextMessageItemBody, {\n      className: MESSAGE_ITEM_BODY_CLASSNAME,\n      message: message,\n      isByMe: isByMe,\n      mouseHover: mouseHover,\n      isMentionEnabled: (_a = config.groupChannel.enableMention) !== null && _a !== void 0 ? _a : false,\n      isReactionEnabled: isReactionEnabledInChannel,\n      isMarkdownEnabled: config.groupChannel.enableMarkdownForUserMessage\n    });\n  }).when(function (message) {\n    return getUIKitMessageType(message) === messageTypes.FILE;\n  }, function () {\n    return React__default.createElement(FileMessageItemBody, {\n      className: MESSAGE_ITEM_BODY_CLASSNAME,\n      message: message,\n      isByMe: isByMe,\n      mouseHover: mouseHover,\n      isReactionEnabled: isReactionEnabledInChannel,\n      onBeforeDownloadFileMessage: onBeforeDownloadFileMessage\n    });\n  }).when(isMultipleFilesMessage, function () {\n    return React__default.createElement(MultipleFilesMessageItemBody, {\n      className: MESSAGE_ITEM_BODY_CLASSNAME,\n      message: message,\n      isByMe: isByMe,\n      mouseHover: mouseHover,\n      isReactionEnabled: isReactionEnabledInChannel,\n      threadMessageKindKey: threadMessageKindKey,\n      statefulFileInfoList: statefulFileInfoList,\n      onBeforeDownloadFileMessage: onBeforeDownloadFileMessage\n    });\n  }).when(isVoiceMessage, function () {\n    var _a;\n    return React__default.createElement(VoiceMessageItemBody, {\n      className: MESSAGE_ITEM_BODY_CLASSNAME,\n      message: message,\n      channelUrl: (_a = channel === null || channel === void 0 ? void 0 : channel.url) !== null && _a !== void 0 ? _a : '',\n      isByMe: isByMe,\n      isReactionEnabled: isReactionEnabledInChannel\n    });\n  }).when(isThumbnailMessage, function () {\n    return React__default.createElement(ThumbnailMessageItemBody, {\n      className: MESSAGE_ITEM_BODY_CLASSNAME,\n      message: message,\n      isByMe: isByMe,\n      mouseHover: mouseHover,\n      isReactionEnabled: isReactionEnabledInChannel,\n      showFileViewer: showFileViewer,\n      style: isMobile ? {\n        width: '100%'\n      } : {}\n    });\n  }).otherwise(function (message) {\n    return React__default.createElement(UnknownMessageItemBody, {\n      className: MESSAGE_ITEM_BODY_CLASSNAME,\n      message: message,\n      isByMe: isByMe,\n      mouseHover: mouseHover,\n      isReactionEnabled: isReactionEnabledInChannel\n    });\n  });\n}\nfunction MessageHeader(props) {\n  var _a, _b;\n  var channel = props.channel,\n    message = props.message;\n  return React__default.createElement(Label, {\n    className: \"sendbird-message-content__middle__sender-name\",\n    type: LabelTypography.CAPTION_2,\n    color: LabelColors.ONBACKGROUND_2\n  },\n  /**\n   * To use the latest member profile information, message.sender might be outdated\n   */\n  ((_b = (_a = channel === null || channel === void 0 ? void 0 : channel.members) === null || _a === void 0 ? void 0 : _a.find(function (member) {\n    var _a;\n    // @ts-ignore\n    return (member === null || member === void 0 ? void 0 : member.userId) === ((_a = message === null || message === void 0 ? void 0 : message.sender) === null || _a === void 0 ? void 0 : _a.userId);\n  })) === null || _b === void 0 ? void 0 : _b.nickname) || getSenderName(message)\n  // TODO: Divide getting profileUrl logic to utils\n  );\n}\nvar SbFeedbackStatus;\n(function (SbFeedbackStatus) {\n  /** Feedback is unavailable for this message. This is the default value for base message. */\n  SbFeedbackStatus[\"NOT_APPLICABLE\"] = \"NOT_APPLICABLE\";\n  /** Feedback can be set for this message, but nothing has been submitted yet. */\n  SbFeedbackStatus[\"NO_FEEDBACK\"] = \"NO_FEEDBACK\";\n  /** Feedback can be set for this message, and something has been submitted. */\n  SbFeedbackStatus[\"SUBMITTED\"] = \"SUBMITTED\";\n})(SbFeedbackStatus || (SbFeedbackStatus = {}));\nfunction MessageContent(props) {\n  var _this = this;\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n  var\n    // Internal props\n    className = props.className,\n    userId = props.userId,\n    channel = props.channel,\n    message = props.message,\n    _q = props.disabled,\n    disabled = _q === void 0 ? false : _q,\n    _r = props.chainTop,\n    chainTop = _r === void 0 ? false : _r,\n    _s = props.chainBottom,\n    chainBottom = _s === void 0 ? false : _s,\n    _t = props.isReactionEnabled,\n    isReactionEnabled = _t === void 0 ? false : _t,\n    _u = props.disableQuoteMessage,\n    disableQuoteMessage = _u === void 0 ? false : _u,\n    replyType = props.replyType,\n    threadReplySelectType = props.threadReplySelectType,\n    nicknamesMap = props.nicknamesMap,\n    emojiContainer = props.emojiContainer,\n    scrollToMessage = props.scrollToMessage,\n    showEdit = props.showEdit,\n    showRemove = props.showRemove,\n    showFileViewer = props.showFileViewer,\n    resendMessage = props.resendMessage,\n    deleteMessage = props.deleteMessage,\n    toggleReaction = props.toggleReaction,\n    setQuoteMessage = props.setQuoteMessage,\n    onReplyInThread = props.onReplyInThread,\n    onQuoteMessageClick = props.onQuoteMessageClick,\n    onMessageHeightChange = props.onMessageHeightChange,\n    onBeforeDownloadFileMessage = props.onBeforeDownloadFileMessage;\n  // Public props for customization\n  var _v = deleteNullish(props),\n    _w = _v.renderSenderProfile,\n    renderSenderProfile = _w === void 0 ? function (props) {\n      return React__default.createElement(MessageProfile, __assign({}, props));\n    } : _w,\n    _x = _v.renderMessageBody,\n    renderMessageBody = _x === void 0 ? function (props) {\n      return React__default.createElement(MessageBody, __assign({}, props));\n    } : _x,\n    _y = _v.renderMessageHeader,\n    renderMessageHeader = _y === void 0 ? function (props) {\n      return React__default.createElement(MessageHeader, __assign({}, props));\n    } : _y,\n    _z = _v.renderMessageMenu,\n    renderMessageMenu = _z === void 0 ? function (props) {\n      return React__default.createElement(MessageMenu, __assign({}, props));\n    } : _z,\n    _0 = _v.renderEmojiMenu,\n    renderEmojiMenu = _0 === void 0 ? function (props) {\n      return React__default.createElement(MessageEmojiMenu, __assign({}, props));\n    } : _0,\n    _1 = _v.renderEmojiReactions,\n    renderEmojiReactions = _1 === void 0 ? function (props) {\n      return React__default.createElement(EmojiReactions, __assign({}, props));\n    } : _1,\n    _2 = _v.renderMobileMenuOnLongPress,\n    renderMobileMenuOnLongPress = _2 === void 0 ? function (props) {\n      return React__default.createElement(MobileMenu, __assign({}, props));\n    } : _2;\n  var dateLocale = useLocalization().dateLocale;\n  var _3 = useSendbirdStateContext(),\n    config = _3.config,\n    eventHandlers = _3.eventHandlers;\n  var logger = config.logger;\n  var onPressUserProfileHandler = (_a = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.reaction) === null || _a === void 0 ? void 0 : _a.onPressUserProfile;\n  var contentRef = useRef();\n  var timestampRef = useRef();\n  var threadRepliesRef = useRef();\n  var feedbackButtonsRef = useRef();\n  var isMobile = useMediaQueryContext().isMobile;\n  var _4 = useState(false),\n    showMenu = _4[0],\n    setShowMenu = _4[1];\n  var _5 = useState(false),\n    mouseHover = _5[0],\n    setMouseHover = _5[1];\n  var isMenuMounted = useElementObserver(\"#\".concat(getObservingId(message.messageId), \".\").concat(MENU_OBSERVING_CLASS_NAME), [document.getElementById(MENU_ROOT_ID), document.getElementById(EMOJI_MENU_ROOT_ID)]);\n  // Feedback states\n  var _6 = useState(false),\n    showFeedbackOptionsMenu = _6[0],\n    setShowFeedbackOptionsMenu = _6[1];\n  var _7 = useState(false),\n    showFeedbackModal = _7[0],\n    setShowFeedbackModal = _7[1];\n  var _8 = useState(''),\n    feedbackFailedText = _8[0],\n    setFeedbackFailedText = _8[1];\n  var _9 = useState(getMessageContentMiddleClassNameByContainerType({\n      message: message,\n      isMobile: isMobile\n    })),\n    uiContainerType = _9[0],\n    setUiContainerType = _9[1];\n  var onTemplateMessageRenderedCallback = function (renderedTemplateType) {\n    if (renderedTemplateType === 'failed') {\n      setUiContainerType(UI_CONTAINER_TYPES.DEFAULT);\n    } else if (renderedTemplateType === 'composite') {\n      /**\n       * Composite templates must have default carousel view irregardless of given containerType.\n       */\n      setUiContainerType(UI_CONTAINER_TYPES.DEFAULT_CAROUSEL);\n    }\n  };\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var isByMe = userId === ((_b = message === null || message === void 0 ? void 0 : message.sender) === null || _b === void 0 ? void 0 : _b.userId) || (message === null || message === void 0 ? void 0 : message.sendingStatus) === 'pending' || (message === null || message === void 0 ? void 0 : message.sendingStatus) === 'failed';\n  var isByMeClassName = isByMe ? 'outgoing' : 'incoming';\n  var chainTopClassName = chainTop ? 'chain-top' : '';\n  var isReactionEnabledInChannel = isReactionEnabled && !(channel === null || channel === void 0 ? void 0 : channel.isEphemeral);\n  var isReactionEnabledClassName = isReactionEnabledInChannel ? 'use-reactions' : '';\n  var hoveredMenuClassName = isMenuMounted ? 'sendbird-mouse-hover' : '';\n  var useReplying = !!((replyType === 'QUOTE_REPLY' || replyType === 'THREAD') && (message === null || message === void 0 ? void 0 : message.parentMessageId) && (message === null || message === void 0 ? void 0 : message.parentMessage) && !disableQuoteMessage);\n  var useReplyingClassName = useReplying ? 'use-quote' : '';\n  // Thread replies\n  var displayThreadReplies = ((_c = message === null || message === void 0 ? void 0 : message.threadInfo) === null || _c === void 0 ? void 0 : _c.replyCount) && message.threadInfo.replyCount > 0 && replyType === 'THREAD';\n  // Feedback buttons\n  var isFeedbackMessage = !isByMe && !!(message === null || message === void 0 ? void 0 : message.myFeedbackStatus) && message.myFeedbackStatus !== SbFeedbackStatus.NOT_APPLICABLE;\n  var isFeedbackEnabled = !!((_d = config === null || config === void 0 ? void 0 : config.groupChannel) === null || _d === void 0 ? void 0 : _d.enableFeedback) && isFeedbackMessage;\n  /**\n   * For TemplateMessage, do not display:\n   *   - in web view:\n   *     - message menu\n   *     - reaction menu\n   *     - reply in thread\n   *   - in mobile view:\n   *     - bottom sheet on long click\n   */\n  var isNotTemplateMessage = !isTemplateMessage(message);\n  var showLongPressMenu = isNotTemplateMessage && isMobile;\n  var showOutgoingMenu = isNotTemplateMessage && isByMe && !isMobile;\n  var showThreadReplies = isNotTemplateMessage && displayThreadReplies;\n  var showRightContent = isNotTemplateMessage && !isByMe && !isMobile;\n  var isTimestampBottom = !!uiContainerType;\n  var getTotalBottom = function () {\n    var sum = 2;\n    if (timestampRef.current && isTimestampBottom) {\n      sum += 4 + timestampRef.current.clientHeight;\n    }\n    if (threadRepliesRef.current) {\n      sum += 4 + threadRepliesRef.current.clientHeight;\n    }\n    if (feedbackButtonsRef.current) {\n      sum += 4 + feedbackButtonsRef.current.clientHeight;\n    }\n    return sum;\n  };\n  var totalBottom = useMemo(function () {\n    return getTotalBottom();\n  }, [isTimestampBottom]);\n  var onCloseFeedbackForm = function () {\n    setShowFeedbackModal(false);\n  };\n  var openFeedbackFormOrMenu = function () {\n    if (isMobile) {\n      setShowFeedbackOptionsMenu(true);\n    } else {\n      setShowFeedbackModal(true);\n    }\n  };\n  // onMouseDown: (e: React.MouseEvent<T>) => void;\n  // onTouchStart: (e: React.TouchEvent<T>) => void;\n  // onMouseUp: (e: React.MouseEvent<T>) => void;\n  // onMouseLeave: (e: React.MouseEvent<T>) => void;\n  // onTouchEnd: (e: React.TouchEvent<T>) => void;\n  var longPress = useLongPress({\n    onLongPress: function () {\n      if (showLongPressMenu) {\n        setShowMenu(true);\n      }\n    },\n    onClick: noop\n  }, {\n    delay: 300,\n    shouldPreventDefault: false\n  });\n  if (isAdminMessage(message)) {\n    return React__default.createElement(AdminMessage, {\n      message: message\n    });\n  }\n  return React__default.createElement(\"div\", {\n    className: getClassName([className !== null && className !== void 0 ? className : '', 'sendbird-message-content', isByMeClassName, uiContainerType]),\n    onMouseOver: function () {\n      return setMouseHover(true);\n    },\n    onMouseLeave: function () {\n      return setMouseHover(false);\n    }\n  }, React__default.createElement(\"div\", {\n    className: classnames('sendbird-message-content__left', isReactionEnabledClassName, isByMeClassName, useReplyingClassName),\n    \"data-testid\": \"sendbird-message-content__left\"\n  }, renderSenderProfile(__assign(__assign({}, props), {\n    isByMe: isByMe,\n    displayThreadReplies: displayThreadReplies,\n    bottom: totalBottom > 0 ? totalBottom + 'px' : ''\n  })), showOutgoingMenu && React__default.createElement(\"div\", {\n    className: classnames('sendbird-message-content-menu', isReactionEnabledClassName, hoveredMenuClassName, isByMeClassName)\n  }, renderMessageMenu({\n    channel: channel,\n    message: message,\n    isByMe: isByMe,\n    replyType: replyType,\n    showEdit: showEdit,\n    showRemove: showRemove,\n    resendMessage: resendMessage,\n    setQuoteMessage: setQuoteMessage,\n    onReplyInThread: function (_a) {\n      var _b, _c;\n      var message = _a.message;\n      if (threadReplySelectType === ThreadReplySelectType.THREAD) {\n        onReplyInThread === null || onReplyInThread === void 0 ? void 0 : onReplyInThread({\n          message: message\n        });\n      } else if (threadReplySelectType === ThreadReplySelectType.PARENT) {\n        scrollToMessage === null || scrollToMessage === void 0 ? void 0 : scrollToMessage((_c = (_b = message.parentMessage) === null || _b === void 0 ? void 0 : _b.createdAt) !== null && _c !== void 0 ? _c : 0, message.parentMessageId);\n      }\n    },\n    deleteMessage: deleteMessage\n  }), isReactionEnabledInChannel && renderEmojiMenu({\n    message: message,\n    userId: userId,\n    emojiContainer: emojiContainer,\n    toggleReaction: toggleReaction\n  }))), React__default.createElement(\"div\", __assign({\n    className: classnames('sendbird-message-content__middle', isTemplateMessage(message) && 'sendbird-message-content__middle__for_template_message', uiContainerType),\n    \"data-testid\": \"sendbird-message-content__middle\"\n  }, isMobile ? __assign({}, longPress) : {}, {\n    ref: contentRef\n  }), !isByMe && !chainTop && !useReplying && renderMessageHeader(props), useReplying ? React__default.createElement(\"div\", {\n    className: classnames('sendbird-message-content__middle__quote-message', isByMe ? 'outgoing' : 'incoming', useReplyingClassName),\n    \"data-testid\": \"sendbird-message-content__middle__quote-message\"\n  }, React__default.createElement(QuoteMessage, {\n    className: \"sendbird-message-content__middle__quote-message__quote\",\n    message: message,\n    userId: userId,\n    isByMe: isByMe,\n    isUnavailable: ((_e = channel === null || channel === void 0 ? void 0 : channel.messageOffsetTimestamp) !== null && _e !== void 0 ? _e : 0) > ((_g = (_f = message.parentMessage) === null || _f === void 0 ? void 0 : _f.createdAt) !== null && _g !== void 0 ? _g : 0),\n    onClick: function () {\n      var _a;\n      if (replyType === 'THREAD' && threadReplySelectType === ThreadReplySelectType.THREAD) {\n        onQuoteMessageClick === null || onQuoteMessageClick === void 0 ? void 0 : onQuoteMessageClick({\n          message: message\n        });\n      }\n      if ((replyType === 'QUOTE_REPLY' || replyType === 'THREAD' && threadReplySelectType === ThreadReplySelectType.PARENT) && ((_a = message === null || message === void 0 ? void 0 : message.parentMessage) === null || _a === void 0 ? void 0 : _a.createdAt) && (message === null || message === void 0 ? void 0 : message.parentMessageId)) {\n        scrollToMessage === null || scrollToMessage === void 0 ? void 0 : scrollToMessage(message.parentMessage.createdAt, message.parentMessageId);\n      }\n    }\n  })) : null, React__default.createElement(\"div\", {\n    className: classnames('sendbird-message-content__middle__body-container', isTemplateMessage(message) && 'sendbird-message-content__middle__for_template_message')\n  }, isByMe && !chainBottom && React__default.createElement(\"div\", {\n    className: classnames('sendbird-message-content__middle__body-container__created-at', 'left', hoveredMenuClassName, uiContainerType),\n    ref: timestampRef\n  }, React__default.createElement(\"div\", {\n    className: \"sendbird-message-content__middle__body-container__created-at__component-container\"\n  }, React__default.createElement(MessageStatus, {\n    message: message,\n    channel: channel\n  }))), renderMessageBody({\n    message: message,\n    channel: channel,\n    showFileViewer: showFileViewer,\n    onMessageHeightChange: onMessageHeightChange,\n    mouseHover: mouseHover,\n    isMobile: isMobile,\n    config: config,\n    isReactionEnabledInChannel: isReactionEnabledInChannel,\n    isByMe: isByMe,\n    onTemplateMessageRenderedCallback: onTemplateMessageRenderedCallback,\n    onBeforeDownloadFileMessage: onBeforeDownloadFileMessage\n  }), isReactionEnabledInChannel && ((_h = message === null || message === void 0 ? void 0 : message.reactions) === null || _h === void 0 ? void 0 : _h.length) > 0 && React__default.createElement(\"div\", {\n    className: classnames('sendbird-message-content-reactions', isMultipleFilesMessage(message) ? 'image-grid' : isByMe && !isThumbnailMessage(message) && !isOGMessage(message) && 'primary', mouseHover && 'mouse-hover')\n  }, renderEmojiReactions({\n    userId: userId,\n    message: message,\n    channel: channel,\n    isByMe: isByMe,\n    // @ts-ignore\n    emojiContainer: emojiContainer !== null && emojiContainer !== void 0 ? emojiContainer : new EmojiContainer({}),\n    memberNicknamesMap: nicknamesMap !== null && nicknamesMap !== void 0 ? nicknamesMap : new Map(),\n    toggleReaction: toggleReaction,\n    onPressUserProfile: onPressUserProfileHandler\n  })), !isByMe && !chainBottom && React__default.createElement(Label, {\n    className: classnames('sendbird-message-content__middle__body-container__created-at', 'right', hoveredMenuClassName, uiContainerType),\n    type: LabelTypography.CAPTION_3,\n    color: LabelColors.ONBACKGROUND_2,\n    ref: timestampRef\n  }, format((message === null || message === void 0 ? void 0 : message.createdAt) || 0, 'p', {\n    locale: dateLocale\n  }))), isTimestampBottom && React__default.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: ((_k = (_j = timestampRef.current) === null || _j === void 0 ? void 0 : _j.clientHeight) !== null && _k !== void 0 ? _k : 0) + 'px',\n      marginTop: '4px'\n    }\n  }), showThreadReplies && (message === null || message === void 0 ? void 0 : message.threadInfo) && React__default.createElement(ThreadReplies, {\n    className: \"sendbird-message-content__middle__thread-replies\",\n    threadInfo: message === null || message === void 0 ? void 0 : message.threadInfo,\n    onClick: function () {\n      return onReplyInThread === null || onReplyInThread === void 0 ? void 0 : onReplyInThread({\n        message: message\n      });\n    },\n    ref: threadRepliesRef\n  }), isFeedbackEnabled && React__default.createElement(\"div\", {\n    className: \"sendbird-message-content__middle__body-container__feedback-buttons-container\",\n    ref: feedbackButtonsRef\n  }, React__default.createElement(FeedbackIconButton, {\n    isSelected: ((_l = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _l === void 0 ? void 0 : _l.rating) === FeedbackRating.GOOD,\n    onClick: function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var error_1;\n        var _a, _b, _c;\n        return __generator(this, function (_d) {\n          switch (_d.label) {\n            case 0:\n              if (!!((_a = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _a === void 0 ? void 0 : _a.rating)) return [3 /*break*/, 5];\n              _d.label = 1;\n            case 1:\n              _d.trys.push([1, 3,, 4]);\n              return [4 /*yield*/, message.submitFeedback({\n                rating: FeedbackRating.GOOD\n              })];\n            case 2:\n              _d.sent();\n              openFeedbackFormOrMenu();\n              return [3 /*break*/, 4];\n            case 3:\n              error_1 = _d.sent();\n              (_c = (_b = config === null || config === void 0 ? void 0 : config.logger) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.call(_b, 'Channel: Submit feedback failed.', error_1);\n              setFeedbackFailedText(stringSet.FEEDBACK_FAILED_SUBMIT);\n              return [3 /*break*/, 4];\n            case 4:\n              return [3 /*break*/, 6];\n            case 5:\n              openFeedbackFormOrMenu();\n              _d.label = 6;\n            case 6:\n              return [2 /*return*/];\n          }\n        });\n      });\n    },\n    disabled: !!(message === null || message === void 0 ? void 0 : message.myFeedback) && message.myFeedback.rating !== FeedbackRating.GOOD\n  }, React__default.createElement(Icon, {\n    type: IconTypes.FEEDBACK_LIKE,\n    width: '24px',\n    height: '24px'\n  })), React__default.createElement(FeedbackIconButton, {\n    isSelected: ((_m = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _m === void 0 ? void 0 : _m.rating) === FeedbackRating.BAD,\n    onClick: function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var error_2;\n        var _a, _b, _c;\n        return __generator(this, function (_d) {\n          switch (_d.label) {\n            case 0:\n              if (!!((_a = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _a === void 0 ? void 0 : _a.rating)) return [3 /*break*/, 5];\n              _d.label = 1;\n            case 1:\n              _d.trys.push([1, 3,, 4]);\n              return [4 /*yield*/, message.submitFeedback({\n                rating: FeedbackRating.BAD\n              })];\n            case 2:\n              _d.sent();\n              openFeedbackFormOrMenu();\n              return [3 /*break*/, 4];\n            case 3:\n              error_2 = _d.sent();\n              (_c = (_b = config === null || config === void 0 ? void 0 : config.logger) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.call(_b, 'Channel: Submit feedback failed.', error_2);\n              setFeedbackFailedText(stringSet.FEEDBACK_FAILED_SUBMIT);\n              return [3 /*break*/, 4];\n            case 4:\n              return [3 /*break*/, 6];\n            case 5:\n              openFeedbackFormOrMenu();\n              _d.label = 6;\n            case 6:\n              return [2 /*return*/];\n          }\n        });\n      });\n    },\n    disabled: !!(message === null || message === void 0 ? void 0 : message.myFeedback) && message.myFeedback.rating !== FeedbackRating.BAD\n  }, React__default.createElement(Icon, {\n    type: IconTypes.FEEDBACK_DISLIKE,\n    width: '24px',\n    height: '24px'\n  })))), showRightContent && React__default.createElement(\"div\", {\n    className: classnames('sendbird-message-content__right', chainTopClassName, isReactionEnabledClassName, useReplyingClassName),\n    \"data-testid\": \"sendbird-message-content__right\"\n  }, React__default.createElement(\"div\", {\n    className: classnames('sendbird-message-content-menu', chainTopClassName, hoveredMenuClassName, isByMeClassName)\n  }, isReactionEnabledInChannel && renderEmojiMenu({\n    className: 'sendbird-message-content-menu__reaction-menu',\n    message: message,\n    userId: userId,\n    emojiContainer: emojiContainer,\n    toggleReaction: toggleReaction\n  }), renderMessageMenu({\n    className: 'sendbird-message-content-menu__normal-menu',\n    channel: channel,\n    message: message,\n    isByMe: isByMe,\n    replyType: replyType,\n    showRemove: showRemove,\n    resendMessage: resendMessage,\n    setQuoteMessage: setQuoteMessage,\n    onReplyInThread: function (_a) {\n      var _b, _c;\n      var message = _a.message;\n      if (threadReplySelectType === ThreadReplySelectType.THREAD) {\n        onReplyInThread === null || onReplyInThread === void 0 ? void 0 : onReplyInThread({\n          message: message\n        });\n      } else if (threadReplySelectType === ThreadReplySelectType.PARENT) {\n        scrollToMessage === null || scrollToMessage === void 0 ? void 0 : scrollToMessage((_c = (_b = message.parentMessage) === null || _b === void 0 ? void 0 : _b.createdAt) !== null && _c !== void 0 ? _c : 0, message.parentMessageId);\n      }\n    },\n    deleteMessage: deleteMessage\n  }))), showMenu && isSendableMessage(message) && channel && renderMobileMenuOnLongPress({\n    parentRef: contentRef,\n    channel: channel,\n    hideMenu: function () {\n      setShowMenu(false);\n    },\n    message: message,\n    isReactionEnabled: isReactionEnabledInChannel,\n    isByMe: isByMe,\n    userId: userId,\n    replyType: replyType,\n    disabled: disabled,\n    showRemove: showRemove,\n    emojiContainer: emojiContainer,\n    resendMessage: resendMessage,\n    deleteMessage: deleteMessage,\n    setQuoteMessage: setQuoteMessage,\n    toggleReaction: toggleReaction,\n    showEdit: showEdit,\n    onReplyInThread: function (_a) {\n      var _b;\n      var message = _a.message;\n      if (threadReplySelectType === ThreadReplySelectType.THREAD) {\n        onReplyInThread === null || onReplyInThread === void 0 ? void 0 : onReplyInThread({\n          message: message\n        });\n      } else if (threadReplySelectType === ThreadReplySelectType.PARENT) {\n        scrollToMessage === null || scrollToMessage === void 0 ? void 0 : scrollToMessage(((_b = message === null || message === void 0 ? void 0 : message.parentMessage) === null || _b === void 0 ? void 0 : _b.createdAt) || 0, (message === null || message === void 0 ? void 0 : message.parentMessageId) || 0);\n      }\n    },\n    onDownloadClick: function (e) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var allowDownload, err_1;\n        var _a, _b;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              if (!onBeforeDownloadFileMessage) {\n                return [2 /*return*/];\n              }\n              _c.label = 1;\n            case 1:\n              _c.trys.push([1, 3,, 4]);\n              return [4 /*yield*/, onBeforeDownloadFileMessage({\n                message: message\n              })];\n            case 2:\n              allowDownload = _c.sent();\n              if (!allowDownload) {\n                e.preventDefault();\n                (_a = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a === void 0 ? void 0 : _a.call(logger, 'MessageContent: Not allowed to download.');\n              }\n              return [3 /*break*/, 4];\n            case 3:\n              err_1 = _c.sent();\n              (_b = logger === null || logger === void 0 ? void 0 : logger.error) === null || _b === void 0 ? void 0 : _b.call(logger, 'MessageContent: Error occurred while determining download continuation:', err_1);\n              return [3 /*break*/, 4];\n            case 4:\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  }), ((_o = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _o === void 0 ? void 0 : _o.rating) && showFeedbackOptionsMenu && React__default.createElement(MobileFeedbackMenu, {\n    hideMenu: function () {\n      setShowFeedbackOptionsMenu(false);\n    },\n    onEditFeedback: function () {\n      setShowFeedbackOptionsMenu(false);\n      setShowFeedbackModal(true);\n    },\n    onRemoveFeedback: function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var error_3;\n        var _a, _b;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _c.trys.push([0, 3,, 4]);\n              if (!(message.myFeedback !== null)) return [3 /*break*/, 2];\n              return [4 /*yield*/, message.deleteFeedback(message.myFeedback.id)];\n            case 1:\n              _c.sent();\n              _c.label = 2;\n            case 2:\n              return [3 /*break*/, 4];\n            case 3:\n              error_3 = _c.sent();\n              (_b = (_a = config === null || config === void 0 ? void 0 : config.logger) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, 'Channel: Delete feedback failed.', error_3);\n              setFeedbackFailedText(stringSet.FEEDBACK_FAILED_DELETE);\n              return [3 /*break*/, 4];\n            case 4:\n              setShowFeedbackOptionsMenu(false);\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  }), ((_p = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _p === void 0 ? void 0 : _p.rating) && showFeedbackModal && React__default.createElement(MessageFeedbackModal, {\n    selectedFeedback: message.myFeedback.rating,\n    message: message,\n    onUpdate: function (selectedFeedback, comment) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var newFeedback, error_4;\n        var _a, _b;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              if (!(message.myFeedback !== null)) return [3 /*break*/, 4];\n              newFeedback = new Feedback({\n                id: message.myFeedback.id,\n                rating: selectedFeedback,\n                comment: comment\n              });\n              _c.label = 1;\n            case 1:\n              _c.trys.push([1, 3,, 4]);\n              return [4 /*yield*/, message.updateFeedback(newFeedback)];\n            case 2:\n              _c.sent();\n              return [3 /*break*/, 4];\n            case 3:\n              error_4 = _c.sent();\n              (_b = (_a = config === null || config === void 0 ? void 0 : config.logger) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, 'Channel: Update feedback failed.', error_4);\n              setFeedbackFailedText(stringSet.FEEDBACK_FAILED_SAVE);\n              return [3 /*break*/, 4];\n            case 4:\n              onCloseFeedbackForm();\n              return [2 /*return*/];\n          }\n        });\n      });\n    },\n    onClose: onCloseFeedbackForm,\n    onRemove: function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var error_5;\n        var _a, _b;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _c.trys.push([0, 3,, 4]);\n              if (!(message.myFeedback !== null)) return [3 /*break*/, 2];\n              return [4 /*yield*/, message.deleteFeedback(message.myFeedback.id)];\n            case 1:\n              _c.sent();\n              _c.label = 2;\n            case 2:\n              return [3 /*break*/, 4];\n            case 3:\n              error_5 = _c.sent();\n              (_b = (_a = config === null || config === void 0 ? void 0 : config.logger) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, 'Channel: Delete feedback failed.', error_5);\n              setFeedbackFailedText(stringSet.FEEDBACK_FAILED_DELETE);\n              return [3 /*break*/, 4];\n            case 4:\n              onCloseFeedbackForm();\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  }), feedbackFailedText && React__default.createElement(MessageFeedbackFailedModal, {\n    text: feedbackFailedText,\n    onCancel: function () {\n      setFeedbackFailedText('');\n    }\n  }));\n}\nexport { MessageContent as default };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import { _ as __assign, a as __awaiter, b as __generator } from '../chunks/bundle-BQi9-O76.js';\nimport React__default, { useRef, useContext, useState, useMemo } from 'react';\nimport { f as format } from '../chunks/bundle-CAdqcqOm.js';\nimport { M as MessageStatus } from '../chunks/bundle-vuBlPTsL.js';\nimport { M as MessageMenu } from '../chunks/bundle-DkBecO3w.js';\nimport { C as ContextMenu, b as MenuItems, d as MENU_ROOT_ID, E as EMOJI_MENU_ROOT_ID, g as getObservingId, e as MENU_OBSERVING_CLASS_NAME } from '../chunks/bundle-CwKZj-B6.js';\nimport { c as classnames, d as deleteNullish, n as noop } from '../chunks/bundle-BgwzpLeQ.js';\nimport { L as Label, a as LabelTypography, b as LabelColors } from '../chunks/bundle-DhKQeIfP.js';\nimport { MessageEmojiMenu } from './MessageItemReactionMenu.js';\nimport EmojiReactions from './EmojiReactions.js';\nimport AdminMessage from './AdminMessage.js';\nimport QuoteMessage from './QuoteMessage.js';\nimport { k as isSendableMessage, n as getUIKitMessageTypes, K, C as isTemplateMessage, M as isOGMessage, N as isTextMessage, m as getUIKitMessageType, c as isMultipleFilesMessage, i as isVoiceMessage, p as isThumbnailMessage, e as getSenderName, O as getMessageContentMiddleClassNameByContainerType, P as isAdminMessage, w as getClassName, Q as UI_CONTAINER_TYPES } from '../chunks/bundle-DxTN4_0p.js';\nimport { u as useLocalization, L as LocalizationContext } from '../chunks/bundle-cQZ3UZoG.js';\nimport { useSendbirdStateContext } from '../useSendbirdStateContext.js';\nimport { EmojiContainer } from '@sendbird/chat';\nimport { FeedbackRating, Feedback } from '@sendbird/chat/message';\nimport { u as useLongPress } from '../chunks/bundle-AfQS5DGf.js';\nimport { MobileMenu } from './MobileMenu.js';\nimport { u as useMediaQueryContext } from '../chunks/bundle-f-SpnOx2.js';\nimport ThreadReplies from './ThreadReplies.js';\nimport { T as ThreadReplySelectType } from '../chunks/bundle-CveCFQYP.js';\nimport { A as Avatar } from '../chunks/bundle-CFosTNce.js';\nimport UserProfile from './UserProfile.js';\nimport { a as UserProfileContext } from '../chunks/bundle-BrTJ5Zbd.js';\nimport OGMessageItemBody from './OGMessageItemBody.js';\nimport TextMessageItemBody from './TextMessageItemBody.js';\nimport FileMessageItemBody from './FileMessageItemBody.js';\nimport { u as useThreadMessageKindKeySelector, a as useFileInfoListWithUploaded, M as MultipleFilesMessageItemBody } from '../chunks/bundle-ZVq6xGXk.js';\nimport { VoiceMessageItemBody } from './VoiceMessageItemBody.js';\nimport ThumbnailMessageItemBody from './ThumbnailMessageItemBody.js';\nimport UnknownMessageItemBody from './UnknownMessageItemBody.js';\nimport { TemplateMessageItemBody } from './TemplateMessageItemBody.js';\nimport Icon, { IconTypes } from './Icon.js';\nimport FeedbackIconButton from './FeedbackIconButton.js';\nimport MobileFeedbackMenu from './MobileFeedbackMenu.js';\nimport MessageFeedbackModal from './MessageFeedbackModal.js';\nimport MessageFeedbackFailedModal from './MessageFeedbackFailedModal.js';\nimport { u as useElementObserver } from '../chunks/bundle-Cf0UgZwi.js';\nimport '../chunks/bundle-CA85nVxp.js';\nimport '../chunks/bundle-bdDHjHH6.js';\nimport './Loader.js';\nimport '../utils/message/getOutgoingMessageState.js';\nimport '../chunks/bundle-BHK1eF5R.js';\nimport '../chunks/bundle-F5koPk19.js';\nimport './IconButton.js';\nimport 'react-dom';\nimport '@sendbird/chat/openChannel';\nimport './SortByRow.js';\nimport '../chunks/bundle-etuaqevl.js';\nimport '../withSendbird.js';\nimport '../chunks/bundle-Bwk5KPwK.js';\nimport './ImageRenderer.js';\nimport './ReactionButton.js';\nimport '@sendbird/chat/groupChannel';\nimport '../chunks/bundle-CNWAfTVw.js';\nimport './ReactionBadge.js';\nimport './BottomSheet.js';\nimport '../chunks/bundle-CXdo2kR_.js';\nimport './Button.js';\nimport '@sendbird/uikit-tools';\nimport 'css-vars-ponyfill';\nimport '../chunks/bundle-DDeWOERD.js';\nimport '../chunks/bundle-DCMGp6rH.js';\nimport './UserListItem.js';\nimport './MutedAvatarOverlay.js';\nimport './Checkbox.js';\nimport '../chunks/bundle-DXRRGizV.js';\nimport '../sendbirdSelectors.js';\nimport '../chunks/bundle-b6TpX_JP.js';\nimport './Tooltip.js';\nimport './TooltipWrapper.js';\nimport '../Message/context.js';\nimport '../chunks/bundle-BNDaXsLn.js';\nimport '../chunks/bundle-BqMHiKkl.js';\nimport '../chunks/bundle-DofK8ySe.js';\nimport '../chunks/bundle-GUbI4JcD.js';\nimport './MentionLabel.js';\nimport './LinkLabel.js';\nimport '../chunks/bundle-DhGZA5UP.js';\nimport '../chunks/bundle-B6edg1g0.js';\nimport './TextButton.js';\nimport '../chunks/bundle-rA4afvKU.js';\nimport './FileViewer.js';\nimport '../chunks/bundle-Gdl-rzQC.js';\nimport './ProgressBar.js';\nimport '../VoicePlayer/useVoicePlayer.js';\nimport './PlaybackTime.js';\nimport '../chunks/bundle-uLjwqZrR.js';\nimport './FallbackTemplateMessageItemBody.tsx.js';\nimport './LoadingTemplateMessageItemBody.tsx.js';\nimport './Input.js';\n\nfunction MessageProfile(props) {\n    var message = props.message, channel = props.channel, userId = props.userId, _a = props.chainBottom, chainBottom = _a === void 0 ? false : _a, isByMe = props.isByMe, displayThreadReplies = props.displayThreadReplies, bottom = props.bottom;\n    var avatarRef = useRef(null);\n    var _b = useContext(UserProfileContext), disableUserProfile = _b.disableUserProfile, renderUserProfile = _b.renderUserProfile;\n    if (isByMe || chainBottom || !isSendableMessage(message)) {\n        return null;\n    }\n    return (React__default.createElement(ContextMenu, { menuTrigger: function (toggleDropdown) {\n            var _a, _b;\n            return (React__default.createElement(Avatar, { className: classnames('sendbird-message-content__left__avatar', displayThreadReplies && 'use-thread-replies'), src: ((_b = (_a = channel === null || channel === void 0 ? void 0 : channel.members) === null || _a === void 0 ? void 0 : _a.find(function (member) { return (member === null || member === void 0 ? void 0 : member.userId) === message.sender.userId; })) === null || _b === void 0 ? void 0 : _b.profileUrl)\n                    || message.sender.profileUrl\n                    || '', \n                // TODO: Divide getting profileUrl logic to utils\n                ref: avatarRef, width: \"28px\", height: \"28px\", bottom: bottom, onClick: function () {\n                    if (!disableUserProfile)\n                        toggleDropdown();\n                } }));\n        }, menuItems: function (closeDropdown) { return (renderUserProfile ? (renderUserProfile({\n            user: message.sender,\n            close: closeDropdown,\n            currentUserId: userId,\n            avatarRef: avatarRef,\n        })) : (React__default.createElement(MenuItems\n        /**\n         * parentRef: For catching location(x, y) of MenuItems\n         * parentContainRef: For toggling more options(menus & reactions)\n        */\n        , { \n            /**\n             * parentRef: For catching location(x, y) of MenuItems\n             * parentContainRef: For toggling more options(menus & reactions)\n            */\n            parentRef: avatarRef, parentContainRef: avatarRef, closeDropdown: closeDropdown, style: { paddingTop: '0px', paddingBottom: '0px' } },\n            React__default.createElement(UserProfile, { user: message.sender, onSuccess: closeDropdown })))); } }));\n}\n\nvar MESSAGE_ITEM_BODY_CLASSNAME = 'sendbird-message-content__middle__message-item-body';\nfunction MessageBody(props) {\n    var message = props.message, channel = props.channel, showFileViewer = props.showFileViewer, onMessageHeightChange = props.onMessageHeightChange, onTemplateMessageRenderedCallback = props.onTemplateMessageRenderedCallback, onBeforeDownloadFileMessage = props.onBeforeDownloadFileMessage, mouseHover = props.mouseHover, isMobile = props.isMobile, config = props.config, isReactionEnabledInChannel = props.isReactionEnabledInChannel, isByMe = props.isByMe;\n    var threadMessageKindKey = useThreadMessageKindKeySelector({\n        isMobile: isMobile,\n    });\n    var statefulFileInfoList = useFileInfoListWithUploaded(message); // For MultipleFilesMessage.\n    var messageTypes = getUIKitMessageTypes();\n    var isOgMessageEnabledInGroupChannel = (channel === null || channel === void 0 ? void 0 : channel.isGroupChannel()) && config.groupChannel.enableOgtag;\n    return K(message)\n        .when(isTemplateMessage, function () { return (React__default.createElement(TemplateMessageItemBody, { className: MESSAGE_ITEM_BODY_CLASSNAME, message: message, isByMe: isByMe, theme: config === null || config === void 0 ? void 0 : config.theme, onTemplateMessageRenderedCallback: onTemplateMessageRenderedCallback })); })\n        .when(function (message) { return isOgMessageEnabledInGroupChannel\n        && isSendableMessage(message)\n        && isOGMessage(message); }, function () {\n        var _a;\n        return (React__default.createElement(OGMessageItemBody, { className: MESSAGE_ITEM_BODY_CLASSNAME, message: message, isByMe: isByMe, mouseHover: mouseHover, isMentionEnabled: (_a = config.groupChannel.enableMention) !== null && _a !== void 0 ? _a : false, isReactionEnabled: isReactionEnabledInChannel, onMessageHeightChange: onMessageHeightChange, isMarkdownEnabled: config.groupChannel.enableMarkdownForUserMessage }));\n    })\n        .when(isTextMessage, function () {\n        var _a;\n        return (React__default.createElement(TextMessageItemBody, { className: MESSAGE_ITEM_BODY_CLASSNAME, message: message, isByMe: isByMe, mouseHover: mouseHover, isMentionEnabled: (_a = config.groupChannel.enableMention) !== null && _a !== void 0 ? _a : false, isReactionEnabled: isReactionEnabledInChannel, isMarkdownEnabled: config.groupChannel.enableMarkdownForUserMessage }));\n    })\n        .when(function (message) { return getUIKitMessageType(message) === messageTypes.FILE; }, function () { return (React__default.createElement(FileMessageItemBody, { className: MESSAGE_ITEM_BODY_CLASSNAME, message: message, isByMe: isByMe, mouseHover: mouseHover, isReactionEnabled: isReactionEnabledInChannel, onBeforeDownloadFileMessage: onBeforeDownloadFileMessage })); })\n        .when(isMultipleFilesMessage, function () { return (React__default.createElement(MultipleFilesMessageItemBody, { className: MESSAGE_ITEM_BODY_CLASSNAME, message: message, isByMe: isByMe, mouseHover: mouseHover, isReactionEnabled: isReactionEnabledInChannel, threadMessageKindKey: threadMessageKindKey, statefulFileInfoList: statefulFileInfoList, onBeforeDownloadFileMessage: onBeforeDownloadFileMessage })); })\n        .when(isVoiceMessage, function () {\n        var _a;\n        return (React__default.createElement(VoiceMessageItemBody, { className: MESSAGE_ITEM_BODY_CLASSNAME, message: message, channelUrl: (_a = channel === null || channel === void 0 ? void 0 : channel.url) !== null && _a !== void 0 ? _a : '', isByMe: isByMe, isReactionEnabled: isReactionEnabledInChannel }));\n    })\n        .when(isThumbnailMessage, function () { return (React__default.createElement(ThumbnailMessageItemBody, { className: MESSAGE_ITEM_BODY_CLASSNAME, message: message, isByMe: isByMe, mouseHover: mouseHover, isReactionEnabled: isReactionEnabledInChannel, showFileViewer: showFileViewer, style: isMobile ? { width: '100%' } : {} })); })\n        .otherwise(function (message) { return (React__default.createElement(UnknownMessageItemBody, { className: MESSAGE_ITEM_BODY_CLASSNAME, message: message, isByMe: isByMe, mouseHover: mouseHover, isReactionEnabled: isReactionEnabledInChannel })); });\n}\n\nfunction MessageHeader(props) {\n    var _a, _b;\n    var channel = props.channel, message = props.message;\n    return (React__default.createElement(Label, { className: \"sendbird-message-content__middle__sender-name\", type: LabelTypography.CAPTION_2, color: LabelColors.ONBACKGROUND_2 }, \n    /**\n     * To use the latest member profile information, message.sender might be outdated\n     */\n    ((_b = (_a = channel === null || channel === void 0 ? void 0 : channel.members) === null || _a === void 0 ? void 0 : _a.find(function (member) {\n        var _a;\n        // @ts-ignore\n        return (member === null || member === void 0 ? void 0 : member.userId) === ((_a = message === null || message === void 0 ? void 0 : message.sender) === null || _a === void 0 ? void 0 : _a.userId);\n    })) === null || _b === void 0 ? void 0 : _b.nickname) || getSenderName(message)\n    // TODO: Divide getting profileUrl logic to utils\n    ));\n}\n\nvar SbFeedbackStatus;\n(function (SbFeedbackStatus) {\n    /** Feedback is unavailable for this message. This is the default value for base message. */\n    SbFeedbackStatus[\"NOT_APPLICABLE\"] = \"NOT_APPLICABLE\";\n    /** Feedback can be set for this message, but nothing has been submitted yet. */\n    SbFeedbackStatus[\"NO_FEEDBACK\"] = \"NO_FEEDBACK\";\n    /** Feedback can be set for this message, and something has been submitted. */\n    SbFeedbackStatus[\"SUBMITTED\"] = \"SUBMITTED\";\n})(SbFeedbackStatus || (SbFeedbackStatus = {}));\n\nfunction MessageContent(props) {\n    var _this = this;\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n    var \n    // Internal props\n    className = props.className, userId = props.userId, channel = props.channel, message = props.message, _q = props.disabled, disabled = _q === void 0 ? false : _q, _r = props.chainTop, chainTop = _r === void 0 ? false : _r, _s = props.chainBottom, chainBottom = _s === void 0 ? false : _s, _t = props.isReactionEnabled, isReactionEnabled = _t === void 0 ? false : _t, _u = props.disableQuoteMessage, disableQuoteMessage = _u === void 0 ? false : _u, replyType = props.replyType, threadReplySelectType = props.threadReplySelectType, nicknamesMap = props.nicknamesMap, emojiContainer = props.emojiContainer, scrollToMessage = props.scrollToMessage, showEdit = props.showEdit, showRemove = props.showRemove, showFileViewer = props.showFileViewer, resendMessage = props.resendMessage, deleteMessage = props.deleteMessage, toggleReaction = props.toggleReaction, setQuoteMessage = props.setQuoteMessage, onReplyInThread = props.onReplyInThread, onQuoteMessageClick = props.onQuoteMessageClick, onMessageHeightChange = props.onMessageHeightChange, onBeforeDownloadFileMessage = props.onBeforeDownloadFileMessage;\n    // Public props for customization\n    var _v = deleteNullish(props), _w = _v.renderSenderProfile, renderSenderProfile = _w === void 0 ? function (props) { return React__default.createElement(MessageProfile, __assign({}, props)); } : _w, _x = _v.renderMessageBody, renderMessageBody = _x === void 0 ? function (props) { return React__default.createElement(MessageBody, __assign({}, props)); } : _x, _y = _v.renderMessageHeader, renderMessageHeader = _y === void 0 ? function (props) { return React__default.createElement(MessageHeader, __assign({}, props)); } : _y, _z = _v.renderMessageMenu, renderMessageMenu = _z === void 0 ? function (props) { return React__default.createElement(MessageMenu, __assign({}, props)); } : _z, _0 = _v.renderEmojiMenu, renderEmojiMenu = _0 === void 0 ? function (props) { return React__default.createElement(MessageEmojiMenu, __assign({}, props)); } : _0, _1 = _v.renderEmojiReactions, renderEmojiReactions = _1 === void 0 ? function (props) { return React__default.createElement(EmojiReactions, __assign({}, props)); } : _1, _2 = _v.renderMobileMenuOnLongPress, renderMobileMenuOnLongPress = _2 === void 0 ? function (props) { return React__default.createElement(MobileMenu, __assign({}, props)); } : _2;\n    var dateLocale = useLocalization().dateLocale;\n    var _3 = useSendbirdStateContext(), config = _3.config, eventHandlers = _3.eventHandlers;\n    var logger = config.logger;\n    var onPressUserProfileHandler = (_a = eventHandlers === null || eventHandlers === void 0 ? void 0 : eventHandlers.reaction) === null || _a === void 0 ? void 0 : _a.onPressUserProfile;\n    var contentRef = useRef();\n    var timestampRef = useRef();\n    var threadRepliesRef = useRef();\n    var feedbackButtonsRef = useRef();\n    var isMobile = useMediaQueryContext().isMobile;\n    var _4 = useState(false), showMenu = _4[0], setShowMenu = _4[1];\n    var _5 = useState(false), mouseHover = _5[0], setMouseHover = _5[1];\n    var isMenuMounted = useElementObserver(\"#\".concat(getObservingId(message.messageId), \".\").concat(MENU_OBSERVING_CLASS_NAME), [\n        document.getElementById(MENU_ROOT_ID),\n        document.getElementById(EMOJI_MENU_ROOT_ID),\n    ]);\n    // Feedback states\n    var _6 = useState(false), showFeedbackOptionsMenu = _6[0], setShowFeedbackOptionsMenu = _6[1];\n    var _7 = useState(false), showFeedbackModal = _7[0], setShowFeedbackModal = _7[1];\n    var _8 = useState(''), feedbackFailedText = _8[0], setFeedbackFailedText = _8[1];\n    var _9 = useState(getMessageContentMiddleClassNameByContainerType({\n        message: message,\n        isMobile: isMobile,\n    })), uiContainerType = _9[0], setUiContainerType = _9[1];\n    var onTemplateMessageRenderedCallback = function (renderedTemplateType) {\n        if (renderedTemplateType === 'failed') {\n            setUiContainerType(UI_CONTAINER_TYPES.DEFAULT);\n        }\n        else if (renderedTemplateType === 'composite') {\n            /**\n             * Composite templates must have default carousel view irregardless of given containerType.\n             */\n            setUiContainerType(UI_CONTAINER_TYPES.DEFAULT_CAROUSEL);\n        }\n    };\n    var stringSet = useContext(LocalizationContext).stringSet;\n    var isByMe = (userId === ((_b = message === null || message === void 0 ? void 0 : message.sender) === null || _b === void 0 ? void 0 : _b.userId))\n        || ((message === null || message === void 0 ? void 0 : message.sendingStatus) === 'pending')\n        || ((message === null || message === void 0 ? void 0 : message.sendingStatus) === 'failed');\n    var isByMeClassName = isByMe ? 'outgoing' : 'incoming';\n    var chainTopClassName = chainTop ? 'chain-top' : '';\n    var isReactionEnabledInChannel = isReactionEnabled && !(channel === null || channel === void 0 ? void 0 : channel.isEphemeral);\n    var isReactionEnabledClassName = isReactionEnabledInChannel ? 'use-reactions' : '';\n    var hoveredMenuClassName = isMenuMounted ? 'sendbird-mouse-hover' : '';\n    var useReplying = !!((replyType === 'QUOTE_REPLY' || replyType === 'THREAD')\n        && (message === null || message === void 0 ? void 0 : message.parentMessageId) && (message === null || message === void 0 ? void 0 : message.parentMessage)\n        && !disableQuoteMessage);\n    var useReplyingClassName = useReplying ? 'use-quote' : '';\n    // Thread replies\n    var displayThreadReplies = ((_c = message === null || message === void 0 ? void 0 : message.threadInfo) === null || _c === void 0 ? void 0 : _c.replyCount)\n        && message.threadInfo.replyCount > 0\n        && replyType === 'THREAD';\n    // Feedback buttons\n    var isFeedbackMessage = !isByMe\n        && !!(message === null || message === void 0 ? void 0 : message.myFeedbackStatus)\n        && message.myFeedbackStatus !== SbFeedbackStatus.NOT_APPLICABLE;\n    var isFeedbackEnabled = !!((_d = config === null || config === void 0 ? void 0 : config.groupChannel) === null || _d === void 0 ? void 0 : _d.enableFeedback) && isFeedbackMessage;\n    /**\n     * For TemplateMessage, do not display:\n     *   - in web view:\n     *     - message menu\n     *     - reaction menu\n     *     - reply in thread\n     *   - in mobile view:\n     *     - bottom sheet on long click\n     */\n    var isNotTemplateMessage = !isTemplateMessage(message);\n    var showLongPressMenu = isNotTemplateMessage && isMobile;\n    var showOutgoingMenu = isNotTemplateMessage && isByMe && !isMobile;\n    var showThreadReplies = isNotTemplateMessage && displayThreadReplies;\n    var showRightContent = isNotTemplateMessage && !isByMe && !isMobile;\n    var isTimestampBottom = !!uiContainerType;\n    var getTotalBottom = function () {\n        var sum = 2;\n        if (timestampRef.current && isTimestampBottom) {\n            sum += 4 + timestampRef.current.clientHeight;\n        }\n        if (threadRepliesRef.current) {\n            sum += 4 + threadRepliesRef.current.clientHeight;\n        }\n        if (feedbackButtonsRef.current) {\n            sum += 4 + feedbackButtonsRef.current.clientHeight;\n        }\n        return sum;\n    };\n    var totalBottom = useMemo(function () { return getTotalBottom(); }, [isTimestampBottom]);\n    var onCloseFeedbackForm = function () {\n        setShowFeedbackModal(false);\n    };\n    var openFeedbackFormOrMenu = function () {\n        if (isMobile) {\n            setShowFeedbackOptionsMenu(true);\n        }\n        else {\n            setShowFeedbackModal(true);\n        }\n    };\n    // onMouseDown: (e: React.MouseEvent<T>) => void;\n    // onTouchStart: (e: React.TouchEvent<T>) => void;\n    // onMouseUp: (e: React.MouseEvent<T>) => void;\n    // onMouseLeave: (e: React.MouseEvent<T>) => void;\n    // onTouchEnd: (e: React.TouchEvent<T>) => void;\n    var longPress = useLongPress({\n        onLongPress: function () {\n            if (showLongPressMenu) {\n                setShowMenu(true);\n            }\n        },\n        onClick: noop,\n    }, {\n        delay: 300,\n        shouldPreventDefault: false,\n    });\n    if (isAdminMessage(message)) {\n        return (React__default.createElement(AdminMessage, { message: message }));\n    }\n    return (React__default.createElement(\"div\", { className: getClassName([\n            className !== null && className !== void 0 ? className : '',\n            'sendbird-message-content',\n            isByMeClassName,\n            uiContainerType,\n        ]), onMouseOver: function () { return setMouseHover(true); }, onMouseLeave: function () { return setMouseHover(false); } },\n        React__default.createElement(\"div\", { className: classnames('sendbird-message-content__left', isReactionEnabledClassName, isByMeClassName, useReplyingClassName), \"data-testid\": \"sendbird-message-content__left\" },\n            renderSenderProfile(__assign(__assign({}, props), { isByMe: isByMe, displayThreadReplies: displayThreadReplies, bottom: totalBottom > 0 ? totalBottom + 'px' : '' })),\n            showOutgoingMenu && (React__default.createElement(\"div\", { className: classnames('sendbird-message-content-menu', isReactionEnabledClassName, hoveredMenuClassName, isByMeClassName) },\n                renderMessageMenu({\n                    channel: channel,\n                    message: message,\n                    isByMe: isByMe,\n                    replyType: replyType,\n                    showEdit: showEdit,\n                    showRemove: showRemove,\n                    resendMessage: resendMessage,\n                    setQuoteMessage: setQuoteMessage,\n                    onReplyInThread: function (_a) {\n                        var _b, _c;\n                        var message = _a.message;\n                        if (threadReplySelectType === ThreadReplySelectType.THREAD) {\n                            onReplyInThread === null || onReplyInThread === void 0 ? void 0 : onReplyInThread({ message: message });\n                        }\n                        else if (threadReplySelectType === ThreadReplySelectType.PARENT) {\n                            scrollToMessage === null || scrollToMessage === void 0 ? void 0 : scrollToMessage((_c = (_b = message.parentMessage) === null || _b === void 0 ? void 0 : _b.createdAt) !== null && _c !== void 0 ? _c : 0, message.parentMessageId);\n                        }\n                    },\n                    deleteMessage: deleteMessage,\n                }),\n                isReactionEnabledInChannel && (renderEmojiMenu({\n                    message: message,\n                    userId: userId,\n                    emojiContainer: emojiContainer,\n                    toggleReaction: toggleReaction,\n                }))))),\n        React__default.createElement(\"div\", __assign({ className: classnames('sendbird-message-content__middle', isTemplateMessage(message) && 'sendbird-message-content__middle__for_template_message', uiContainerType), \"data-testid\": \"sendbird-message-content__middle\" }, (isMobile ? __assign({}, longPress) : {}), { ref: contentRef }),\n            !isByMe && !chainTop && !useReplying && renderMessageHeader(props),\n            (useReplying) ? (React__default.createElement(\"div\", { className: classnames('sendbird-message-content__middle__quote-message', isByMe ? 'outgoing' : 'incoming', useReplyingClassName), \"data-testid\": \"sendbird-message-content__middle__quote-message\" },\n                React__default.createElement(QuoteMessage, { className: \"sendbird-message-content__middle__quote-message__quote\", message: message, userId: userId, isByMe: isByMe, isUnavailable: ((_e = channel === null || channel === void 0 ? void 0 : channel.messageOffsetTimestamp) !== null && _e !== void 0 ? _e : 0) > ((_g = (_f = message.parentMessage) === null || _f === void 0 ? void 0 : _f.createdAt) !== null && _g !== void 0 ? _g : 0), onClick: function () {\n                        var _a;\n                        if (replyType === 'THREAD' && threadReplySelectType === ThreadReplySelectType.THREAD) {\n                            onQuoteMessageClick === null || onQuoteMessageClick === void 0 ? void 0 : onQuoteMessageClick({ message: message });\n                        }\n                        if ((replyType === 'QUOTE_REPLY' || (replyType === 'THREAD' && threadReplySelectType === ThreadReplySelectType.PARENT))\n                            && ((_a = message === null || message === void 0 ? void 0 : message.parentMessage) === null || _a === void 0 ? void 0 : _a.createdAt) && (message === null || message === void 0 ? void 0 : message.parentMessageId)) {\n                            scrollToMessage === null || scrollToMessage === void 0 ? void 0 : scrollToMessage(message.parentMessage.createdAt, message.parentMessageId);\n                        }\n                    } }))) : null,\n            React__default.createElement(\"div\", { className: classnames('sendbird-message-content__middle__body-container', isTemplateMessage(message) && 'sendbird-message-content__middle__for_template_message') },\n                (isByMe && !chainBottom) && (React__default.createElement(\"div\", { className: classnames('sendbird-message-content__middle__body-container__created-at', 'left', hoveredMenuClassName, uiContainerType), ref: timestampRef },\n                    React__default.createElement(\"div\", { className: \"sendbird-message-content__middle__body-container__created-at__component-container\" },\n                        React__default.createElement(MessageStatus, { message: message, channel: channel })))),\n                renderMessageBody({\n                    message: message,\n                    channel: channel,\n                    showFileViewer: showFileViewer,\n                    onMessageHeightChange: onMessageHeightChange,\n                    mouseHover: mouseHover,\n                    isMobile: isMobile,\n                    config: config,\n                    isReactionEnabledInChannel: isReactionEnabledInChannel,\n                    isByMe: isByMe,\n                    onTemplateMessageRenderedCallback: onTemplateMessageRenderedCallback,\n                    onBeforeDownloadFileMessage: onBeforeDownloadFileMessage,\n                }),\n                (isReactionEnabledInChannel && ((_h = message === null || message === void 0 ? void 0 : message.reactions) === null || _h === void 0 ? void 0 : _h.length) > 0) && (React__default.createElement(\"div\", { className: classnames('sendbird-message-content-reactions', isMultipleFilesMessage(message) ? 'image-grid'\n                        : (isByMe && !isThumbnailMessage(message) && !isOGMessage(message)) && 'primary', mouseHover && 'mouse-hover') }, renderEmojiReactions({\n                    userId: userId,\n                    message: message,\n                    channel: channel,\n                    isByMe: isByMe,\n                    // @ts-ignore\n                    emojiContainer: emojiContainer !== null && emojiContainer !== void 0 ? emojiContainer : new EmojiContainer({}),\n                    memberNicknamesMap: nicknamesMap !== null && nicknamesMap !== void 0 ? nicknamesMap : new Map(),\n                    toggleReaction: toggleReaction,\n                    onPressUserProfile: onPressUserProfileHandler,\n                }))),\n                (!isByMe && !chainBottom) && (React__default.createElement(Label, { className: classnames('sendbird-message-content__middle__body-container__created-at', 'right', hoveredMenuClassName, uiContainerType), type: LabelTypography.CAPTION_3, color: LabelColors.ONBACKGROUND_2, ref: timestampRef }, format((message === null || message === void 0 ? void 0 : message.createdAt) || 0, 'p', {\n                    locale: dateLocale,\n                })))),\n            isTimestampBottom && React__default.createElement(\"div\", { style: {\n                    width: '100%',\n                    height: ((_k = (_j = timestampRef.current) === null || _j === void 0 ? void 0 : _j.clientHeight) !== null && _k !== void 0 ? _k : 0) + 'px',\n                    marginTop: '4px',\n                } }),\n            showThreadReplies && (message === null || message === void 0 ? void 0 : message.threadInfo) && (React__default.createElement(ThreadReplies, { className: \"sendbird-message-content__middle__thread-replies\", threadInfo: message === null || message === void 0 ? void 0 : message.threadInfo, onClick: function () { return onReplyInThread === null || onReplyInThread === void 0 ? void 0 : onReplyInThread({ message: message }); }, ref: threadRepliesRef })),\n            isFeedbackEnabled && React__default.createElement(\"div\", { className: \"sendbird-message-content__middle__body-container__feedback-buttons-container\", ref: feedbackButtonsRef },\n                React__default.createElement(FeedbackIconButton, { isSelected: ((_l = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _l === void 0 ? void 0 : _l.rating) === FeedbackRating.GOOD, onClick: function () { return __awaiter(_this, void 0, void 0, function () {\n                        var error_1;\n                        var _a, _b, _c;\n                        return __generator(this, function (_d) {\n                            switch (_d.label) {\n                                case 0:\n                                    if (!!((_a = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _a === void 0 ? void 0 : _a.rating)) return [3 /*break*/, 5];\n                                    _d.label = 1;\n                                case 1:\n                                    _d.trys.push([1, 3, , 4]);\n                                    return [4 /*yield*/, message.submitFeedback({\n                                            rating: FeedbackRating.GOOD,\n                                        })];\n                                case 2:\n                                    _d.sent();\n                                    openFeedbackFormOrMenu();\n                                    return [3 /*break*/, 4];\n                                case 3:\n                                    error_1 = _d.sent();\n                                    (_c = (_b = config === null || config === void 0 ? void 0 : config.logger) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.call(_b, 'Channel: Submit feedback failed.', error_1);\n                                    setFeedbackFailedText(stringSet.FEEDBACK_FAILED_SUBMIT);\n                                    return [3 /*break*/, 4];\n                                case 4: return [3 /*break*/, 6];\n                                case 5:\n                                    openFeedbackFormOrMenu();\n                                    _d.label = 6;\n                                case 6: return [2 /*return*/];\n                            }\n                        });\n                    }); }, disabled: !!(message === null || message === void 0 ? void 0 : message.myFeedback) && message.myFeedback.rating !== FeedbackRating.GOOD },\n                    React__default.createElement(Icon, { type: IconTypes.FEEDBACK_LIKE, width: '24px', height: '24px' })),\n                React__default.createElement(FeedbackIconButton, { isSelected: ((_m = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _m === void 0 ? void 0 : _m.rating) === FeedbackRating.BAD, onClick: function () { return __awaiter(_this, void 0, void 0, function () {\n                        var error_2;\n                        var _a, _b, _c;\n                        return __generator(this, function (_d) {\n                            switch (_d.label) {\n                                case 0:\n                                    if (!!((_a = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _a === void 0 ? void 0 : _a.rating)) return [3 /*break*/, 5];\n                                    _d.label = 1;\n                                case 1:\n                                    _d.trys.push([1, 3, , 4]);\n                                    return [4 /*yield*/, message.submitFeedback({\n                                            rating: FeedbackRating.BAD,\n                                        })];\n                                case 2:\n                                    _d.sent();\n                                    openFeedbackFormOrMenu();\n                                    return [3 /*break*/, 4];\n                                case 3:\n                                    error_2 = _d.sent();\n                                    (_c = (_b = config === null || config === void 0 ? void 0 : config.logger) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.call(_b, 'Channel: Submit feedback failed.', error_2);\n                                    setFeedbackFailedText(stringSet.FEEDBACK_FAILED_SUBMIT);\n                                    return [3 /*break*/, 4];\n                                case 4: return [3 /*break*/, 6];\n                                case 5:\n                                    openFeedbackFormOrMenu();\n                                    _d.label = 6;\n                                case 6: return [2 /*return*/];\n                            }\n                        });\n                    }); }, disabled: !!(message === null || message === void 0 ? void 0 : message.myFeedback) && message.myFeedback.rating !== FeedbackRating.BAD },\n                    React__default.createElement(Icon, { type: IconTypes.FEEDBACK_DISLIKE, width: '24px', height: '24px' })))),\n        showRightContent && (React__default.createElement(\"div\", { className: classnames('sendbird-message-content__right', chainTopClassName, isReactionEnabledClassName, useReplyingClassName), \"data-testid\": \"sendbird-message-content__right\" },\n            React__default.createElement(\"div\", { className: classnames('sendbird-message-content-menu', chainTopClassName, hoveredMenuClassName, isByMeClassName) },\n                isReactionEnabledInChannel && (renderEmojiMenu({\n                    className: 'sendbird-message-content-menu__reaction-menu',\n                    message: message,\n                    userId: userId,\n                    emojiContainer: emojiContainer,\n                    toggleReaction: toggleReaction,\n                })),\n                renderMessageMenu({\n                    className: 'sendbird-message-content-menu__normal-menu',\n                    channel: channel,\n                    message: message,\n                    isByMe: isByMe,\n                    replyType: replyType,\n                    showRemove: showRemove,\n                    resendMessage: resendMessage,\n                    setQuoteMessage: setQuoteMessage,\n                    onReplyInThread: function (_a) {\n                        var _b, _c;\n                        var message = _a.message;\n                        if (threadReplySelectType === ThreadReplySelectType.THREAD) {\n                            onReplyInThread === null || onReplyInThread === void 0 ? void 0 : onReplyInThread({ message: message });\n                        }\n                        else if (threadReplySelectType === ThreadReplySelectType.PARENT) {\n                            scrollToMessage === null || scrollToMessage === void 0 ? void 0 : scrollToMessage((_c = (_b = message.parentMessage) === null || _b === void 0 ? void 0 : _b.createdAt) !== null && _c !== void 0 ? _c : 0, message.parentMessageId);\n                        }\n                    },\n                    deleteMessage: deleteMessage,\n                })))),\n        showMenu && isSendableMessage(message) && channel && renderMobileMenuOnLongPress({\n            parentRef: contentRef,\n            channel: channel,\n            hideMenu: function () { setShowMenu(false); },\n            message: message,\n            isReactionEnabled: isReactionEnabledInChannel,\n            isByMe: isByMe,\n            userId: userId,\n            replyType: replyType,\n            disabled: disabled,\n            showRemove: showRemove,\n            emojiContainer: emojiContainer,\n            resendMessage: resendMessage,\n            deleteMessage: deleteMessage,\n            setQuoteMessage: setQuoteMessage,\n            toggleReaction: toggleReaction,\n            showEdit: showEdit,\n            onReplyInThread: function (_a) {\n                var _b;\n                var message = _a.message;\n                if (threadReplySelectType === ThreadReplySelectType.THREAD) {\n                    onReplyInThread === null || onReplyInThread === void 0 ? void 0 : onReplyInThread({ message: message });\n                }\n                else if (threadReplySelectType === ThreadReplySelectType.PARENT) {\n                    scrollToMessage === null || scrollToMessage === void 0 ? void 0 : scrollToMessage(((_b = message === null || message === void 0 ? void 0 : message.parentMessage) === null || _b === void 0 ? void 0 : _b.createdAt) || 0, (message === null || message === void 0 ? void 0 : message.parentMessageId) || 0);\n                }\n            },\n            onDownloadClick: function (e) { return __awaiter(_this, void 0, void 0, function () {\n                var allowDownload, err_1;\n                var _a, _b;\n                return __generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0:\n                            if (!onBeforeDownloadFileMessage) {\n                                return [2 /*return*/];\n                            }\n                            _c.label = 1;\n                        case 1:\n                            _c.trys.push([1, 3, , 4]);\n                            return [4 /*yield*/, onBeforeDownloadFileMessage({ message: message })];\n                        case 2:\n                            allowDownload = _c.sent();\n                            if (!allowDownload) {\n                                e.preventDefault();\n                                (_a = logger === null || logger === void 0 ? void 0 : logger.info) === null || _a === void 0 ? void 0 : _a.call(logger, 'MessageContent: Not allowed to download.');\n                            }\n                            return [3 /*break*/, 4];\n                        case 3:\n                            err_1 = _c.sent();\n                            (_b = logger === null || logger === void 0 ? void 0 : logger.error) === null || _b === void 0 ? void 0 : _b.call(logger, 'MessageContent: Error occurred while determining download continuation:', err_1);\n                            return [3 /*break*/, 4];\n                        case 4: return [2 /*return*/];\n                    }\n                });\n            }); },\n        }),\n        ((_o = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _o === void 0 ? void 0 : _o.rating) && showFeedbackOptionsMenu && (React__default.createElement(MobileFeedbackMenu, { hideMenu: function () {\n                setShowFeedbackOptionsMenu(false);\n            }, onEditFeedback: function () {\n                setShowFeedbackOptionsMenu(false);\n                setShowFeedbackModal(true);\n            }, onRemoveFeedback: function () { return __awaiter(_this, void 0, void 0, function () {\n                var error_3;\n                var _a, _b;\n                return __generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0:\n                            _c.trys.push([0, 3, , 4]);\n                            if (!(message.myFeedback !== null)) return [3 /*break*/, 2];\n                            return [4 /*yield*/, message.deleteFeedback(message.myFeedback.id)];\n                        case 1:\n                            _c.sent();\n                            _c.label = 2;\n                        case 2: return [3 /*break*/, 4];\n                        case 3:\n                            error_3 = _c.sent();\n                            (_b = (_a = config === null || config === void 0 ? void 0 : config.logger) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, 'Channel: Delete feedback failed.', error_3);\n                            setFeedbackFailedText(stringSet.FEEDBACK_FAILED_DELETE);\n                            return [3 /*break*/, 4];\n                        case 4:\n                            setShowFeedbackOptionsMenu(false);\n                            return [2 /*return*/];\n                    }\n                });\n            }); } })),\n        ((_p = message === null || message === void 0 ? void 0 : message.myFeedback) === null || _p === void 0 ? void 0 : _p.rating) && showFeedbackModal && (React__default.createElement(MessageFeedbackModal, { selectedFeedback: message.myFeedback.rating, message: message, onUpdate: function (selectedFeedback, comment) { return __awaiter(_this, void 0, void 0, function () {\n                var newFeedback, error_4;\n                var _a, _b;\n                return __generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0:\n                            if (!(message.myFeedback !== null)) return [3 /*break*/, 4];\n                            newFeedback = new Feedback({\n                                id: message.myFeedback.id,\n                                rating: selectedFeedback,\n                                comment: comment,\n                            });\n                            _c.label = 1;\n                        case 1:\n                            _c.trys.push([1, 3, , 4]);\n                            return [4 /*yield*/, message.updateFeedback(newFeedback)];\n                        case 2:\n                            _c.sent();\n                            return [3 /*break*/, 4];\n                        case 3:\n                            error_4 = _c.sent();\n                            (_b = (_a = config === null || config === void 0 ? void 0 : config.logger) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, 'Channel: Update feedback failed.', error_4);\n                            setFeedbackFailedText(stringSet.FEEDBACK_FAILED_SAVE);\n                            return [3 /*break*/, 4];\n                        case 4:\n                            onCloseFeedbackForm();\n                            return [2 /*return*/];\n                    }\n                });\n            }); }, onClose: onCloseFeedbackForm, onRemove: function () { return __awaiter(_this, void 0, void 0, function () {\n                var error_5;\n                var _a, _b;\n                return __generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0:\n                            _c.trys.push([0, 3, , 4]);\n                            if (!(message.myFeedback !== null)) return [3 /*break*/, 2];\n                            return [4 /*yield*/, message.deleteFeedback(message.myFeedback.id)];\n                        case 1:\n                            _c.sent();\n                            _c.label = 2;\n                        case 2: return [3 /*break*/, 4];\n                        case 3:\n                            error_5 = _c.sent();\n                            (_b = (_a = config === null || config === void 0 ? void 0 : config.logger) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, 'Channel: Delete feedback failed.', error_5);\n                            setFeedbackFailedText(stringSet.FEEDBACK_FAILED_DELETE);\n                            return [3 /*break*/, 4];\n                        case 4:\n                            onCloseFeedbackForm();\n                            return [2 /*return*/];\n                    }\n                });\n            }); } })),\n        feedbackFailedText && (React__default.createElement(MessageFeedbackFailedModal, { text: feedbackFailedText, onCancel: function () {\n                setFeedbackFailedText('');\n            } }))));\n}\n\nexport { MessageContent as default };\n//# sourceMappingURL=MessageContent.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}