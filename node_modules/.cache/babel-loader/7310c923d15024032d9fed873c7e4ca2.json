{"ast":null,"code":"import React__default, { useRef, useState, useMemo } from 'react';\nimport { i as isSameDay } from '../../chunks/bundle-F5koPk19.js';\nimport Icon, { IconTypes, IconColors } from '../../ui/Icon.js';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder.js';\nimport { u as useOpenChannelContext } from '../../chunks/bundle-CoPuVBn-.js';\nimport OpenChannelMessage from './OpenChannelMessage.js';\nimport { MessageProvider } from '../../Message/context.js';\nimport { useSendbirdStateContext } from '../../useSendbirdStateContext.js';\nimport { u as useHandleOnScrollCallback } from '../../chunks/bundle-ClMRT1R_.js';\nimport { compareMessagesForGrouping } from '../../Channel/utils/compareMessagesForGrouping.js';\nimport '../../chunks/bundle-CA85nVxp.js';\nimport '../../chunks/bundle-BQi9-O76.js';\nimport '../../chunks/bundle-BgwzpLeQ.js';\nimport '../../chunks/bundle-cQZ3UZoG.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\nimport '../../chunks/bundle-DhKQeIfP.js';\nimport '../../ui/Loader.js';\nimport '../../chunks/bundle-BrTJ5Zbd.js';\nimport '../../chunks/bundle-CZUYMubi.js';\nimport '../../chunks/bundle-b6TpX_JP.js';\nimport '@sendbird/chat';\nimport '@sendbird/chat/openChannel';\nimport '../../chunks/bundle-etuaqevl.js';\nimport '../../chunks/bundle-DAz5E5O_.js';\nimport '../../chunks/bundle-DXRRGizV.js';\nimport '../../chunks/bundle-CXdo2kR_.js';\nimport '../../chunks/bundle-DxTN4_0p.js';\nimport '@sendbird/chat/groupChannel';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../chunks/bundle-CNWAfTVw.js';\nimport 'react-dom';\nimport '../../chunks/bundle-f-SpnOx2.js';\nimport '../../ui/IconButton.js';\nimport '../../ui/Button.js';\nimport '@sendbird/uikit-tools';\nimport '../../withSendbird.js';\nimport 'css-vars-ponyfill';\nimport '../../chunks/bundle-DDeWOERD.js';\nimport '../../chunks/bundle-DCMGp6rH.js';\nimport '../../chunks/bundle-CwKZj-B6.js';\nimport '../../ui/SortByRow.js';\nimport '../../chunks/bundle-CAdqcqOm.js';\nimport '../../ui/OpenchannelUserMessage.js';\nimport '../../chunks/bundle-CFosTNce.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../ui/UserProfile.js';\nimport '../../sendbirdSelectors.js';\nimport '../../chunks/bundle-6BuULgEc.js';\nimport '../../chunks/bundle-BdZytjCG.js';\nimport '../../chunks/bundle-AfQS5DGf.js';\nimport '../../ui/OpenChannelAdminMessage.js';\nimport '../../ui/OpenchannelOGMessage.js';\nimport '../../ui/LinkLabel.js';\nimport '../../chunks/bundle-DofK8ySe.js';\nimport '../../chunks/bundle-GUbI4JcD.js';\nimport '../../ui/MentionLabel.js';\nimport '../../ui/OpenchannelThumbnailMessage.js';\nimport '../../ui/OpenchannelFileMessage.js';\nimport '../../ui/TextButton.js';\nimport '../../chunks/bundle-rA4afvKU.js';\nimport '../../ui/DateSeparator.js';\nimport '../../ui/MessageInput.js';\nimport '../../chunks/bundle-0qSTzMXb.js';\nimport '../../chunks/bundle-CveCFQYP.js';\nimport '../../chunks/bundle-TZQ6dJCG.js';\nimport 'dompurify';\nimport '../../chunks/bundle-0nQK2G2O.js';\nimport '../../chunks/bundle-B6edg1g0.js';\nimport '../../chunks/bundle-DhGZA5UP.js';\nimport '../../ui/FileViewer.js';\nimport '../../chunks/bundle-Gdl-rzQC.js';\nimport '../../chunks/bundle-Zvm5CMGT.js';\nimport '../../chunks/bundle-DSn10d8F.js';\nimport '../../chunks/bundle-CMLImr6T.js';\nimport '@sendbird/chat/message';\nfunction OpenChannelMessageList(props, ref) {\n  var _a = useOpenChannelContext(),\n    _b = _a.isMessageGroupingEnabled,\n    isMessageGroupingEnabled = _b === void 0 ? true : _b,\n    allMessages = _a.allMessages,\n    hasMore = _a.hasMore,\n    onScroll = _a.onScroll;\n  var store = useSendbirdStateContext();\n  var userId = store.config.userId;\n  var localRef = useRef(null);\n  var scrollRef = ref || localRef;\n  var _c = useState(false),\n    showScrollDownButton = _c[0],\n    setShowScrollDownButton = _c[1];\n  var scrollToBottom = function () {\n    if (scrollRef && 'current' in scrollRef && scrollRef.current) {\n      scrollRef.current.scrollTo(0, scrollRef.current.scrollHeight);\n      setShowScrollDownButton(false);\n    }\n  };\n  var handleOnScroll = useHandleOnScrollCallback({\n    setShowScrollDownButton: setShowScrollDownButton,\n    hasMore: hasMore,\n    onScroll: onScroll,\n    scrollRef: scrollRef\n  });\n  var memoizedMessageList = useMemo(function () {\n    var _a;\n    if (allMessages.length > 0) {\n      return allMessages.map(function (message, index) {\n        var _a;\n        var previousMessage = allMessages[index - 1];\n        var nextMessage = allMessages[index - 1];\n        var previousMessageCreatedAt = previousMessage && previousMessage.createdAt;\n        var currentCreatedAt = message === null || message === void 0 ? void 0 : message.createdAt;\n        // https://stackoverflow.com/a/41855608\n        var hasSeparator = !(previousMessageCreatedAt && isSameDay(currentCreatedAt, previousMessageCreatedAt));\n        var _b = isMessageGroupingEnabled ? compareMessagesForGrouping(previousMessage, message, nextMessage) : [false, false],\n          chainTop = _b[0],\n          chainBottom = _b[1];\n        var isByMe = ((_a = message === null || message === void 0 ? void 0 : message.sender) === null || _a === void 0 ? void 0 : _a.userId) === userId;\n        var key = (message === null || message === void 0 ? void 0 : message.messageId) || (message === null || message === void 0 ? void 0 : message.reqId);\n        return React__default.createElement(MessageProvider, {\n          message: message,\n          isByMe: isByMe,\n          key: key\n        }, React__default.createElement(OpenChannelMessage, {\n          message: message,\n          chainTop: chainTop,\n          chainBottom: chainBottom,\n          hasSeparator: hasSeparator,\n          renderMessage: props === null || props === void 0 ? void 0 : props.renderMessage\n        }));\n      });\n    }\n    return ((_a = props === null || props === void 0 ? void 0 : props.renderPlaceHolderEmptyList) === null || _a === void 0 ? void 0 : _a.call(props)) || React__default.createElement(PlaceHolder, {\n      className: \"sendbird-openchannel-conversation-scroll__container__place-holder\",\n      type: PlaceHolderTypes.NO_MESSAGES\n    });\n  }, [allMessages]);\n  return React__default.createElement(\"div\", {\n    className: \"sendbird-openchannel-conversation-scroll\"\n  }, React__default.createElement(\"div\", {\n    className: \"sendbird-openchannel-conversation-scroll__container\"\n  }, React__default.createElement(\"div\", {\n    className: \"sendbird-openchannel-conversation-scroll__container__padding\"\n  }), React__default.createElement(\"div\", {\n    className: ['sendbird-openchannel-conversation-scroll__container__item-container', allMessages.length > 0 ? '' : 'no-messages'].join(' '),\n    onScroll: handleOnScroll,\n    ref: scrollRef\n  }, memoizedMessageList)), showScrollDownButton && React__default.createElement(\"div\", {\n    className: \"sendbird-openchannel-conversation-scroll__container__scroll-bottom-button\",\n    onClick: scrollToBottom,\n    onKeyDown: scrollToBottom,\n    tabIndex: 0,\n    role: \"button\"\n  }, React__default.createElement(Icon, {\n    width: \"24px\",\n    height: \"24px\",\n    type: IconTypes.CHEVRON_DOWN,\n    fillColor: IconColors.CONTENT\n  })));\n}\nvar OpenChannelMessageList$1 = React__default.forwardRef(OpenChannelMessageList);\nexport { OpenChannelMessageList$1 as default };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import React__default, { useRef, useState, useMemo } from 'react';\nimport { i as isSameDay } from '../../chunks/bundle-F5koPk19.js';\nimport Icon, { IconTypes, IconColors } from '../../ui/Icon.js';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder.js';\nimport { u as useOpenChannelContext } from '../../chunks/bundle-CoPuVBn-.js';\nimport OpenChannelMessage from './OpenChannelMessage.js';\nimport { MessageProvider } from '../../Message/context.js';\nimport { useSendbirdStateContext } from '../../useSendbirdStateContext.js';\nimport { u as useHandleOnScrollCallback } from '../../chunks/bundle-ClMRT1R_.js';\nimport { compareMessagesForGrouping } from '../../Channel/utils/compareMessagesForGrouping.js';\nimport '../../chunks/bundle-CA85nVxp.js';\nimport '../../chunks/bundle-BQi9-O76.js';\nimport '../../chunks/bundle-BgwzpLeQ.js';\nimport '../../chunks/bundle-cQZ3UZoG.js';\nimport '../../chunks/bundle-Bwk5KPwK.js';\nimport '../../chunks/bundle-bdDHjHH6.js';\nimport '../../chunks/bundle-DhKQeIfP.js';\nimport '../../ui/Loader.js';\nimport '../../chunks/bundle-BrTJ5Zbd.js';\nimport '../../chunks/bundle-CZUYMubi.js';\nimport '../../chunks/bundle-b6TpX_JP.js';\nimport '@sendbird/chat';\nimport '@sendbird/chat/openChannel';\nimport '../../chunks/bundle-etuaqevl.js';\nimport '../../chunks/bundle-DAz5E5O_.js';\nimport '../../chunks/bundle-DXRRGizV.js';\nimport '../../chunks/bundle-CXdo2kR_.js';\nimport '../../chunks/bundle-DxTN4_0p.js';\nimport '@sendbird/chat/groupChannel';\nimport '../../utils/message/getOutgoingMessageState.js';\nimport '../../chunks/bundle-CNWAfTVw.js';\nimport 'react-dom';\nimport '../../chunks/bundle-f-SpnOx2.js';\nimport '../../ui/IconButton.js';\nimport '../../ui/Button.js';\nimport '@sendbird/uikit-tools';\nimport '../../withSendbird.js';\nimport 'css-vars-ponyfill';\nimport '../../chunks/bundle-DDeWOERD.js';\nimport '../../chunks/bundle-DCMGp6rH.js';\nimport '../../chunks/bundle-CwKZj-B6.js';\nimport '../../ui/SortByRow.js';\nimport '../../chunks/bundle-CAdqcqOm.js';\nimport '../../ui/OpenchannelUserMessage.js';\nimport '../../chunks/bundle-CFosTNce.js';\nimport '../../ui/ImageRenderer.js';\nimport '../../ui/UserProfile.js';\nimport '../../sendbirdSelectors.js';\nimport '../../chunks/bundle-6BuULgEc.js';\nimport '../../chunks/bundle-BdZytjCG.js';\nimport '../../chunks/bundle-AfQS5DGf.js';\nimport '../../ui/OpenChannelAdminMessage.js';\nimport '../../ui/OpenchannelOGMessage.js';\nimport '../../ui/LinkLabel.js';\nimport '../../chunks/bundle-DofK8ySe.js';\nimport '../../chunks/bundle-GUbI4JcD.js';\nimport '../../ui/MentionLabel.js';\nimport '../../ui/OpenchannelThumbnailMessage.js';\nimport '../../ui/OpenchannelFileMessage.js';\nimport '../../ui/TextButton.js';\nimport '../../chunks/bundle-rA4afvKU.js';\nimport '../../ui/DateSeparator.js';\nimport '../../ui/MessageInput.js';\nimport '../../chunks/bundle-0qSTzMXb.js';\nimport '../../chunks/bundle-CveCFQYP.js';\nimport '../../chunks/bundle-TZQ6dJCG.js';\nimport 'dompurify';\nimport '../../chunks/bundle-0nQK2G2O.js';\nimport '../../chunks/bundle-B6edg1g0.js';\nimport '../../chunks/bundle-DhGZA5UP.js';\nimport '../../ui/FileViewer.js';\nimport '../../chunks/bundle-Gdl-rzQC.js';\nimport '../../chunks/bundle-Zvm5CMGT.js';\nimport '../../chunks/bundle-DSn10d8F.js';\nimport '../../chunks/bundle-CMLImr6T.js';\nimport '@sendbird/chat/message';\n\nfunction OpenChannelMessageList(props, ref) {\n    var _a = useOpenChannelContext(), _b = _a.isMessageGroupingEnabled, isMessageGroupingEnabled = _b === void 0 ? true : _b, allMessages = _a.allMessages, hasMore = _a.hasMore, onScroll = _a.onScroll;\n    var store = useSendbirdStateContext();\n    var userId = store.config.userId;\n    var localRef = useRef(null);\n    var scrollRef = ref || localRef;\n    var _c = useState(false), showScrollDownButton = _c[0], setShowScrollDownButton = _c[1];\n    var scrollToBottom = function () {\n        if (scrollRef && 'current' in scrollRef && scrollRef.current) {\n            scrollRef.current.scrollTo(0, scrollRef.current.scrollHeight);\n            setShowScrollDownButton(false);\n        }\n    };\n    var handleOnScroll = useHandleOnScrollCallback({\n        setShowScrollDownButton: setShowScrollDownButton,\n        hasMore: hasMore,\n        onScroll: onScroll,\n        scrollRef: scrollRef,\n    });\n    var memoizedMessageList = useMemo(function () {\n        var _a;\n        if (allMessages.length > 0) {\n            return (allMessages.map(function (message, index) {\n                var _a;\n                var previousMessage = allMessages[index - 1];\n                var nextMessage = allMessages[index - 1];\n                var previousMessageCreatedAt = previousMessage && previousMessage.createdAt;\n                var currentCreatedAt = message === null || message === void 0 ? void 0 : message.createdAt;\n                // https://stackoverflow.com/a/41855608\n                var hasSeparator = !(previousMessageCreatedAt && (isSameDay(currentCreatedAt, previousMessageCreatedAt)));\n                var _b = isMessageGroupingEnabled\n                    ? compareMessagesForGrouping(previousMessage, message, nextMessage)\n                    : [false, false], chainTop = _b[0], chainBottom = _b[1];\n                var isByMe = ((_a = message === null || message === void 0 ? void 0 : message.sender) === null || _a === void 0 ? void 0 : _a.userId) === userId;\n                var key = (message === null || message === void 0 ? void 0 : message.messageId) || (message === null || message === void 0 ? void 0 : message.reqId);\n                return (React__default.createElement(MessageProvider, { message: message, isByMe: isByMe, key: key },\n                    React__default.createElement(OpenChannelMessage, { message: message, chainTop: chainTop, chainBottom: chainBottom, hasSeparator: hasSeparator, renderMessage: props === null || props === void 0 ? void 0 : props.renderMessage })));\n            }));\n        }\n        return (((_a = props === null || props === void 0 ? void 0 : props.renderPlaceHolderEmptyList) === null || _a === void 0 ? void 0 : _a.call(props)) || (React__default.createElement(PlaceHolder, { className: \"sendbird-openchannel-conversation-scroll__container__place-holder\", type: PlaceHolderTypes.NO_MESSAGES })));\n    }, [allMessages]);\n    return (React__default.createElement(\"div\", { className: \"sendbird-openchannel-conversation-scroll\" },\n        React__default.createElement(\"div\", { className: \"sendbird-openchannel-conversation-scroll__container\" },\n            React__default.createElement(\"div\", { className: \"sendbird-openchannel-conversation-scroll__container__padding\" }),\n            React__default.createElement(\"div\", { className: [\n                    'sendbird-openchannel-conversation-scroll__container__item-container',\n                    (allMessages.length > 0) ? '' : 'no-messages',\n                ].join(' '), onScroll: handleOnScroll, ref: scrollRef }, memoizedMessageList)),\n        showScrollDownButton && (React__default.createElement(\"div\", { className: \"sendbird-openchannel-conversation-scroll__container__scroll-bottom-button\", onClick: scrollToBottom, onKeyDown: scrollToBottom, tabIndex: 0, role: \"button\" },\n            React__default.createElement(Icon, { width: \"24px\", height: \"24px\", type: IconTypes.CHEVRON_DOWN, fillColor: IconColors.CONTENT })))));\n}\nvar OpenChannelMessageList$1 = React__default.forwardRef(OpenChannelMessageList);\n\nexport { OpenChannelMessageList$1 as default };\n//# sourceMappingURL=OpenChannelMessageList.js.map\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module"}