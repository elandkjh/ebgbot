{"version":3,"sources":["ChatComponent.js","App.js","utils.js","index.js"],"names":["ChatComponent","_ref","channelUrl","question","setQuestion","useState","response","setResponse","_jsxs","className","children","_jsx","type","placeholder","value","onChange","e","target","onClick","async","trim","res","fetch","concat","method","headers","body","JSON","stringify","message_type","user_id","message","data","json","App","setChannelUrl","useEffect","url","name","user_ids","is_distinct","channel_url","createGroupChannel","initializeChannel","SendBirdProvider","appId","process","userId","nickname","ChannelList","Channel","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"qPAiDeA,MA9Cf,SAAsBC,GAAkB,IAAjB,WAAEC,GAAYD,EACnC,MAAOE,EAAUC,GAAeC,mBAAS,KAClCC,EAAUC,GAAeF,mBAAS,IAuBzC,OACEG,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BF,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACzBC,cAAA,SACEC,KAAK,OACLC,YAAY,uDACZC,MAAOX,EACPY,SAAWC,GAAMZ,EAAYY,EAAEC,OAAOH,SAExCH,cAAA,UAAQO,QA9BKC,UACjB,GAAwB,KAApBhB,EAASiB,SAAkBlB,EAAY,OAE3C,MAAMmB,QAAYC,MAAM,mFAADC,OAAoFrB,EAAU,aAAa,CAChIsB,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,YAAa,4CAEfC,KAAMC,KAAKC,UAAU,CACnBC,aAAc,OACdC,QAAS,aACTC,QAAS5B,MAIP6B,QAAaX,EAAIY,OACvB1B,EAAYyB,EAAKD,SACjB3B,EAAY,GAAG,EAYiBM,SAAC,oBAE9BJ,GACCE,eAAA,OAAKC,UAAU,gBAAeC,SAAA,CAC5BC,cAAA,MAAAD,SAAI,kBACJC,cAAA,KAAAD,SAAIJ,SAKd,ECbe4B,MA3Bf,WACE,MAAOhC,EAAYiC,GAAiB9B,mBAAS,IAW7C,OATA+B,qBAAU,KACkBjB,WACxB,MAAMkB,OCVsBlB,WAChC,MAAMb,QAAiBgB,MAAM,kFAAmF,CAC9GE,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,YAAa,4CAEfC,KAAMC,KAAKC,UAAU,CACnBU,KAAM,uBACNC,SAAU,CAAC,cACXC,aAAa,MAIjB,aADmBlC,EAAS2B,QAChBQ,WAAW,EDJDC,GAClBP,EAAcE,EAAI,EAGpBM,EAAmB,GAClB,IAGDhC,cAACiC,IAAgB,CAACC,MAAOC,uCAAuCC,OAAO,aAAaC,SAAS,QAAOtC,SAClGF,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAClBC,cAAA,OAAKF,UAAU,aAAYC,SACzBC,cAACsC,IAAW,MAEdzC,eAAA,OAAKC,UAAU,cAAaC,SAAA,CACzBR,GAAcS,cAACuC,IAAO,CAAChD,WAAYA,IACpCS,cAACX,EAAa,CAACE,WAAYA,WAKrC,EE3BAiD,IAASC,OACPzC,cAAC0C,IAAMC,WAAU,CAAA5C,SACfC,cAACuB,EAAG,MAENqB,SAASC,eAAe,Q","file":"static/js/main.13c642fc.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './ChatComponent.css';\r\n\r\nfunction ChatComponent({ channelUrl }) {\r\n  const [question, setQuestion] = useState('');\r\n  const [response, setResponse] = useState('');\r\n\r\n  const handleSend = async () => {\r\n    if (question.trim() === '' || !channelUrl) return;\r\n\r\n    const res = await fetch(`https://api-255A6E1D-2863-492B-AEAC-C7351A429D95.sendbird.com/v3/group_channels/${channelUrl}/messages`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Token': '14808b2c48020361fef4a425b64a5312d942f07b'\r\n      },\r\n      body: JSON.stringify({\r\n        message_type: 'MESG',\r\n        user_id: 'guest_user',\r\n        message: question\r\n      })\r\n    });\r\n\r\n    const data = await res.json();\r\n    setResponse(data.message);\r\n    setQuestion('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"질문을 입력하세요...\"\r\n          value={question}\r\n          onChange={(e) => setQuestion(e.target.value)}\r\n        />\r\n        <button onClick={handleSend}>전송</button>\r\n      </div>\r\n      {response && (\r\n        <div className=\"chat-response\">\r\n          <h3>응답:</h3>\r\n          <p>{response}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatComponent;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { SendBirdProvider, Channel, ChannelList } from '@sendbird/uikit-react';\r\nimport '@sendbird/uikit-react/dist/index.css';\r\nimport './App.css';\r\nimport ChatComponent from './ChatComponent';\r\nimport { createGroupChannel } from './utils';\r\n\r\nfunction App() {\r\n  const [channelUrl, setChannelUrl] = useState('');\r\n\r\n  useEffect(() => {\r\n    const initializeChannel = async () => {\r\n      const url = await createGroupChannel();\r\n      setChannelUrl(url);\r\n    };\r\n\r\n    initializeChannel();\r\n  }, []);\r\n\r\n  return (\r\n    <SendBirdProvider appId={process.env.REACT_APP_SENDBIRD_APP_ID} userId=\"guest_user\" nickname=\"Guest\">\r\n      <div className=\"app\">\r\n        <div className=\"left-panel\">\r\n          <ChannelList />\r\n        </div>\r\n        <div className=\"right-panel\">\r\n          {channelUrl && <Channel channelUrl={channelUrl} />}\r\n          <ChatComponent channelUrl={channelUrl} />\r\n        </div>\r\n      </div>\r\n    </SendBirdProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// utils.js\r\n\r\nexport const createGroupChannel = async () => {\r\n  const response = await fetch('https://api-255A6E1D-2863-492B-AEAC-C7351A429D95.sendbird.com/v3/group_channels', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Api-Token': '14808b2c48020361fef4a425b64a5312d942f07b'\r\n    },\r\n    body: JSON.stringify({\r\n      name: \"Sample Group Channel\",\r\n      user_ids: [\"guest_user\"],\r\n      is_distinct: true\r\n    })\r\n  });\r\n  const data = await response.json();\r\n  return data.channel_url;\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css'; // 스타일 시트를 임포트합니다\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}