{"version":3,"sources":["ChatComponent.js","ProfileModal.js","utils.js","App.js","index.js"],"names":["ChatComponent","_ref","channelUrl","question","setQuestion","useState","response","setResponse","messages","setMessages","useEffect","storedMessages","JSON","parse","localStorage","getItem","_jsxs","className","children","_jsx","map","msg","index","type","placeholder","value","onChange","e","target","onClick","async","trim","res","fetch","concat","method","headers","body","stringify","message_type","user_id","message","data","json","newMessages","setItem","ProfileModal","user","closeModal","setUser","nickname","setNickname","profileUrl","setProfileUrl","updatedUser","userId","profile_url","updateUser","App","setChannelUrl","showModal","setShowModal","url","name","user_ids","channel_url","createGroupChannel","initializeChannel","SendBirdProvider","appId","process","ChannelList","Channel","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d06a9d69.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction ChatComponent({ channelUrl }) {\r\n  const [question, setQuestion] = useState('');\r\n  const [response, setResponse] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const storedMessages = JSON.parse(localStorage.getItem('messages')) || [];\r\n    setMessages(storedMessages);\r\n  }, []);\r\n\r\n  const handleSend = async () => {\r\n    if (question.trim() === '' || !channelUrl) return;\r\n\r\n    const res = await fetch(`https://api-255A6E1D-2863-492B-AEAC-C7351A429D95.sendbird.com/v3/group_channels/${channelUrl}/messages`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Token': '14808b2c48020361fef4a425b64a5312d942f07b'\r\n      },\r\n      body: JSON.stringify({\r\n        message_type: 'MESG',\r\n        user_id: 'guest_user',\r\n        message: question\r\n      })\r\n    });\r\n\r\n    const data = await res.json();\r\n    const newMessages = [...messages, { question, response: data.message }];\r\n    setMessages(newMessages);\r\n    localStorage.setItem('messages', JSON.stringify(newMessages));\r\n    setResponse(data.message);\r\n    setQuestion('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"messages\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index}>\r\n            <strong>질문:</strong> {msg.question}\r\n            <br />\r\n            <strong>응답:</strong> {msg.response}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"질문을 입력하세요...\"\r\n          value={question}\r\n          onChange={(e) => setQuestion(e.target.value)}\r\n        />\r\n        <button onClick={handleSend}>전송</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatComponent;\r\n","import React, { useState } from 'react';\r\nimport { updateUser } from './utils';\r\nimport './ProfileModal.css';\r\n\r\nfunction ProfileModal({ user, closeModal, setUser }) {\r\n  const [nickname, setNickname] = useState(user.nickname);\r\n  const [profileUrl, setProfileUrl] = useState(user.profileUrl);\r\n\r\n  const handleUpdate = async () => {\r\n    const updatedUser = await updateUser(user.userId, nickname, profileUrl);\r\n    setUser(updatedUser);\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <h2>프로필 수정</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={nickname}\r\n          onChange={(e) => setNickname(e.target.value)}\r\n          placeholder=\"닉네임\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={profileUrl}\r\n          onChange={(e) => setProfileUrl(e.target.value)}\r\n          placeholder=\"프로필 이미지 URL\"\r\n        />\r\n        <button onClick={handleUpdate}>저장</button>\r\n        <button onClick={closeModal}>취소</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileModal;\r\n","export const createGroupChannel = async () => {\r\n    const response = await fetch('https://api-255A6E1D-2863-492B-AEAC-C7351A429D95.sendbird.com/v3/group_channels', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Token': '14808b2c48020361fef4a425b64a5312d942f07b'\r\n      },\r\n      body: JSON.stringify({\r\n        name: 'EBG 지식도우미',\r\n        user_ids: ['guest_user']\r\n      })\r\n    });\r\n  \r\n    const data = await response.json();\r\n    return data.channel_url;\r\n  };\r\n  \r\n  export const updateUser = async (userId, nickname, profileUrl) => {\r\n    const response = await fetch(`https://api-255A6E1D-2863-492B-AEAC-C7351A429D95.sendbird.com/v3/users/${userId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Token': '14808b2c48020361fef4a425b64a5312d942f07b'\r\n      },\r\n      body: JSON.stringify({\r\n        nickname,\r\n        profile_url: profileUrl\r\n      })\r\n    });\r\n  \r\n    const data = await response.json();\r\n    return data;\r\n  };\r\n  ","import React, { useEffect, useState } from 'react';\r\nimport { SendBirdProvider, Channel, ChannelList } from '@sendbird/uikit-react';\r\nimport '@sendbird/uikit-react/dist/index.css';\r\nimport './App.css';\r\nimport ChatComponent from './ChatComponent';\r\nimport ProfileModal from './ProfileModal';\r\nimport { createGroupChannel } from './utils';\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState({\r\n    userId: 'guest_user',\r\n    nickname: 'Guest',\r\n    profileUrl: ''\r\n  });\r\n  const [channelUrl, setChannelUrl] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const initializeChannel = async () => {\r\n      const url = await createGroupChannel();\r\n      setChannelUrl(url);\r\n    };\r\n\r\n    initializeChannel();\r\n  }, []);\r\n\r\n  return (\r\n    <SendBirdProvider appId={process.env.REACT_APP_SENDBIRD_APP_ID} userId={user.userId} nickname={user.nickname}>\r\n      <div className=\"app\">\r\n        <div className=\"left-panel\">\r\n          <ChannelList />\r\n        </div>\r\n        <div className=\"right-panel\">\r\n          <div className=\"sendbird-ui-header__middle\" onClick={() => setShowModal(true)}>\r\n            {user.nickname}\r\n          </div>\r\n          {channelUrl && <Channel channelUrl={channelUrl} />}\r\n          <ChatComponent channelUrl={channelUrl} />\r\n        </div>\r\n        {showModal && (\r\n          <ProfileModal\r\n            user={user}\r\n            closeModal={() => setShowModal(false)}\r\n            setUser={setUser}\r\n          />\r\n        )}\r\n      </div>\r\n    </SendBirdProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css'; // 스타일 시트를 임포트합니다\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}